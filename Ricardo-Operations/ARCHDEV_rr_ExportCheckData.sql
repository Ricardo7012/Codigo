use HSP
go

set quoted_identifier on
set ansi_nulls on
go

create procedure rr_ExportCheckData_ARCHDEV
    (
        @SessionID Id_t = null
       ,@CompanyID Id_t = null
       ,@CashAccountID Id_t = null
                                                --these dates will filter off the CheckDate, not the creation date on the records table
       ,@StartDate Date_t = null
       ,@EndDate Date_t = null
       ,@TimePeriod StringShort_t = null
                                                --should be MEM, PRV, BRK, or CPT picked from a combo box
       ,@EntityType Code_t = null
       ,@PaymentClass Code_t = null
                                                -- filter using Vendor Class
       ,@VendorClass Code_t = null
       ,@VendorSubClass Code_t = null
                                                --if passed check if exists and grab all vendors in a temp table
       ,@EIN IDNumber_t = null
                                                ---group number parameter should only be used when in usage |WITHCLAIMS| or |WITHSERVICELINES|
       ,@GroupNumber REFNumber_t = null         --'ALL',--defaults to 'ALL' from report
       ,@GroupNumberMask StringMedium_t = null
       ,@GroupLOB Description_t = null
       ,@GroupProductLine Description_t = null
       ,@GroupCoverage Description_t = null
       ,@GroupProductType Description_t = null
       ,@CompanyName Name_t = null
       ,@RiskGroupID Id_t = null
       ,@RiskGroupClass Code_t = null
       ,@RiskGroupSubClass Code_t = null
       ,@RiskGroupVendorClass Code_t = null
       ,@RiskGroupVendorSubClass Code_t = null
       ,@CheckNumber REFNumber_t = null
       ,@CheckStatus Code_t = null
       ,@CheckRunJobNumber REFNumber_t = null
                                                --Added takes the place of the negative and zero dollar parameter
       ,@ShowPositiveChecksOnly YesNo_t = 'N'   --removes zero and negative checks (linkia only one who would have neg checks)
       ,@RemoveZeroDollarClaimPayments YesNo_t = 'N'
       ,@ShowVoidedChecks YesNo_t = 'N'
       ,@ShowPaymentWizardVoidedChecks YesNo_t = 'N'
       ,@ShowWriteOffs YesNo_t = 'N'
       ,@MethodOfPayment Code_t = null
       ,@ShowUnconfirmedChecks YesNo_t = 'N'
       ,@ShowCheckDeposits YesNo_t = 'Y'
       ,@RecordType Code_t = null
       ,@ProviderSpecialtyCategoryID Id_t = null
       ,@ProviderSpecialtySubCategoryID Id_t = null
       ,@ProviderSpecialtyID Id_t = null
       ,@ContractID Id_t = null
       ,@NetworkID Id_t = null
       ,@ColumnList varchar(max) = null
       ,@TableUsage StringShort_t = null
       ,@ResultTableName varchar(80) = null
       ,@UserReportID Id_t = null
       ,@ResultsetName Description_t = null
       ,@Debug int = 0
       ,@ReturnStatus YesNo_t = 'Y'
       ,@Usage StringShort_t = '|CHECKSONLY|'
                                                --New Update Usages
       ,@ReturnDiagnosisCodes Code_t = 'N'
       ,@ReturnMemberInfo Code_t = 'N'
       ,@ReturnProviderInfo Code_t = 'N'
       ,@ReturnOfficeInfo Code_t = 'N'
       ,@ReturnVendorInfo Code_t = 'N'
       ,@ReturnGroupInfo Code_t = 'N'
       ,@ReturnAccountInfo Code_t = 'N'
       ,@ReturnRiskGroupInfo Code_t = 'N'
       ,@ReturnExplanationInfo Code_t = 'N'
       ,@ReturnPCPInfo Code_t = 'N'
       ,@ReturnBalanceInfo Code_t = 'N'
    )

--removed scb
--to be able to filter by check status on the record 
--	@RecordStatus	Code_t = null,--all, V,PRT,CRT--created checks wont show up any more
--	@ChecksWithNegativeAmounts YesNo_t = 'N',--default to 'N' from report
--	@ShowCheckDetails YesNo_t = 'N',--default to 'N' from report
--	@ShowZeroChecks YesNo_t = 'N',
--	@CheckType	Code_T = 'ALL', --CPT or CPY for capitation or claim payments

with encryption
as
    begin


        /*
© 1996-2016 Health Solutions Plus, Inc. All Rights Reserved.THIS IS LICENSED MATERIAL.
ONLY LICENSED PERSONS AND ENTITIES ARE ALLOWED TO POSSESS EITHER THE ORIGINAL OR ANY COPY OF 
THE LICENSED MATERIAL WITHOUT THE PERMISSION OF THE LICENSOR, HEALTH SOLUTIONS PLUS, INC.  The source code, whether in
human readable, machine readable, or compiled form (“Code”) and all algorithms, data structures and database schemas are
the confidential and proprietary trade secrets of Health Solutions Plus, Inc. its successors or assigns, and they are not
to be reproduced by any means, modified, stored, displayed, disseminated in any form by any means, or disclosed to
employees or third parties except as specifically permitted in the Source Code License Agreement between Health Solutions
Plus, Inc. and Code Licensee or other entity, (“License”).  USE, REPRODUCTION OR DISCLOSURE OF THE CODE, OR OF THE
CONFIDENTIAL OR PROPRIETARY TRADE SECRET INFORMATION CONTAINED THEREIN, EXCEPT AS STRICTLY PERMITTED BY THE LICENSE IS
UNLAWFUL, AND WILL SUBJECT THE VIOLATOR TO CIVIL DAMAGES AND PENALTIES OR CRIMINAL PENALTIES IN ACCORDANCE WITH STATE AND
FEDERAL LAWS.
Support for this code is provided by HSP Tech Support at (631)271-7682 during the hours of 9:00 AM to 5:00PM EST.
THIS NOTICE IS NOT TO BE REMOVED FROM THE CODE UNDER ANY CIRCUMSTANCES AND MUST BE INCLUDED IN ANY COPIES WHICH MAY BE MADE
BY LICENSEE.
*/


        set nocount on

        -- Set transaction isolation level to read uncommitted to allow dirty reads & prevent deadlocks
        set transaction isolation level read uncommitted

        declare @UserId Id_t
               ,@status int
               ,@rowcount int
               ,@error int
               ,@internal int
               ,@ProductName StringMedium_t
               ,@ProcedureName StringMedium_t
               ,@ProcedureStep int
               ,@UserMsg StringMedium_t
               ,@LogMsg StringMedium_t
               ,@SeriesCount int
               ,@Total int
               ,@MemberId Id_t
               ,@ChStatus Code_t
               ,@ExpAcctId Id_t
               ,@MembersPaid int
               ,@ProvidersPaid int
               ,@VoidedChecks int
               ,@NonPrintedChecks int
               ,@PrintedChecks int
               ,@TotalChecks int
               ,@TotalProviderAmount Money_t
               ,@TotalMemberAmount Money_t
               ,@GroupID Id_t
               ,@CorporationID Id_t
               ,@sql varchar(max)
               ,@SQLAttr varchar(max)
               ,@msg1 StringMedium_t
               ,@msg2 StringMedium_t
               ,@DefaultInputBatchID Id_t
               ,@UseProvidersTable YesNo_t
               ,@PaymentReceived Code_t
               ,@WriteOff Code_t
               ,@JobId Id_t
               ,@topGroupId Id_t
               ,@counter int
               ,@totalGroups int
               ,@SysOptEntityAttrValues StringMedium_t
               ,@IncludeOrderByClause int
               ,@GroupLOBCode Code_t
               ,@GroupProductLineCode Code_t
               ,@GroupCoverageCode Code_t
               ,@GroupProductTypeCode Code_t
               ,@ErrorMsg ErrorMsg_t
               ,@FullRowCount int
               ,@PermittedCount int
               ,@RestrictedCount int
               ,@MemberCoverageEntityID Id_t
               ,@GroupCoverageEntityID Id_t
               ,@ForwardingBalanceId Id_t
               ,@PreviousForwardingBalanceId Id_t

        select  @UserId = 0
               ,@status = 0
               ,@rowcount = 0
               ,@error = 0
               ,@ProductName = ''
               ,@ProcedureName = 'rr_ExportCheckData'
               ,@ProcedureStep = 0
               ,@UserMsg = ''
               ,@LogMsg = ''
               ,@SeriesCount = 1
               ,@Total = 0
               ,@ChStatus = 'VD'
               ,@GroupID = null
               ,@TotalChecks = 0
               ,@TotalMemberAmount = 0
               ,@TotalProviderAmount = 0
               ,@UseProvidersTable = 'N'
               ,@counter = 0
               ,@totalGroups = 0
               ,@SysOptEntityAttrValues = dbo.ff_GetSysOptionValue('MEDITRAC', 'CLAIMENTITYATTRIBUTES', null)
               ,@IncludeOrderByClause = 0
               ,@FullRowCount = 0
               ,@PermittedCount = 0
               ,@RestrictedCount = 0

        -- find out if SessionID is valid and find the UserID

        if @ReturnStatus = 'Y'
           and  @SessionID is not null
            begin
                select  @UserId = UserID
                       ,@ProductName = ProductName
                from    Sessions
                where   SessionID = @SessionID
                        and DisconnectTime is null

                select  @rowcount = @@rowcount

                if @rowcount = 0
                    begin
                        select  @ProcedureStep = 1
                        select  @UserMsg = 'Your SessionId is invalid. Contact your system administrator'
                        select  @LogMsg = 'SessionId ' + convert(varchar(10), @SessionID) + ' is invalid in table Sessions.'
                        raiserror(65500, 1, 1, @ProductName, @ProcedureName, @ProcedureStep, @UserMsg, @LogMsg, @SessionID, -1, @rowcount, 1)
                        goto AppErrorExit
                    end
            end -- if @ReturnStatus = 'Y'

        if @RemoveZeroDollarClaimPayments = 'Y'
           and  @Usage = '|CHECKSONLY|'
            begin
                select  @UserMsg
                    = 'The value of RemoveZeroDollarClaimPayments parameter can only be set to "Yes" when the usage is set to either "ONEDETAILLEVEL" or "TWODETAILLEVELS'
                raiserror(65500, 1, 1, @ProductName, @ProcedureName, @ProcedureStep, @UserMsg, @LogMsg, @SessionID, -1, @rowcount, 1)
                goto BusinessErrorExit
            end

        if @ReturnBalanceInfo = 'TOI'
           and  @Usage = '|CHECKSONLY|'
            begin
                select  @UserMsg = 'Usage : |CHECKSONLY| is not supported when parameter Return Balance Info is set to Totals and Individual Items'
                raiserror(65500, 1, 1, @ProductName, @ProcedureName, @ProcedureStep, @UserMsg, @LogMsg, @SessionID, -1, @rowcount, 1)
                goto BusinessErrorExit
            end

        if @TimePeriod in ('THISWEEK', 'LASTWEEK', 'THISMONTH', 'LASTMONTH', 'ALLTIME')
            begin
                exec ii_GetDateOffsets @BaseTime = null
                                      ,@Usage = @TimePeriod
                                      ,@PeriodStart = @StartDate out
                                      ,@PeriodEnd = @EndDate out
            end

        --Check dates entered
        if isnull(@StartDate, '') = ''
            begin
                select  @StartDate = '01/01/1900'
            end

        if isnull(@EndDate, '') = ''
            begin
                select  @EndDate = '12/31/9999'
            end

        --	
        -- 	adjust time
        --

        select  @StartDate = convert(varchar, @StartDate, 101) + ' 00:00:00'
               ,@EndDate = convert(varchar, @EndDate, 101) + ' 23:59:59'

        create table #ResultSet
            (
                PeriodStart Date_t null
               ,PeriodEnd Date_t null
                                                            --check info
               ,CheckID Id_t
               ,CheckStatusCode Code_t
               ,CheckNumber REFNumber_t null                --leave this null just in case probably should never be
               ,CheckDate Date_t
               ,CheckAmount Money_t
               ,CheckVoidReason StringMedium_t null
               ,WriteOffReason Description_t null
               ,WriteOffReasonCode Code_t null
                                                            --record info
               ,RecordID Id_t
               ,ParentAccountID Id_t                        --refers back to the vendor
               ,CompanyID Id_t null
               ,CashAccountId Id_t null
               ,RecordTypeCode Code_t
               ,RecordType Description_t null
               ,RecordStatusCode Code_t
               ,EntityTypeCode Code_t
               ,CreationDate Date_t                         --record creation date set from screen
               ,ProcessedDate Date_t                        --actual time the check was created on the screen
               ,LastUpdatedAt Date_t
               ,LastUpdatedBy Id_t
               ,LastUpdatedByName Name_t null
               ,VoidDate Date_t null
               ,Notes StringMedium_t null
               ,CheckGroupID Id_t null
               ,MethodOfPayment Code_t null
               ,VoidInsert YesNo_t
                    default 'N'
               ,PaymentWizardJobCheckDate Date_t null

                                                            --- For Claim Payment records
               ,PaymentClassCode Code_t null
                                                            --informational columns to show to the screen
               ,CheckStatus Description_t null
               ,RecordStatus Description_t null
               ,EntityType Description_t null
               ,PaymentClass Description_t null
               ,AccountName Name_t null
               ,CompanyName Name_t null
               ,FractionalRoutingNumber StringMedium_t null
               ,SecondaryFractionalRoutingNumber StringMedium_t null
               ,BankAcountNumber AccountNumber_t null
               ,RoutingNumber AccountNumber_t null
               ,BankCode StringMedium_t null
               ,BankName Name_t null
               ,BankAddress1 Address_t null
               ,BankAddress2 Address_t null
               ,BankCity City_t null
               ,BankState State_t null
               ,BankZip PostalCode_t null
               ,BankCounty County_t null
               ,BankCountryCode REFNumber_t null
               ,MICRFormat Code_t null
               ,CashAccountName Name_t null
               ,CashAccountNumber REFNumber_t null
               ,CashAccountBankAcountNumber AccountNumber_t null
               ,CashAccountRoutingNumber AccountNumber_t null
               ,CashFractionalRoutingNumber StringMedium_t null
               ,CashSecondaryFractionalRoutingNumber StringMedium_t null
               ,CashAccountBankCode StringMedium_t null
               ,CashAccountBankName Name_t null
               ,CashAccountBankAddress1 Address_t null
               ,CashAccountBankAddress2 Address_t null
               ,CashAccountBankCity City_t null
               ,CashAccountBankState State_t null
               ,CashAccountBankZip PostalCode_t null
               ,CashAccountBankCounty County_t null
               ,CashAccountBankCountryCode REFNumber_t null
               ,CashAccountMICRFormat Code_t null
                                                            --information about each check
               ,VendorID Id_t null
               ,VendorNumber REFNumber_t null
               ,VendorName Name_t null
               ,VendorAddress1 Address_t null
               ,VendorAddress2 Address_t null
               ,VendorCity City_t null
               ,VendorState State_t null
               ,VendorZip PostalCode_t null
               ,VendorCounty County_t null
               ,VendorCountryCode REFNumber_t null
               ,VendorClass Code_t null
               ,VendorSubClass Code_t null
               ,VendorClassName Description_t null
               ,VendorSubclassName Description_t null
               ,PayToName Name_t null
               ,PayToAddress1 Address_t null
               ,PayToAddress2 Address_t null
               ,PayToCity City_t null
               ,PayToState State_t null
               ,PayToZip PostalCode_t null
               ,PayToCountryCode REFNumber_t null
               ,PayToCounty County_t null
               ,PayToPhone Phone_t null
               ,PaymentCurrency Code_t null
               ,PaymentCurrencyName Description_t null
               ,EIN REFNumber_t null
               ,CorporationId Id_t null
               ,CorporationName Name_t null
               ,EFTBankName Name_t null
               ,EFTAccountName Description_t null
               ,EFTRoutingNumber AccountNumber_t null
               ,EFTAccountNumber REFNumber_t null
               ,ExpenseAccountNumber REFNumber_t null
               ,ExpenseAccountName Name_t null
               ,RateCoverageType Code_t null
               ,RateCoverageTypeName Description_t null
               ,QualifierId Id_t null
               ,QualifierName Description_t null
               ,QualifierPlanId Id_t null
               ,QualifierPlanName Name_t null
                                                            --for CLAIMS AND SERVICE LINES USAGES
               ,FinancialRecordID Id_t null
               ,FinancialRecordDetailID Id_t null
               ,RecordDetailId Id_t null
               ,RecordDetailType Code_t null
               ,ReferenceNumber Id_t null
               ,RecordDetailName Description_t null
               ,DetailPaidAmount Money_t null
               ,DetailGroupID Id_t null
               ,DetailCreationDate Date_t null
               ,AdjustmentVersion Id_t null
               ,MemberId Id_t null
               ,SubscriberContractID Id_t null
               ,ProviderID Id_t null
               ,ProviderName varchar(255) null
               ,ProviderLastName Name_t null
               ,ProviderFirstName FirstName_t null
               ,ProviderNumber REFNumber_t null
               ,ProviderType Code_t null
               ,OfficeID Id_t null
               ,HospitalID Id_t null
               ,ClosedDate Date_t null
               ,ClosedVersion int null
               ,AdjustedClosedDate Date_t null
               ,CaseID Id_t null
               ,ServiceDateFrom Date_t null
               ,ServiceDateTo Date_t null


                                                            --- Added for Auto-Adjudication rate
               ,InitialAdjudicationVersion int null
               ,InitialAdjudicationDate Date_t null
               ,AdjudicationActionCodes char(1) null
               ,PaymentActionCodes char(1) null
               ,CategoryI char(1) null
               ,CategoryII char(1) null
               ,CategoryIII char(1) null
                                                            --update these columns
               ,DetailGroupNumber REFNumber_t null
               ,DetailGroupName Name_t null
               ,DetailGroupType Code_t null
               ,DetailGroupLineOfBusinessCode Code_t null
               ,DetailGroupLineOfBusiness Description_t null
               ,DetailGroupProductTypeCode Code_t null
               ,DetailGroupProductType Description_t null
               ,ClaimId Id_t null
               ,ClaimNumber ClaimNumber_t null
               ,DateReceived Date_t null
               ,DateEOBPrinted Date_t null
               ,UtilizationDate Date_t null
                                                            --ParentGroup
               ,GroupId Id_t null
               ,ParentGroupID Id_t null
               ,ParentGroupName Name_t null
               ,ParentGroupNumber REFNumber_t null
               ,SocialSecurityNumber IDNumber_t null
               ,MemberNumber REFNumber_t null
               ,MemberPolicyNumber REFNumber_t null
               ,SubscriberName varchar(255) null
               ,SubscriberID Id_t null
               ,SubscriberNumber REFNumber_t null
               ,PatientName varchar(255) null
               ,PatientDOB Date_t null
               ,PatientZip PostalCode_t null
               ,PatientZipSearch PostalCode_t null
               ,PatientRegion Code_t null
               ,FormTypeCode Code_t null
               ,FormType Description_t null
               ,ClaimStatus Code_t null
               ,ClaimType Code_t null
               ,ContractID Id_t null
               ,ContractName Name_t null
                                                            --- Office Columns
               ,OfficeName Name_t null
               ,OfficeNumber REFNumber_t null
               ,OfficeAddress Address_t null
               ,OfficeAddress2 Address_t null
               ,OfficeCity City_t null
               ,OfficeState State_t null
               ,OfficeZip PostalCode_t null
               ,OfficeZipSearch PostalCode_t null
               ,OfficeRegion Code_t null
               ,OfficeCounty County_t null
                                                            --claimdetails
               ,ProcedureCode ProcedureCode_t null
               ,Tooth Code_t null
               ,ModifierCode Code_t null
               ,Modifier Description_t null
               ,Modifier2Code Code_t null
               ,Modifier2 Description_t null
               ,Modifier3Code Code_t null
               ,Modifier3 Description_t null
               ,Modifier4Code Code_t null
               ,Modifier4 Description_t null
               ,PlaceOfServiceCode Code_t null
               ,PlaceOfService Description_t null
               ,TypeOfServiceCode Code_t null
               ,TypeOfService Description_t null
               ,COB Money_t null
               ,BilledCurrencyAmount decimal(28, 10) null   -- Money_Extended_t, Table - Claim_Details
               ,ExchangeRate decimal(28, 10) null           -- Money_Extended_t, Table - Claim_Results
               ,InputBatchID Id_t null
               ,DefaultInputBatch YesNo_t null
               ,WebClaim YesNo_t null
               ,LineServiceDateFrom Date_t null
               ,LineServiceDateTo Date_t null
               ,StatementCoversFrom Date_t null
               ,StatementCoversTo Date_t null
               ,LineSOC Money_t null
                                                            --New Details
               ,AmountMaximumAllowed Money_t null
               ,AmtRepriced Money_t null
               ,Surface varchar(10) null
               ,SuppliedUCR Money_t null
               ,ServiceUnits real null
               ,HCPCSRates ProcedureCode_t null
               ,FeeCode Code_t null
               ,EPSDTPlan YesNo_t null
               ,EMG YesNo_t null
               ,DiagnosisPtr1 varchar(2) null
               ,DiagnosisPtr2 varchar(2) null
               ,DiagnosisPtr3 varchar(2) null
               ,DiagnosisPtr4 varchar(2) null
               ,DiagnosisPtr5 varchar(2) null
               ,DiagnosisPtr6 varchar(2) null
               ,DiagnosisPtr7 varchar(2) null
               ,DiagnosisPtr8 varchar(2) null
               ,Description StringMedium_t null
               ,AdjProcedureCode ProcedureCode_t null
               ,AdjModifier Code_t null
               ,AdjPlaceOfService Code_t null
               ,AdjUnitType Code_t null
               ,AdjServiceUnits real null
                                                            --claim master
               ,TotalCharges Money_t null
               ,BilledCurrency Code_t null
               ,BilledCurrencyName Description_t null
               ,ExternalClaimNumber REFNumber_t null
               ,PatientAccountNumber varchar(20) null
               ,CleanedDate Date_t null
               ,ClaimDateProcessed Date_t null
               ,InterestOnAdjustments Code_t null
               ,InterestOnAdjustmentsName Description_t null
               ,DelayReason Code_t null
               ,ClaimSOC Money_t null
               ,GracePeriod int null
               ,ReallocateClaimLevelAmounts Code_t null
                                                            --Diag Codes
               ,DiagnosisCode1 varchar(10) null
               ,DiagnosisCode2 varchar(10) null
               ,DiagnosisCode3 varchar(10) null
               ,DiagnosisCode4 varchar(10) null
               ,DiagnosisCode5 varchar(10) null
               ,DiagnosisCode6 varchar(10) null
               ,DiagnosisCode7 varchar(10) null
               ,DiagnosisCode8 varchar(10) null
               ,DiagnosisCode9 varchar(10) null
               ,DiagnosisCode10 varchar(10) null
               ,DiagnosisCode11 varchar(10) null
               ,DiagnosisCode12 varchar(10) null
               ,DiagnosisCode13 varchar(10) null
               ,DiagnosisCode14 varchar(10) null
               ,DiagnosisCode15 varchar(10) null
               ,DiagnosisCode16 varchar(10) null
               ,DiagnosisCode17 varchar(10) null
               ,DiagnosisCode18 varchar(10) null
               ,DiagnosisCode19 varchar(10) null
               ,DiagnosisCode20 varchar(10) null
               ,DiagnosisCode21 varchar(10) null
               ,DiagnosisCode22 varchar(10) null
               ,DiagnosisCode23 varchar(10) null
               ,DiagnosisCode24 varchar(10) null
                                                            -- Diag Code Qualifier 'I10'
               ,DiagnosisQualifier1 Code_t null
               ,DiagnosisQualifier2 Code_t null
               ,DiagnosisQualifier3 Code_t null
               ,DiagnosisQualifier4 Code_t null
               ,DiagnosisQualifier5 Code_t null
               ,DiagnosisQualifier6 Code_t null
               ,DiagnosisQualifier7 Code_t null
               ,DiagnosisQualifier8 Code_t null
               ,DiagnosisQualifier9 Code_t null
               ,DiagnosisQualifier10 Code_t null
               ,DiagnosisQualifier11 Code_t null
               ,DiagnosisQualifier12 Code_t null
               ,DiagnosisQualifier13 Code_t null
               ,DiagnosisQualifier14 Code_t null
               ,DiagnosisQualifier15 Code_t null
               ,DiagnosisQualifier16 Code_t null
               ,DiagnosisQualifier17 Code_t null
               ,DiagnosisQualifier18 Code_t null
               ,DiagnosisQualifier19 Code_t null
               ,DiagnosisQualifier20 Code_t null
               ,DiagnosisQualifier21 Code_t null
               ,DiagnosisQualifier22 Code_t null
               ,DiagnosisQualifier23 Code_t null
               ,DiagnosisQualifier24 Code_t null
                                                            -- Present at admission indicators			
               ,POAIndicator1 Code_t null
               ,POAIndicator2 Code_t null
               ,POAIndicator3 Code_t null
               ,POAIndicator4 Code_t null
               ,POAIndicator5 Code_t null
               ,POAIndicator6 Code_t null
               ,POAIndicator7 Code_t null
               ,POAIndicator8 Code_t null
               ,POAIndicator9 Code_t null
               ,POAIndicator10 Code_t null
               ,POAIndicator11 Code_t null
               ,POAIndicator12 Code_t null
               ,POAIndicator13 Code_t null
               ,POAIndicator14 Code_t null
               ,POAIndicator15 Code_t null
               ,POAIndicator16 Code_t null
               ,POAIndicator17 Code_t null
               ,POAIndicator18 Code_t null
               ,POAIndicator19 Code_t null
               ,POAIndicator20 Code_t null
               ,POAIndicator21 Code_t null
               ,POAIndicator22 Code_t null
               ,POAIndicator23 Code_t null
               ,POAIndicator24 Code_t null
                                                            --Claim Results
               ,AllowedUnits Real_t null
               ,AmtCharged Money_t null
               ,AmtDeferred Money_t null
               ,AmtPatientLiability Money_t null
               ,AmtNotCovered Money_t null
               ,AmtCovered Money_t null
               ,AmtDisallowed Money_t null
               ,AmtOverContract Money_t null
               ,AmtFeeAllowed Money_t null
               ,AmtReduction Money_t null
               ,AmtDiscount Money_t null
               ,AmtWithhold Money_t null
               ,AmtEligible Money_t null
               ,AmtCopay Money_t null
               ,AmtCoinsurance Money_t null
               ,AmtDeductible Money_t null
               ,AmtCOB Money_t null
               ,AmtStopLoss Money_t null
               ,AmtExceedMax Money_t null
               ,AmtPrevPaidProv Money_t null
               ,AmtToPay Money_t null
               ,AmtToPayMember Money_t null
               ,AmtUCR Money_t null
               ,AmtOutOfPocket Money_t null
               ,AmtProviderPenalty Money_t null
               ,AmtMemberPenalty Money_t null
               ,AmtPrevPaidMember Money_t null
               ,Status Code_t null
               ,MemberCoverageId Id_t null
               ,BenefitCoverageID Id_t null
               ,BenefitCoverageEffectiveDate Date_t null
               ,BenefitCoverageExpirationDate Date_t null
               ,SalesTaxRateID Id_t null
               ,SalesTaxAmount Money_t null
               ,AmtSOCApplied Money_t null
                                                            --Authorizations
               ,AuthorizationID Id_t null
               ,AuthorizationVersion int null
               ,AuthorizationNumber REFNumber_t null
               ,AuthServiceLineNumber int null
               ,AuthServiceDetailLineNumber int null
                                                            --service line 
               ,LineNumber int null
               ,LinePaidAmount Money_t null
               ,LinePrevPaidAmount Money_t null
               ,LineChargedAmount Money_t null
               ,LineStatus Code_t null
                                                            --Explanation Info On Claims table
               ,ClaimExplanationId Id_t null
               ,ClaimExplanationAbbreviation StringShort_t null
               ,ClaimExplanation StringLong_t null
               ,ClaimExplanationCode StringShort_t null
               ,ClaimExplanationCategoryId Id_t null
               ,ClaimExplanationCategoryName Name_t null
                                                            -- Explanations On Claim_results
               ,ExplanationId Id_t null
               ,ExplanationAbbreviation StringShort_t null
               ,Explanation StringLong_t null
               ,ExplanationCode StringShort_t null
               ,ExplanationCategoryId Id_t null
               ,ExplanationCategoryName Name_t null
                                                            --Repriced Data
               ,ControlNumber REFNumber_t null
               ,SourceNumber varchar(16) null
               ,ExternalBatchNumber StringShort_t null
               ,DateScanned Date_t null
               ,SourceType Code_t null
               ,Class varchar(64) null
               ,SubClass varchar(64) null
               ,DRG ProcedureCode_t null
                                                            --Service category Info
               ,ServiceCategoryId Id_t null
               ,ServiceCategoryName Name_t null
               ,ServiceCategoryClass Description_t null
               ,ServiceCategorySubClass Description_t null
                                                            --Liability Info
               ,LiabilityLevelId Id_t null
               ,LiabilityLevelName Name_t null
               ,LiabilityPackageId Id_t null
               ,LiabilityPackageName Name_t null
                                                            --Fee schedule info
               ,FeeScheduleId Id_t null                     -- FEECOD
               ,FeeScheduleName Name_t null
                                                            -- Reimbursement Info
               ,ReimbursementId Id_t null                   -- PRVORG
               ,ReimbursementName Name_t null
                                                            --Benefit Plan Info
               ,PlanId Id_t null
               ,PlanName Name_t null
               ,LineOfBusiness Description_t null
               ,ProductType Description_t null
               ,ProductLine Description_t null
               ,Coverage Code_t null
               ,CoverageName Description_t null
               ,Coverage2 Code_t null
               ,Coverage2Name Description_t null
               ,Coverage3 Code_t null
               ,Coverage3Name Description_t null
               ,Coverage4 Code_t null
               ,Coverage4Name Description_t null
                                                            --Check Run Job info
               ,PaymentWizardJobName Description_t null
               ,PaymentWizardJobDescription StringMedium_t null
               ,PaymentWizardJobType Code_t null
               ,PaymentWizardJobTypeName Description_t null
               ,PaymentWizardJobId Id_t null
               ,PaymentWizardJobNumber REFNumber_t null
               ,CheckPackageId Id_t null
               ,CheckPackageName Name_t null
               ,PaymentWizardProcessingStatus Code_t null
               ,PaymentWizardProcessingStatusName Description_t null
               ,PaymentWizardFulfillmentType Code_t null
               ,PaymentWizardFulfillmentTypeName Description_t null

                                                            --Top Most Group info
               ,TopGroupId Id_t null
               ,TopGroupName Name_t null
                                                            --Benefit Category Info
               ,BenefitCategoryId Id_t null                 -- BENPKG
               ,BenefitCategoryName Name_t null
               ,DateEncounterExported Date_t null
               ,ExternalCheckNumber REFNumber_t null
               ,ExternalCheckCurrency Code_t null
               ,ExternalCheckCurrencyName Description_t null
               ,ExternalCheckAmount Money_t null
               ,ExternalConversionRate decimal(28, 10) null
               ,ExternalCheckDate date null
               ,ExternalMethodOfPaymentCode Code_t null
               ,ExternalMethodOfPayment Description_t null
               ,CheckClearedDate date null
               ,LevyId Id_t null
               ,LevyNumber REFNumber_t null
               ,ExternalLevyNumber REFNumber_t null
               ,LevyDescription Description_t null
                                                            -- Risk Group info (Capitation only)
               ,RiskGroupVendorMapID Id_t null
               ,RiskGroupID Id_t null
               ,RiskGroupName Name_t null
               ,RiskGroupDescription StringMedium_t null
               ,RiskGroupNumber REFNumber_t null
               ,RiskGroupClassCode Code_t null
               ,RiskGroupClass Description_t null
               ,RiskGroupSubclassCode Code_t null
               ,RiskGroupSubclass Description_t null
               ,RiskGroupVendorClassCode Code_t null
               ,RiskGroupVendorClass Description_t null
               ,RiskGroupVendorSubClassCode Code_t null
               ,RiskGroupvendorSubClass Description_t null
               ,RiskGroupVendorDescription StringMedium_t null
                                                            --Member Provider Map (PCP) Columns **Claim Only**
               ,MemberProviderMapId Id_t null
               ,PCPContractId Id_t null
               ,PCPContractName Name_t null
               ,PCPProviderId Id_t null
               ,PCPOfficeId Id_t null
               ,PCPRiskGroupId Id_t null
               ,PCPHospitalId Id_t null
               ,PCPEffectiveDate Date_t null
               ,PCPExpirationDate Date_t null
               ,PCPPrecedence Code_t null
               ,PCPPrecedenceName Name_t null
               ,PCPLastName Name_t null
               ,PCPFirstName FirstName_t null
               ,PCPProviderNumber REFNumber_t null
               ,PCPOfficeNumber REFNumber_t null
               ,PCPOfficeName Name_t null
               ,PCPOfficeAddress Address_t null
               ,PCPOfficeAddress2 Address_t null
               ,PCPOfficeCity City_t null
               ,PCPOfficeState State_t null
               ,PCPOfficeZip PostalCode_t null
               ,PCPRiskGroupName Name_t null
               ,PCPRiskGroupNumber REFNumber_t null
               ,PCPRiskGroupClass Code_t null
               ,PCPRiskGroupSubclass Code_t null
               ,PCPRiskGroupClassName Description_t null
               ,PCPRiskGroupSubclassName Description_t null
               ,PCPHospitalName StringMedium_t null
               ,PCPHospitalNumber REFNumber_t null
               ,PCPHospitalNPI REFNumber_t null
                                                            --ProviderContractMap
               ,PCPProviderContractNumber REFNumber_t null
                                                            --Column List.  Used only to indicate to the Operational Reports screen that the parameter can be passed into the procedure.
               ,ColumnList YesNo_t null
                                                            -- Unclaimed Property
               ,UnclaimedPropertyVendorId Id_t null
               ,UnclaimedPropertyVendorName Name_t null
               ,UnclaimedPropertyVendorNo REFNumber_t null
               ,ForwardingBalanceId Id_t null
               ,ForwardingBalance Money_t null
               ,PreviousForwardingBalanceId Id_t null
               ,PreviousBalance Money_t null
               ,PreviousCheckNumber REFNumber_t null
               ,PreviousCheckDate Date_t null
            )

        create table #ReportDistinctClaimIds
            (
                ClaimID Id_t not null
            )

        --Build Dynamic SQL
        if 'CST' =
            (
                select  ReportType
                from    UserReports
                where   UserReportId = @UserReportID
            )
            begin
                -- if ReportType is 'Custom' (CST), then use ii_BuildReportingDynamicSQL_V2, which
                -- uses the user-defined SQLString value from UserReports for @sql.
                exec @internal = ii_BuildReportingDynamicSQL_V2 @UserReportID = @UserReportID
                                                               ,@TableUsage = @TableUsage
                                                               ,@ResultTableName = @ResultTableName
                                                               ,@ReportSQL = @sql out
                                                               ,@ErrorMsg = @LogMsg out

                -- set the flag to 1, this will exclude the order by clauses from 
                -- dynamic sql that has been created via ii_BuildReportingDynamicSQL_V2
                select  @IncludeOrderByClause = 1

                select  @error = @@error
            end -- if 'CST' = (select ReportType...
        else
            begin
                -- if ReportType is 'Standard' (STD) or NULL, then use ii_BuildReportingDynamicSQL_ARCHDEV, which
                -- builds a value for @sql based upon @ColumnList and the custom attributes
                exec @internal = ii_BuildReportingDynamicSQL_ARCHDEV @ResultSetName = '#ResultSet'
                                                            ,@ColumnList = @ColumnList
                                                            ,@TableUsage = @TableUsage
                                                            ,@ResultTableName = @ResultTableName
                                                            ,@ReportSQL = @sql out
                                                            ,@ErrorMsg = @LogMsg out

                select  @error = @@error
            end -- else (if 'CST' = (select ReportType...)

        if @error != 0
            begin
                select  @ProcedureStep = 1
                       ,@UserMsg = 'The Dynamic SQL Build failed'
                       ,@LogMsg = 'ii_BuildReportingDynamicSQL_ARCHDEV failed'
                raiserror(65500, 1, 1, @ProductName, @ProcedureName, @ProcedureStep, @UserMsg, @LogMsg, @SessionID, @error, @rowcount, 1)
                goto AppErrorExit
            end -- if @error != 0
        else if @internal != 0
                 begin
                     select @ProcedureStep = 1
                           ,@UserMsg = 'The Dynamic SQL Build encountered an error'
                           ,@LogMsg = 'ii_BuildReportingDynamicSQL_ARCHDEV encountered an error: ' + @LogMsg
                     raiserror(65500, 1, 1, @ProductName, @ProcedureName, @ProcedureStep, @UserMsg, @LogMsg, @SessionID, @error, @rowcount, 1)
                     goto AppErrorExit
                 end -- else if @internal != 0


        if isnull(@SysOptEntityAttrValues, '') != ''
            begin

                -- build sql to return entity attrbutes stamped on the claims in the 2nd RS
                exec @internal = ii_BuildReportingDynamicSQL_ClaimAttributes @ResultTableName = '#ReportDistinctClaimIds'
                                                                            ,@TableUsage = @TableUsage
                                                                            ,@ReportSQL = @SQLAttr out
                                                                            ,@ErrorMsg = @UserMsg out

                select  @error = @@error

                if @error != 0
                    begin
                        select  @ProcedureStep = 1
                               ,@UserMsg = 'The Dynamic SQL Build failed.[ClaimEntityAttributes]'
                               ,@LogMsg = 'ii_BuildReportingDynamicSQL_ClaimAttributes failed.'
                        raiserror(65500, 1, 1, @ProductName, @ProcedureName, @ProcedureStep, @UserMsg, @LogMsg, @SessionID, @error, @rowcount, 1)
                        goto AppErrorExit
                    end -- if @error != 0
                else if @internal != 0
                         begin
                             select @ProcedureStep = 1
                             select @LogMsg = 'ii_BuildReportingDynamicSQL_ClaimAttributes encountered an error: ' + isnull(@UserMsg, '')
                             raiserror(65500, 1, 1, @ProductName, @ProcedureName, @ProcedureStep, @UserMsg, @LogMsg, @SessionID, @error, @rowcount, 1)
                             if @internal = 1
                                 goto BusinessErrorExit
                             else if @internal = 2
                                 goto ServerErrorExit
                             else if @internal = 3
                                 goto AppErrorExit

                         end -- else if @internal != 0	

            end

        ---
        --- If the usage text passed in reads '|init|' then pass back a blank resultset
        ---
        if charindex('|INIT|', @Usage) != 0
            begin
                goto NormalExit
            end


        --Check that group number is not passed when register in "CHECKSONLY" mode
        if @Usage = '|CHECKSONLY|'
           and
                (
                    @GroupNumber is not null
                    or  @RecordType is not null
                    or  @ProviderSpecialtyID is not null
                    or  @ProviderSpecialtySubCategoryID is not null
                    or  @ProviderSpecialtyCategoryID is not null
                    or  @ContractID is not null
                    or  @NetworkID is not null
                    or  @GroupLOB is not null
                    or  @RiskGroupID is not null
                    or  @RiskGroupClass is not null
                    or  @RiskGroupSubClass is not null
                    or  @RiskGroupVendorClass is not null
                    or  @RiskGroupVendorSubClass is not null
                )
            begin
                select  @UserMsg
                    = 'The following field(s) cannot be specified as filter for the CHECKS ONLY usage:'
                      + case when @GroupNumber is not null then ' Group Number,'
                             else                                                                                   ''
                        end + case when @GroupLOB is not null then ' Group Line of Business,'
                                   else                                                                                   ''
                              end + case when @RecordType is not null then ' Record Type,'
                                         else                                                                                   ''
                                    end + case when @ProviderSpecialtyID is not null then ' Provider Specialty,'
                                               else                                                                                   ''
                                          end + case when @ProviderSpecialtySubCategoryID is not null then ' Provider Specialty Sub-Category,'
                                                     else                                                                                   ''
                                                end + case when @ProviderSpecialtyCategoryID is not null then ' Provider Specialty Category,'
                                                           else                                                                                   ''
                                                      end + case when @ContractID is not null then ' Contract,'
                                                                 else                                                                                   ''
                                                            end
                      + case when @NetworkID is not null then ' Network,'
                             else                                                                                   ''
                        end + case when @RiskGroupID is not null then ' Risk Group,'
                                   else                                                                                   ''
                              end + case when @RiskGroupClass is not null then ' Risk Group Class,'
                                         else                                                                                   ''
                                    end + case when @RiskGroupSubClass is not null then ' Risk Group Sub Class,'
                                               else                                                                                   ''
                                          end + case when @RiskGroupVendorClass is not null then ' Risk Group Vendor Class,'
                                                     else                                                                                   ''
                                                end + case when @RiskGroupVendorSubClass is not null then ' Risk Group Vendor Sub Class,'
                                                           else                                                                                   ''
                                                      end
                select  @UserMsg = left(@UserMsg, len(@UserMsg) - 1)
                raiserror(65500, 1, 1, @ProductName, @ProcedureName, @ProcedureStep, @UserMsg, @LogMsg, @SessionID, -1, @rowcount, 1)
                goto BusinessErrorExit
            end

        ---
        --- Make sure risk group filters are only filled out when the @ReturnRiskGroupInfo flag is turned on.
        ---
        if @ReturnRiskGroupInfo = 'N'
           and
                (
                    @RiskGroupID is not null
                    or  @RiskGroupVendorClass is not null
                    or  @RiskGroupVendorSubClass is not null
                    or  @RiskGroupClass is not null
                    or  @RiskGroupSubClass is not null
                )
            begin
                select  @UserMsg = 'Risk group filters can only be used if the Return Risk Group Info flag is set to Yes.'
                raiserror(65500, 1, 1, @ProductName, @ProcedureName, @ProcedureStep, @UserMsg, @LogMsg, @SessionID, -1, @rowcount, 1)
                goto BusinessErrorExit
            end

        --If the option to return check deposits has been turned on, make sure a method of payment has not been specified.
        if isnull(@ShowCheckDeposits, 'N') = 'Y'
           and  isnull(@MethodOfPayment, '') != ''
            begin
                select  @UserMsg = 'The Show Check Deposits option can not be turned on if a Method Of Payment has been specified.'
                raiserror(65500, 1, 1, @ProductName, @ProcedureName, @ProcedureStep, @UserMsg, @LogMsg, @SessionID, -1, @rowcount, 1)
                goto BusinessErrorExit
            end

        -- Set the PaymentReceived record type if the "Include Check Deposits" option is turned on 
        if isnull(@ShowCheckDeposits, 'N') = 'Y'
            begin
                select  @PaymentReceived = 'PR'
            end

        -- Set the WriteOff record type if the "Show Write-Offs" option is turned on
        if isnull(@ShowWriteOffs, 'N') = 'Y'
            begin
                select  @WriteOff = 'WO'
            end

        -- If the ShowPaymentWizardVoidedChecks flag is set to 'Y', the ShowVoidedChecks flag must also be set to 'Y'
        if isnull(@ShowPaymentWizardVoidedChecks, 'N') = 'Y'
            begin
                if isnull(@ShowVoidedChecks, 'N') != 'Y'
                    begin
                        select  @UserMsg
                            = 'When the Show Payment Wizard Voided Checks option is set to Yes, the Show Voided Checks option must also be set to Yes.'
                        raiserror(65500, 1, 1, @ProductName, @ProcedureName, @ProcedureStep, @UserMsg, @LogMsg, @SessionID, -1, @rowcount, 1)
                        goto BusinessErrorExit
                    end
            end

        create table #CashAccounts
            (
                CompanyId Id_t not null
               ,CashAccountId Id_t not null
            )

        insert into #CashAccounts
            (
                CompanyId
               ,CashAccountId
            )
        select  CompanyID
               ,AccountID
        from    Accounts
        where   CompanyID = isnull(@CompanyID, CompanyID)
                and AccountID = isnull(@CashAccountID, AccountID)
                and AccountType = 'CSH'

        if @Debug = 1
            select  *
            from    #CashAccounts

        create table #Groups
            (
                GroupID Id_t not null
            )

        if isnull(@GroupNumber, '') != ''
            begin
                select  @GroupID = GroupId
                from    Groups
                where   GroupNumber = @GroupNumber

                select  @rowcount = @@ROWCOUNT

                if @rowcount != 1
                    begin
                        select  @UserMsg = 'Group Number ' + isnull(@GroupNumber, 'NULL') + ' does not exist.'
                        select  @LogMsg = 'Group Number ' + isnull(@GroupNumber, 'NULL') + ' does not exist.'
                        raiserror(65500, 1, 1, @ProductName, @ProcedureName, @ProcedureStep, @UserMsg, @LogMsg, @SessionID, -1, @rowcount, 1)
                        goto BusinessErrorExit
                    end

                --Get groups under this parent group	
                insert into #Groups
                    (
                        GroupID
                    )
                select  GroupId
                from    dbo.ff_GetSubgroups(@GroupID)   -- function also returns the group id itself
            end
        else if isnull(@GroupNumberMask, '') != ''
                 begin
                     insert into    #Groups
                     select G.GroupId
                     from   Groups G
                     where  G.GroupNumber like @GroupNumberMask

                     select @rowcount = @@ROWCOUNT

                     if @rowcount = 0
                         begin
                             select @UserMsg = 'Group Number Mask ' + isnull(@GroupNumberMask, 'NULL') + ' does not exist.'
                             select @LogMsg = 'Group Number Mask ' + isnull(@GroupNumberMask, 'NULL') + ' does not exist.'
                             raiserror(65500, 1, 1, @ProductName, @ProcedureName, @ProcedureStep, @UserMsg, @LogMsg, @SessionID, -1, @rowcount, 1)
                             goto BusinessErrorExit
                         end
                 end
        else if isnull(@CompanyName, '') != ''
                 begin
                     select @CompanyID = CompanyID
                     from   Companies
                     where  CompanyName = @CompanyName

                     select @rowcount = @@ROWCOUNT

                     if @rowcount != 1
                         begin
                             select @UserMsg = 'Company Number ' + isnull(@CompanyName, 'NULL') + ' does not exist.'
                             select @LogMsg = 'Company Number ' + isnull(@CompanyName, 'NULL') + ' does not exist.'
                             raiserror(65500, 1, 1, @ProductName, @ProcedureName, @ProcedureStep, @UserMsg, @LogMsg, @SessionID, -1, @rowcount, 1)
                             goto BusinessErrorExit
                         end

                     --Get groups under this parent group	
                     insert into    #Groups
                         (
                             GroupID
                         )
                     select GroupId
                     from   Groups
                     where  CompanyId = @CompanyID

                     select @rowcount = @@ROWCOUNT

                     if @rowcount = 0
                         begin
                             select @UserMsg = 'Cannot find any group for the given company.'
                             select @LogMsg = 'Cannot find any group for the given company.'
                             raiserror(65500, 1, 1, @ProductName, @ProcedureName, @ProcedureStep, @UserMsg, @LogMsg, @SessionID, -1, @rowcount, 1)
                             goto BusinessErrorExit
                         end

                 end

        if isnull(@GroupLOB, '') != ''
           or   isnull(@GroupProductLine, '') != ''
           or   isnull(@GroupCoverage, '') != ''
           or   isnull(@GroupProductType, '') != ''
            begin

                if isnull(@GroupLOB, '') != ''
                    begin
                        select  @GroupLOBCode = Code
                        from    ReferenceCodes
                        where   Type = 'LineOfBusiness'
                                and Name = @GroupLOB

                        select  @rowcount = @@ROWCOUNT
                        if @rowcount != 1
                            begin
                                select  @UserMsg = 'Group LOB ' + isnull(@GroupLOB, 'NULL') + ' is invalid.'
                                select  @LogMsg = 'Group LOB ' + isnull(@GroupLOB, 'NULL') + ' is invalid.'
                                raiserror(65500, 1, 1, @ProductName, @ProcedureName, @ProcedureStep, @UserMsg, @LogMsg, @SessionID, -1, @rowcount, 1)
                                goto BusinessErrorExit
                            end
                    end
                if isnull(@GroupProductLine, '') != ''
                    begin
                        select  @GroupProductLineCode = Code
                        from    ReferenceCodes
                        where   Type = 'ProductLine'
                                and Name = @GroupProductLine

                        select  @rowcount = @@ROWCOUNT
                        if @rowcount != 1
                            begin
                                select  @UserMsg = 'Group Product Line ' + isnull(@GroupProductLine, 'NULL') + ' is invalid.'
                                select  @LogMsg = 'Group Product Line ' + isnull(@GroupProductLine, 'NULL') + ' is invalid.'
                                raiserror(65500, 1, 1, @ProductName, @ProcedureName, @ProcedureStep, @UserMsg, @LogMsg, @SessionID, -1, @rowcount, 1)
                                goto BusinessErrorExit
                            end
                    end
                if isnull(@GroupCoverage, '') != ''
                    begin
                        select  @GroupCoverageCode = Code
                        from    ReferenceCodes
                        where   Type = 'Coverage'
                                and Name = @GroupCoverage

                        select  @rowcount = @@ROWCOUNT
                        if @rowcount != 1
                            begin
                                select  @UserMsg = 'Group Coverage ' + isnull(@GroupCoverage, 'NULL') + ' is invalid.'
                                select  @LogMsg = 'Group Coverage ' + isnull(@GroupCoverage, 'NULL') + ' is invalid.'
                                raiserror(65500, 1, 1, @ProductName, @ProcedureName, @ProcedureStep, @UserMsg, @LogMsg, @SessionID, -1, @rowcount, 1)
                                goto BusinessErrorExit
                            end
                    end
                if isnull(@GroupProductType, '') != ''
                    begin
                        select  @GroupProductTypeCode = Code
                        from    ReferenceCodes
                        where   Type = 'ProductType'
                                and Name = @GroupProductType

                        select  @rowcount = @@ROWCOUNT
                        if @rowcount != 1
                            begin
                                select  @UserMsg = 'Group Product Type ' + isnull(@GroupProductType, 'NULL') + ' is invalid.'
                                select  @LogMsg = 'Group Product Type ' + isnull(@GroupProductType, 'NULL') + ' is invalid.'
                                raiserror(65500, 1, 1, @ProductName, @ProcedureName, @ProcedureStep, @UserMsg, @LogMsg, @SessionID, -1, @rowcount, 1)
                                goto BusinessErrorExit
                            end
                    end

                -- If #Groups already populated from other parameters, filter them by these parameters again.
                -- Else start from all groups
                if exists
                    (
                        select  1
                        from    #Groups
                    )
                    begin
                        delete  from #Groups
                        where   not exists
                            (
                                select  1
                                from    Groups G
                                where   G.GroupId = #Groups.GroupID
                                        and isnull(G.LOB, '') = isnull(@GroupLOBCode, isnull(G.LOB, ''))
                                        and isnull(G.ProductLineCode, '') = isnull(@GroupProductLineCode, isnull(G.ProductLineCode, ''))
                                        and isnull(G.CoverageCode, '') = isnull(@GroupCoverageCode, isnull(G.CoverageCode, ''))
                                        and isnull(G.ProductType, '') = isnull(@GroupProductTypeCode, isnull(G.ProductType, ''))
                            )
                    end
                else
                    begin
                        insert into #Groups
                        select  GroupId
                        from    Groups
                        where   isnull(LOB, '') = isnull(@GroupLOBCode, isnull(LOB, ''))
                                and isnull(ProductLineCode, '') = isnull(@GroupProductLineCode, isnull(ProductLineCode, ''))
                                and isnull(CoverageCode, '') = isnull(@GroupCoverageCode, isnull(CoverageCode, ''))
                                and isnull(ProductType, '') = isnull(@GroupProductTypeCode, isnull(ProductType, ''))
                    end

                -- Check if #groups table is now empty
                if not exists
                    (
                        select  1
                        from    #Groups
                    )
                    begin
                        select  @UserMsg = 'Cannot find group for the given group information.'
                        select  @LogMsg = 'Cannot find group for the given group information.'
                        raiserror(65500, 1, 1, @ProductName, @ProcedureName, @ProcedureStep, @UserMsg, @LogMsg, @SessionID, -1, @rowcount, 1)
                        goto BusinessErrorExit
                    end
            end




        create table #Vendors
            (
                VendorID Id_t
               ,VendorAccountID Id_t
            )

        --If the corporationID is passed, get all the vendors with that corporationid
        if @EIN is not null
            begin
                select  @CorporationID = CorporationId
                from    Corporations
                where   EIN = @EIN

                select  @rowcount = @@Rowcount

                if @rowcount = 0
                    begin
                        select  @UserMsg = 'No Corporation Exists with given EIN in the system!'
                        raiserror(65500, 1, 1, @ProductName, @ProcedureName, @ProcedureStep, @UserMsg, @LogMsg, @SessionID, -1, @rowcount, 1)
                        goto BusinessErrorExit
                    end

                --INSERT VALID VENDOR ACCOUNT ID's into the temp table
                insert into #Vendors
                    (
                        VendorID
                       ,VendorAccountID
                    )
                select  V.VendorId
                       ,EAM.AccountID
                from    Vendors V
                        inner join EntityAccountMap EAM
                            on V.VendorId = EAM.EntityID
                               and EAM.EntityType = 'VDR'
                               and EAM.CompanyID in
                                       (
                                           select   CompanyId
                                           from #CashAccounts
                                       )
                where   V.CorporationId = @CorporationID
                        and isnull(V.VendorClass, '') = isnull(isnull(@VendorClass, V.VendorClass), '')
                        and isnull(V.VendorSubclass, '') = isnull(isnull(@VendorSubClass, V.VendorSubclass), '')

            end


        if isnull(@CheckRunJobNumber, '') != ''
            begin

                select  @CheckRunJobNumber = right('0000000000' + @CheckRunJobNumber, 10)

                select  @JobId = JobId
                from    PaymentWizardJobs
                where   JobNumber = @CheckRunJobNumber
                        and JobType in ('MCR', 'PCR')   --- manual and preset check run jobs only

                select  @rowcount = @@Rowcount
                if @rowcount = 0
                    begin
                        select  @UserMsg = 'Unable to find check run job for JobNumber - ' + isnull(@CheckRunJobNumber, '') + '.'
                        raiserror(65500, 1, 1, @ProductName, @ProcedureName, @ProcedureStep, @UserMsg, @LogMsg, @SessionID, -1, @rowcount, 1)
                        goto BusinessErrorExit
                    end
            end ---of "if isnull(@CheckRunJobNumber,'') != ''"


        declare @Providers table
            (
                ProviderID int
            )

        if isnull(@ProviderSpecialtyID, '') != ''
           or   isnull(@ProviderSpecialtySubCategoryID, '') != ''
           or   isnull(@ProviderSpecialtyCategoryID, '') != ''
           or   isnull(@ContractID, '') != ''
           or   isnull(@NetworkID, '') != ''
            begin
                -- use ff's to limit ProviderIDs from ProviderContractMap
                insert into @Providers
                select  PCM.ProviderId
                from    ProviderContractMap PCM
                where   not (
                                (
                                    isnull(@ProviderSpecialtyID, '') != ''
                                    or  isnull(@ProviderSpecialtySubCategoryID, '') != ''
                                    or  isnull(@ProviderSpecialtyCategoryID, '') != ''
                                )
                                and PCM.ProviderId not in
                                        (
                                            select  ProviderID
                                            from    ff_ReturnProviderIDs(
                                                                            null
                                                                           ,null
                                                                           ,null
                                                                           ,null
                                                                           ,null
                                                                           ,@ProviderSpecialtyID
                                                                           ,@ProviderSpecialtySubCategoryID
                                                                           ,@ProviderSpecialtyCategoryID
                                                                           ,null
                                                                           ,null
                                                                           ,null
                                                                           ,null
                                                                           ,null
                                                                           ,null
                                                                           ,null
                                                                           ,null
                                                                           ,null
                                                                           ,null
                                                                           ,null
                                                                           ,null
                                                                           ,null
                                                                           ,null
                                                                           ,null
                                                                        )
                                        )
                            )
                        and not (
                                    (
                                        isnull(@ContractID, '') != ''
                                        or  isnull(@NetworkID, '') != ''
                                    )
                                    and PCM.ContractId not in
                                            (
                                                select  ContractID
                                                from    ff_ReturnContractIDs(
                                                                                @ContractID
                                                                               ,null
                                                                               ,null
                                                                               ,null
                                                                               ,null
                                                                               ,@NetworkID
                                                                               ,null
                                                                               ,null
                                                                               ,null
                                                                               ,null
                                                                               ,null
                                                                               ,null
                                                                               ,null
                                                                            )
                                            )
                                )

                -- if the table does get populated, flag it
                if @@rowcount > 0
                    begin
                        select  @UseProvidersTable = 'Y'
                    end -- if @@rowcount > 0

            end -- if isnull(@ProviderSpecialtyID, '') != ''...


        if @Usage = '|CHECKSONLY|'
            begin
                if @EIN is not null
                    begin
                        insert into #ResultSet
                            (
                                RecordID
                               ,CheckID
                               ,CheckNumber
                               ,CheckDate
                               ,CheckAmount
                               ,CheckStatusCode
                               ,CheckVoidReason
                               ,ExternalCheckNumber
                               ,ExternalCheckCurrency
                               ,ExternalCheckAmount
                               ,ExternalConversionRate
                               ,ExternalMethodOfPaymentCode
                               ,ExternalCheckDate
                               ,CheckClearedDate
                               ,PaymentWizardJobId
                               ,ParentAccountID
                               ,CashAccountId
                               ,RecordStatusCode
                               ,RecordTypeCode
                               ,EntityTypeCode
                               ,CreationDate
                               ,ProcessedDate
                               ,VoidDate
                               ,CheckGroupID
                               ,Notes
                               ,LastUpdatedAt
                               ,LastUpdatedBy
                               ,MethodOfPayment
                               ,WriteOffReasonCode
                            )
                        select  R.RecordID
                               ,C.CheckId
                               ,C.CheckNumber
                               ,C.DateCreated
                               ,case when R.RecordType = 'PR' then - (C.Amount)
                                     else C.Amount
                                end
                               ,case when
                                         (
                                             @ShowVoidedChecks = 'Y'
                                             and C.CheckStatus = 'VD'
                                         ) then 'PRT'
                                     else C.CheckStatus
                                end
                               ,case when
                                         (
                                             @ShowVoidedChecks = 'Y'
                                             and C.CheckStatus = 'VD'
                                         ) then null
                                     else C.VoidReason
                                end
                               ,C.ExternalCheckNumber
                               ,C.ExternalCheckCurrency
                               ,case when R.RecordType = 'PR' then - (C.ExternalCheckAmount)
                                     else C.ExternalCheckAmount
                                end
                               ,C.ExternalConversionRate
                               ,C.ExternalMethodOfPayment
                               ,C.ExternalCheckDate
                               ,C.CheckClearedDate
                               ,C.JobId
                               ,R.ParentAccountID
                               ,C.CashAccountId
                               ,case when
                                         (
                                             @ShowVoidedChecks = 'Y'
                                             and C.CheckStatus = 'VD'
                                         ) then 'PRT'
                                     else R.RecordStatus
                                end
                               ,R.RecordType
                               ,R.EntityType
                               ,R.CreationDate
                               ,R.ProcessedDate
                               ,case when
                                         (
                                             @ShowVoidedChecks = 'Y'
                                             and C.CheckStatus = 'VD'
                                         ) then null
                                     else R.VoidDate
                                end
                               ,R.GroupID
                               ,R.Notes
                               ,R.LastUpdatedAt
                               ,R.LastUpdatedBy
                               ,R.MethodOfPayment
                               ,C.WriteOffReason
                        from    Checks C
                                inner join Records R
                                    on R.RecordType in ('PS', isnull(@PaymentReceived, ''), isnull(@WriteOff, ''))
                                       and R.ReferenceNumber = C.CheckId
                                       and C.CashAccountId in
                                               (
                                                   select   CashAccountId
                                                   from #CashAccounts
                                               )
                                       and R.EntityType = isnull(@EntityType, R.EntityType)
                                       and isnull(R.MethodOfPayment, '') = isnull(isnull(@MethodOfPayment, R.MethodOfPayment), '')
                                inner join #Vendors V
                                    on R.ParentAccountID = V.VendorAccountID
                        where   (
                                    (
                                        R.RecordType = 'PS'
                                        and C.DateCreated
                                between @StartDate
                                and     @EndDate
                                    )
                                    or
                                        (
                                            R.RecordType = 'PR'
                                            and R.CreationDate
                                between @StartDate
                                and     @EndDate
                                        )
                                    or
                                        (
                                            R.RecordType = 'WO'
                                            and C.DateCreated
                                between @StartDate
                                and     @EndDate
                                        )
                                )
                                and isnull(C.CheckNumber, '') = isnull(@CheckNumber, isnull(C.CheckNumber, ''))
                                and isnull(C.JobId, -1) = isnull(@JobId, isnull(C.JobId, -1))
                                and C.CheckStatus = isnull(@CheckStatus, C.CheckStatus)
                                and C.CheckStatus != case when @ShowPaymentWizardVoidedChecks = 'Y' then ''
                                                          else 'PWV'
                                                     end
                        option (recompile)

                        select  @error = @@error

                        if @error != 0
                            begin
                                select  @ProcedureStep = 2
                                select  @UserMsg = 'Check Register could not be created. Contact System Administrator.'
                                select  @LogMsg = 'Insert failed for checks that were paid. Error: ' + convert(varchar, @error) + ' occurred.'
                                raiserror(65500, 1, 1, @ProductName, @ProcedureName, @ProcedureStep, @UserMsg, @LogMsg, @SessionID, -1, @rowcount, 1)
                                goto AppErrorExit
                            end


                        if @ShowVoidedChecks = 'Y'
                            begin
                                insert into #ResultSet
                                    (
                                        RecordID
                                       ,CheckID
                                       ,CheckNumber
                                       ,CheckDate
                                       ,CheckVoidReason
                                       ,CheckAmount
                                       ,CheckStatusCode
                                       ,ExternalCheckNumber
                                       ,ExternalCheckCurrency
                                       ,ExternalCheckAmount
                                       ,ExternalMethodOfPaymentCode
                                       ,ExternalCheckDate
                                       ,CheckClearedDate
                                       ,ExternalConversionRate
                                       ,PaymentWizardJobId
                                       ,ParentAccountID
                                       ,CashAccountId
                                       ,RecordStatusCode
                                       ,RecordTypeCode
                                       ,EntityTypeCode
                                       ,CreationDate
                                       ,ProcessedDate
                                       ,VoidDate
                                       ,CheckGroupID
                                       ,Notes
                                       ,LastUpdatedAt
                                       ,LastUpdatedBy
                                       ,MethodOfPayment
                                       ,VoidInsert
                                       ,WriteOffReasonCode
                                    )
                                select  R.RecordID
                                       ,C.CheckId
                                       ,C.CheckNumber
                                       ,C.DateCreated
                                       ,C.VoidReason
                                       ,- (C.Amount)
                                       ,C.CheckStatus
                                       ,C.ExternalCheckNumber
                                       ,C.ExternalCheckCurrency
                                       ,- (C.ExternalCheckAmount)
                                       ,C.ExternalMethodOfPayment
                                       ,C.ExternalCheckDate
                                       ,C.CheckClearedDate
                                       ,C.ExternalConversionRate
                                       ,C.JobId
                                       ,R.ParentAccountID
                                       ,C.CashAccountId
                                       ,R.RecordStatus
                                       ,R.RecordType
                                       ,R.EntityType
                                       ,R.CreationDate
                                       ,R.ProcessedDate
                                       ,R.VoidDate
                                       ,R.GroupID
                                       ,R.Notes
                                       ,R.LastUpdatedAt
                                       ,R.LastUpdatedBy
                                       ,R.MethodOfPayment
                                       ,'Y'
                                       ,C.WriteOffReason
                                from    Checks C
                                        inner join Records R
                                            on R.RecordType in ('PS', isnull(@PaymentReceived, ''), isnull(@WriteOff, ''))
                                               and R.ReferenceNumber = C.CheckId
                                               and C.CashAccountId in
                                                       (
                                                           select   CashAccountId
                                                           from #CashAccounts
                                                       )
                                               and R.EntityType = isnull(@EntityType, R.EntityType)
                                               and isnull(R.MethodOfPayment, '') = isnull(isnull(@MethodOfPayment, R.MethodOfPayment), '')
                                        inner join #Vendors V
                                            on R.ParentAccountID = V.VendorAccountID
                                where   C.DateVoided
                                        between @StartDate
                                        and     @EndDate
                                        and isnull(C.CheckNumber, '') = isnull(@CheckNumber, isnull(C.CheckNumber, ''))
                                        and isnull(C.JobId, -1) = isnull(@JobId, isnull(C.JobId, -1))
                                        and C.CheckStatus = isnull(@CheckStatus, C.CheckStatus)
                                        and C.CheckStatus != 'PWV'
                                option (recompile)

                                select  @error = @@error
                                if @error != 0
                                    begin
                                        select  @ProcedureStep = 2
                                        select  @UserMsg = 'Check Register could not be created. Contact System Administrator.'
                                        select  @LogMsg = 'Insert failed for checks that were paid. Error: ' + convert(varchar, @error) + ' occurred.'
                                        raiserror(65500, 1, 1, @ProductName, @ProcedureName, @ProcedureStep, @UserMsg, @LogMsg, @SessionID, -1, @rowcount, 1)
                                        goto AppErrorExit
                                    end

                            end --- of "if @ShowVoidedChecks = 'Y'"
                        else
                            begin
                                delete  from #ResultSet
                                where   RecordStatusCode = 'V'
                            end

                    end --- of "If @EIN is not null"
                else
                    begin

                        insert into #ResultSet
                            (
                                RecordID
                               ,CheckID
                               ,CheckNumber
                               ,CheckDate
                               ,CheckAmount
                               ,CheckStatusCode
                               ,CheckVoidReason
                               ,ExternalCheckNumber
                               ,ExternalCheckCurrency
                               ,ExternalCheckAmount
                               ,ExternalConversionRate
                               ,ExternalMethodOfPaymentCode
                               ,ExternalCheckDate
                               ,CheckClearedDate
                               ,PaymentWizardJobId
                               ,ParentAccountID
                               ,CashAccountId
                               ,RecordStatusCode
                               ,RecordTypeCode
                               ,EntityTypeCode
                               ,CreationDate
                               ,ProcessedDate
                               ,VoidDate
                               ,CheckGroupID
                               ,Notes
                               ,LastUpdatedAt
                               ,LastUpdatedBy
                               ,MethodOfPayment
                               ,WriteOffReasonCode
                            )
                        select  R.RecordID
                               ,C.CheckId
                               ,C.CheckNumber
                               ,C.DateCreated
                               ,case when R.RecordType = 'PR' then - (C.Amount)
                                     else C.Amount
                                end
                               ,case when
                                         (
                                             @ShowVoidedChecks = 'Y'
                                             and C.CheckStatus = 'VD'
                                         ) then 'PRT'
                                     else C.CheckStatus
                                end
                               ,case when
                                         (
                                             @ShowVoidedChecks = 'Y'
                                             and C.CheckStatus = 'VD'
                                         ) then null
                                     else C.VoidReason
                                end
                               ,C.ExternalCheckNumber
                               ,C.ExternalCheckCurrency
                               ,case when R.RecordType = 'PR' then - (C.ExternalCheckAmount)
                                     else C.ExternalCheckAmount
                                end
                               ,C.ExternalConversionRate
                               ,C.ExternalMethodOfPayment
                               ,C.ExternalCheckDate
                               ,C.CheckClearedDate
                               ,C.JobId
                               ,R.ParentAccountID
                               ,C.CashAccountId
                               ,case when
                                         (
                                             @ShowVoidedChecks = 'Y'
                                             and C.CheckStatus = 'VD'
                                         ) then 'PRT'
                                     else R.RecordStatus
                                end
                               ,R.RecordType
                               ,R.EntityType
                               ,R.CreationDate
                               ,R.ProcessedDate
                               ,case when
                                         (
                                             @ShowVoidedChecks = 'Y'
                                             and C.CheckStatus = 'VD'
                                         ) then null
                                     else R.VoidDate
                                end
                               ,R.GroupID
                               ,R.Notes
                               ,R.LastUpdatedAt
                               ,R.LastUpdatedBy
                               ,R.MethodOfPayment
                               ,C.WriteOffReason
                        from    Checks C
                                inner join Records R
                                    on R.RecordType in ('PS', isnull(@PaymentReceived, ''), isnull(@WriteOff, ''))
                                       and R.ReferenceNumber = C.CheckId
                                       and C.CashAccountId in
                                               (
                                                   select   CashAccountId
                                                   from #CashAccounts
                                               )
                                       and R.EntityType = isnull(@EntityType, R.EntityType)
                                       and isnull(R.MethodOfPayment, '') = isnull(isnull(@MethodOfPayment, R.MethodOfPayment), '')
                                inner join EntityAccountMap EAM
                                    on EAM.AccountID = R.ParentAccountID
                                       and EAM.EntityType = 'VDR'
                                inner join Vendors V
                                    on EAM.EntityID = V.VendorId
                                       and isnull(V.VendorClass, '') = isnull(isnull(@VendorClass, V.VendorClass), '')
                                       and isnull(V.VendorSubclass, '') = isnull(isnull(@VendorSubClass, V.VendorSubclass), '')
                        where   (
                                    (
                                        R.RecordType = 'PS'
                                        and C.DateCreated
                                between @StartDate
                                and     @EndDate
                                    )
                                    or
                                        (
                                            R.RecordType = 'PR'
                                            and R.CreationDate
                                between @StartDate
                                and     @EndDate
                                        )
                                    or
                                        (
                                            R.RecordType = 'WO'
                                            and C.DateCreated
                                between @StartDate
                                and     @EndDate
                                        )
                                )
                                and isnull(C.CheckNumber, '') = isnull(@CheckNumber, isnull(C.CheckNumber, ''))
                                and isnull(C.JobId, -1) = isnull(@JobId, isnull(C.JobId, -1))
                                and C.CheckStatus = isnull(@CheckStatus, C.CheckStatus)
                                and C.CheckStatus != case when @ShowPaymentWizardVoidedChecks = 'Y' then ''
                                                          else 'PWV'
                                                     end
                        option (recompile)

                        select  @error = @@error

                        if @error != 0
                            begin
                                select  @ProcedureStep = 2
                                select  @UserMsg = 'Check Register could not be created. Contact System Administrator.'
                                select  @LogMsg = 'Insert failed for checks that were paid. Error: ' + convert(varchar, @error) + ' occurred.'
                                raiserror(65500, 1, 1, @ProductName, @ProcedureName, @ProcedureStep, @UserMsg, @LogMsg, @SessionID, -1, @rowcount, 1)
                                goto AppErrorExit
                            end

                        if @ShowVoidedChecks = 'Y'
                            begin
                                insert into #ResultSet
                                    (
                                        RecordID
                                       ,CheckID
                                       ,CheckNumber
                                       ,CheckDate
                                       ,CheckVoidReason
                                       ,CheckAmount
                                       ,CheckStatusCode
                                       ,ExternalCheckNumber
                                       ,ExternalCheckCurrency
                                       ,ExternalCheckAmount
                                       ,ExternalMethodOfPaymentCode
                                       ,ExternalCheckDate
                                       ,CheckClearedDate
                                       ,ExternalConversionRate
                                       ,PaymentWizardJobId
                                       ,ParentAccountID
                                       ,CashAccountId
                                       ,RecordStatusCode
                                       ,RecordTypeCode
                                       ,EntityTypeCode
                                       ,CreationDate
                                       ,ProcessedDate
                                       ,VoidDate
                                       ,CheckGroupID
                                       ,Notes
                                       ,LastUpdatedAt
                                       ,LastUpdatedBy
                                       ,MethodOfPayment
                                       ,VoidInsert
                                       ,WriteOffReasonCode
                                    )
                                select  R.RecordID
                                       ,C.CheckId
                                       ,C.CheckNumber
                                       ,C.DateCreated
                                       ,C.VoidReason
                                       ,- (C.Amount)
                                       ,C.CheckStatus
                                       ,C.ExternalCheckNumber
                                       ,C.ExternalCheckCurrency
                                       ,- (C.ExternalCheckAmount)
                                       ,C.ExternalMethodOfPayment
                                       ,C.ExternalCheckDate
                                       ,C.CheckClearedDate
                                       ,C.ExternalConversionRate
                                       ,C.JobId
                                       ,R.ParentAccountID
                                       ,C.CashAccountId
                                       ,R.RecordStatus
                                       ,R.RecordType
                                       ,R.EntityType
                                       ,R.CreationDate
                                       ,R.ProcessedDate
                                       ,R.VoidDate
                                       ,R.GroupID
                                       ,R.Notes
                                       ,R.LastUpdatedAt
                                       ,R.LastUpdatedBy
                                       ,R.MethodOfPayment
                                       ,'Y'
                                       ,C.WriteOffReason
                                from    Checks C
                                        inner join Records R
                                            on R.RecordType in ('PS', isnull(@PaymentReceived, ''), isnull(@WriteOff, ''))
                                               and R.ReferenceNumber = C.CheckId
                                               and C.CashAccountId in
                                                       (
                                                           select   CashAccountId
                                                           from #CashAccounts
                                                       )
                                               and R.EntityType = isnull(@EntityType, R.EntityType)
                                               and isnull(R.MethodOfPayment, '') = isnull(isnull(@MethodOfPayment, R.MethodOfPayment), '')
                                        inner join EntityAccountMap EAM
                                            on EAM.AccountID = R.ParentAccountID
                                               and EAM.EntityType = 'VDR'
                                        inner join Vendors V
                                            on EAM.EntityID = V.VendorId
                                               and isnull(V.VendorClass, '') = isnull(isnull(@VendorClass, V.VendorClass), '')
                                               and isnull(V.VendorSubclass, '') = isnull(isnull(@VendorSubClass, V.VendorSubclass), '')
                                where   C.DateVoided
                                        between @StartDate
                                        and     @EndDate
                                        and isnull(C.CheckNumber, '') = isnull(@CheckNumber, isnull(C.CheckNumber, ''))
                                        and isnull(C.JobId, -1) = isnull(@JobId, isnull(C.JobId, -1))
                                        and C.CheckStatus = isnull(@CheckStatus, C.CheckStatus)
                                        and C.CheckStatus != 'PWV'
                                option (recompile)

                                select  @error = @@error
                                if @error != 0
                                    begin
                                        select  @ProcedureStep = 2
                                        select  @UserMsg = 'Check Register could not be created. Contact System Administrator.'
                                        select  @LogMsg = 'Insert failed for checks that were paid. Error: ' + convert(varchar, @error) + ' occurred.'
                                        raiserror(65500, 1, 1, @ProductName, @ProcedureName, @ProcedureStep, @UserMsg, @LogMsg, @SessionID, -1, @rowcount, 1)
                                        goto AppErrorExit
                                    end

                            end --- of "if @ShowVoidedChecks = 'Y'"
                        else
                            begin
                                delete  from #ResultSet
                                where   RecordStatusCode = 'V'
                            end

                    end --end of if EIN is null

            end --- of "If @Usage = '|CHECKSONLY|'"

        else if @Usage = '|ONEDETAILLEVEL|'
                 begin
                     if @EIN is not null
                         begin
                             if exists
                                 (
                                     select 1
                                     from   #Groups
                                 ) --@GroupID is not null or @GroupLOB is not null
                                 begin

                                     insert into    #ResultSet
                                         (
                                             RecordID
                                            ,CheckID
                                            ,CheckNumber
                                            ,CheckDate
                                            ,CheckAmount
                                            ,CheckStatusCode
                                            ,CheckVoidReason
                                            ,ExternalCheckNumber
                                            ,ExternalCheckCurrency
                                            ,ExternalCheckAmount
                                            ,ExternalConversionRate
                                            ,ExternalMethodOfPaymentCode
                                            ,ExternalCheckDate
                                            ,CheckClearedDate
                                            ,PaymentWizardJobId
                                            ,ParentAccountID
                                            ,CashAccountId
                                            ,RecordStatusCode
                                            ,RecordTypeCode
                                            ,EntityTypeCode
                                            ,CreationDate
                                            ,ProcessedDate
                                            ,VoidDate
                                            ,CheckGroupID
                                            ,Notes
                                            ,LastUpdatedAt
                                            ,LastUpdatedBy
                                            --extra columns
                                            ,FinancialRecordID
                                            ,RecordDetailId
                                            ,RecordDetailType
                                            ,PaymentClassCode
                                            ,ReferenceNumber
                                            ,DetailPaidAmount
                                            ,DetailGroupID
                                            ,DetailCreationDate
                                            ,AdjustmentVersion
                                            ,RiskGroupVendorMapID
                                            ,MethodOfPayment
                                            ,WriteOffReasonCode
                                         )
                                     select R.RecordID
                                           ,C.CheckId
                                           ,C.CheckNumber
                                           ,C.DateCreated
                                           ,case when R.RecordType = 'PR' then - (C.Amount)
                                                 else C.Amount
                                            end
                                           ,case when
                                                     (
                                                         @ShowVoidedChecks = 'Y'
                                                         and C.CheckStatus = 'VD'
                                                     ) then 'PRT'
                                                 else C.CheckStatus
                                            end
                                           ,case when
                                                     (
                                                         @ShowVoidedChecks = 'Y'
                                                         and C.CheckStatus = 'VD'
                                                     ) then null
                                                 else C.VoidReason
                                            end
                                           ,C.ExternalCheckNumber
                                           ,C.ExternalCheckCurrency
                                           ,case when R.RecordType = 'PR' then - (C.ExternalCheckAmount)
                                                 else C.ExternalCheckAmount
                                            end
                                           ,C.ExternalConversionRate
                                           ,C.ExternalMethodOfPayment
                                           ,C.ExternalCheckDate
                                           ,C.CheckClearedDate
                                           ,C.JobId
                                           ,R.ParentAccountID
                                           ,C.CashAccountId
                                           ,case when
                                                     (
                                                         @ShowVoidedChecks = 'Y'
                                                         and C.CheckStatus = 'VD'
                                                     ) then 'PRT'
                                                 else R.RecordStatus
                                            end
                                           ,R.RecordType
                                           ,R.EntityType
                                           ,R.CreationDate
                                           ,R.ProcessedDate
                                           ,case when
                                                     (
                                                         @ShowVoidedChecks = 'Y'
                                                         and C.CheckStatus = 'VD'
                                                     ) then null
                                                 else R.VoidDate
                                            end
                                           ,R.GroupID
                                           ,R.Notes
                                           ,R.LastUpdatedAt
                                           ,R.LastUpdatedBy
                                            --new columns
                                           ,R2.RecordID
                                           ,RD.ItemID
                                           ,RD.ItemType
                                           ,R2.PaymentClass
                                           ,R2.ReferenceNumber
                                           ,R2.Amount
                                           ,R2.GroupID
                                           ,R2.CreationDate
                                           ,R2.Adjustmentversion
                                           ,R2.RiskGroupVendorMapID
                                           ,R.MethodOfPayment
                                           ,C.WriteOffReason
                                     from   Checks C
                                            inner join Records R
                                                on R.RecordType in ('PS', isnull(@PaymentReceived, ''), isnull(@WriteOff, ''))
                                                   and  R.ReferenceNumber = C.CheckId
                                                   and  C.CashAccountId in
                                                            (
                                                                select  CashAccountId
                                                                from    #CashAccounts
                                                            )
                                                   and  R.EntityType = isnull(@EntityType, R.EntityType)
                                                   and  isnull(R.MethodOfPayment, '') = isnull(isnull(@MethodOfPayment, R.MethodOfPayment), '')
                                            inner join RecordDetails RD
                                                on R.RecordID = RD.RecordID
                                            inner join Records R2
                                                on RD.ItemID = R2.RecordID
                                                   and  R2.RecordType = isnull(@RecordType, R2.RecordType)
                                                   and  isnull(R2.PaymentClass, '') = isnull(@PaymentClass, isnull(R2.PaymentClass, ''))
                                                   and  not (
                                                                @UseProvidersTable = 'Y'
                                                                and R2.ReferenceNumber not in
                                                                        (
                                                                            select  ClaimId
                                                                            from    Claims
                                                                            where   ProviderId in
                                                                                        (
                                                                                            select  ProviderID
                                                                                            from    @Providers
                                                                                        )
                                                                        )
                                                            )
                                            inner join #Vendors V
                                                on R.ParentAccountID = V.VendorAccountID
                                            --filter the non selected claims out
                                            inner join #Groups G
                                                on R2.GroupID = G.GroupID
                                     where  (
                                                (
                                                    R.RecordType = 'PS'
                                                    and C.DateCreated
                                            between @StartDate
                                            and     @EndDate
                                                )
                                                or
                                                    (
                                                        R.RecordType = 'PR'
                                                        and R.CreationDate
                                            between @StartDate
                                            and     @EndDate
                                                    )
                                                or
                                                    (
                                                        R.RecordType = 'WO'
                                                        and C.DateCreated
                                            between @StartDate
                                            and     @EndDate
                                                    )
                                            )
                                            and isnull(C.CheckNumber, '') = isnull(@CheckNumber, isnull(C.CheckNumber, ''))
                                            and isnull(C.JobId, -1) = isnull(@JobId, isnull(C.JobId, -1))
                                            and C.CheckStatus = isnull(@CheckStatus, C.CheckStatus)
                                            and C.CheckStatus != case when @ShowPaymentWizardVoidedChecks = 'Y' then ''
                                                                      else 'PWV'
                                                                 end
                                     option (recompile)

                                     select @error = @@error

                                     if @error != 0
                                         begin
                                             select @ProcedureStep = 2
                                             select @UserMsg = 'Check Register could not be created. Contact System Administrator.'
                                             select @LogMsg = 'Insert failed for checks that were paid. Error: ' + convert(varchar, @error) + ' occurred.'
                                             raiserror(
                                                          65500
                                                         ,1
                                                         ,1
                                                         ,@ProductName
                                                         ,@ProcedureName
                                                         ,@ProcedureStep
                                                         ,@UserMsg
                                                         ,@LogMsg
                                                         ,@SessionID
                                                         ,-1
                                                         ,@rowcount
                                                         ,1
                                                      )
                                             goto AppErrorExit
                                         end

                                     if @ShowVoidedChecks = 'Y'
                                         begin
                                             insert into    #ResultSet
                                                 (
                                                     RecordID
                                                    ,CheckID
                                                    ,CheckNumber
                                                    ,CheckDate
                                                    ,CheckAmount
                                                    ,CheckVoidReason
                                                    ,CheckStatusCode
                                                    ,ExternalCheckNumber
                                                    ,ExternalCheckCurrency
                                                    ,ExternalCheckAmount
                                                    ,ExternalMethodOfPaymentCode
                                                    ,ExternalCheckDate
                                                    ,CheckClearedDate
                                                    ,ExternalConversionRate
                                                    ,PaymentWizardJobId
                                                    ,ParentAccountID
                                                    ,CashAccountId
                                                    ,RecordStatusCode
                                                    ,RecordTypeCode
                                                    ,EntityTypeCode
                                                    ,CreationDate
                                                    ,ProcessedDate
                                                    ,VoidDate
                                                    ,CheckGroupID
                                                    ,Notes
                                                    ,LastUpdatedAt
                                                    ,LastUpdatedBy
                                                    --extra columns
                                                    ,FinancialRecordID
                                                    ,RecordDetailId
                                                    ,RecordDetailType
                                                    ,ReferenceNumber
                                                    ,DetailPaidAmount
                                                    ,DetailGroupID
                                                    ,DetailCreationDate
                                                    ,PaymentClassCode
                                                    ,AdjustmentVersion
                                                    ,RiskGroupVendorMapID
                                                    ,MethodOfPayment
                                                    ,VoidInsert
                                                    ,WriteOffReasonCode
                                                 )
                                             select R.RecordID
                                                   ,C.CheckId
                                                   ,C.CheckNumber
                                                   ,C.DateCreated
                                                   ,- (C.Amount)
                                                   ,C.VoidReason
                                                   ,C.CheckStatus
                                                   ,C.ExternalCheckNumber
                                                   ,C.ExternalCheckCurrency
                                                   ,- (C.ExternalCheckAmount)
                                                   ,C.ExternalMethodOfPayment
                                                   ,C.ExternalCheckDate
                                                   ,C.CheckClearedDate
                                                   ,C.ExternalConversionRate
                                                   ,C.JobId
                                                   ,R.ParentAccountID
                                                   ,C.CashAccountId
                                                   ,R.RecordStatus
                                                   ,R.RecordType
                                                   ,R.EntityType
                                                   ,R.CreationDate
                                                   ,R.ProcessedDate
                                                   ,R.VoidDate
                                                   ,R.GroupID
                                                   ,R.Notes
                                                   ,R.LastUpdatedAt
                                                   ,R.LastUpdatedBy
                                                    --new columns
                                                   ,R2.RecordID
                                                   ,RD.ItemID
                                                   ,RD.ItemType
                                                   ,R2.ReferenceNumber
                                                   ,- (R2.Amount)
                                                   ,R2.GroupID
                                                   ,R2.CreationDate
                                                   ,R2.PaymentClass
                                                   ,R2.Adjustmentversion
                                                   ,R2.RiskGroupVendorMapID
                                                   ,R.MethodOfPayment
                                                   ,'Y'
                                                   ,C.WriteOffReason
                                             from   Checks C
                                                    inner join Records R
                                                        on R.RecordType in ('PS', isnull(@PaymentReceived, ''), isnull(@WriteOff, ''))
                                                           and  R.ReferenceNumber = C.CheckId
                                                           and  C.CashAccountId in
                                                                    (
                                                                        select  CashAccountId
                                                                        from    #CashAccounts
                                                                    )
                                                           and  R.EntityType = isnull(@EntityType, R.EntityType)
                                                           and  isnull(R.MethodOfPayment, '') = isnull(isnull(@MethodOfPayment, R.MethodOfPayment), '')
                                                    inner join RecordDetails RD
                                                        on R.RecordID = RD.RecordID
                                                    inner join Records R2
                                                        on RD.ItemID = R2.RecordID
                                                           and  R2.RecordType = isnull(@RecordType, R2.RecordType)
                                                           and  isnull(R2.PaymentClass, '') = isnull(@PaymentClass, isnull(R2.PaymentClass, ''))
                                                           and  not (
                                                                        @UseProvidersTable = 'Y'
                                                                        and R2.ReferenceNumber not in
                                                                                (
                                                                                    select  ClaimId
                                                                                    from    Claims
                                                                                    where   ProviderId in
                                                                                                (
                                                                                                    select  ProviderID
                                                                                                    from    @Providers
                                                                                                )
                                                                                )
                                                                    )
                                                    inner join #Vendors V
                                                        on R.ParentAccountID = V.VendorAccountID
                                                    --filter the non selected claims out
                                                    inner join #Groups G
                                                        on R2.GroupID = G.GroupID
                                             where  C.DateVoided
                                                    between @StartDate
                                                    and     @EndDate
                                                    and isnull(C.CheckNumber, '') = isnull(@CheckNumber, isnull(C.CheckNumber, ''))
                                                    and isnull(C.JobId, -1) = isnull(@JobId, isnull(C.JobId, -1))
                                                    and C.CheckStatus = isnull(@CheckStatus, C.CheckStatus)
                                                    and C.CheckStatus != 'PWV'
                                             option (recompile)

                                             select @error = @@error
                                             if @error != 0
                                                 begin
                                                     select @ProcedureStep = 2
                                                     select @UserMsg = 'Check Register could not be created. Contact System Administrator.'
                                                     select @LogMsg
                                                         = 'Insert failed for checks that were paid. Error: ' + convert(varchar, @error) + ' occurred.'
                                                     raiserror(
                                                                  65500
                                                                 ,1
                                                                 ,1
                                                                 ,@ProductName
                                                                 ,@ProcedureName
                                                                 ,@ProcedureStep
                                                                 ,@UserMsg
                                                                 ,@LogMsg
                                                                 ,@SessionID
                                                                 ,-1
                                                                 ,@rowcount
                                                                 ,1
                                                              )
                                                     goto AppErrorExit
                                                 end
                                         end -- End of @ShowVoidedChecks = 'Y'
                                     else
                                         begin
                                             delete from #ResultSet
                                             where  RecordStatusCode = 'V'
                                         end -- else if @ShowVoidedChecks = 'Y'

                                     if isnull(@EntityType, '') = ''
                                        or  @EntityType = 'CPT' --Capitation (1DL, @EIN is not null & @GroupID is not null)
                                         begin

                                             insert into    #ResultSet
                                                 (
                                                     RecordID
                                                    ,CheckID
                                                    ,CheckNumber
                                                    ,CheckDate
                                                    ,CheckAmount
                                                    ,CheckStatusCode
                                                    ,CheckVoidReason
                                                    ,ExternalCheckNumber
                                                    ,ExternalCheckCurrency
                                                    ,ExternalCheckAmount
                                                    ,ExternalConversionRate
                                                    ,ExternalMethodOfPaymentCode
                                                    ,ExternalCheckDate
                                                    ,CheckClearedDate
                                                    ,PaymentWizardJobId
                                                    ,ParentAccountID
                                                    ,CashAccountId
                                                    ,RecordStatusCode
                                                    ,RecordTypeCode
                                                    ,EntityTypeCode
                                                    ,CreationDate
                                                    ,ProcessedDate
                                                    ,VoidDate
                                                    ,CheckGroupID
                                                    ,Notes
                                                    ,LastUpdatedAt
                                                    ,LastUpdatedBy
                                                    --extra columns
                                                    ,FinancialRecordID
                                                    ,RecordDetailId
                                                    ,RecordDetailType
                                                    ,PaymentClassCode
                                                    ,ReferenceNumber
                                                    ,DetailPaidAmount
                                                    ,DetailGroupID
                                                    ,DetailCreationDate
                                                    ,AdjustmentVersion
                                                    ,RiskGroupVendorMapID
                                                    ,MethodOfPayment
                                                    ,RateCoverageType
                                                    ,QualifierId
                                                 )
                                             select R.RecordID
                                                   ,C.CheckId
                                                   ,C.CheckNumber
                                                   ,C.DateCreated
                                                   ,C.Amount
                                                   ,C.CheckStatus
                                                   ,C.VoidReason
                                                   ,C.ExternalCheckNumber
                                                   ,C.ExternalCheckCurrency
                                                   ,C.ExternalCheckAmount
                                                   ,C.ExternalConversionRate
                                                   ,C.ExternalMethodOfPayment
                                                   ,C.ExternalCheckDate
                                                   ,C.CheckClearedDate
                                                   ,C.JobId
                                                   ,R.ParentAccountID
                                                   ,C.CashAccountId
                                                   ,R.RecordStatus
                                                   ,R.RecordType
                                                   ,R.EntityType
                                                   ,R.CreationDate
                                                   ,R.ProcessedDate
                                                   ,R.VoidDate
                                                   ,R.GroupID
                                                   ,R.Notes
                                                   ,R.LastUpdatedAt
                                                   ,R.LastUpdatedBy
                                                    --new columns
                                                   ,CR.CapitationRecordID
                                                   ,CR.CapitationRecordID
                                                   ,CR.RecordType
                                                   ,null
                                                   ,CR.ReferenceID
                                                   ,CR.Amount
                                                   ,CR.GroupID
                                                   ,CR.PostDate
                                                   ,null
                                                   ,CR.RiskGroupVendorMapID
                                                   ,R.MethodOfPayment
                                                   ,CRD.RateCoverageType
                                                   ,CRD.QualifierId
                                             from   Checks C
                                                    inner join #CashAccounts CA
                                                        on C.CashAccountId = CA.CashAccountId
                                                    inner join Records R
                                                        on R.RecordType = 'PS'
                                                           and  R.ReferenceNumber = C.CheckId
                                                           and  R.EntityType = 'CPT'
                                                           and  isnull(R.MethodOfPayment, '') = isnull(isnull(@MethodOfPayment, R.MethodOfPayment), '')
                                                    inner join CapitationRecords CR
                                                        on R.RecordID = CR.PaymentRecordID
                                                           and  CR.RecordType = isnull(@RecordType, CR.RecordType)
                                                    left outer join CapitationRateDetails CRD
                                                        on CR.CapitationRateDetailID = CRD.CapitationRateDetailID
                                                    inner join #Vendors V
                                                        on R.ParentAccountID = V.VendorAccountID
                                                    inner join #Groups G
                                                        on CR.GroupID = G.GroupID
                                             where  C.DateCreated
                                                    between @StartDate
                                                    and     @EndDate
                                                    and isnull(C.CheckNumber, '') = isnull(@CheckNumber, isnull(C.CheckNumber, ''))
                                                    and isnull(C.JobId, -1) = isnull(@JobId, isnull(C.JobId, -1))
                                                    and C.CheckStatus = isnull(@CheckStatus, C.CheckStatus)
                                                    and C.CheckStatus != case when @ShowPaymentWizardVoidedChecks = 'Y' then ''
                                                                              else 'PWV'
                                                                         end
                                             option (recompile)

                                             select @error = @@error
                                             if @error != 0
                                                 begin
                                                     select @ProcedureStep = 2
                                                     select @UserMsg = 'Check Register could not be created. Contact System Administrator.'
                                                     select @LogMsg
                                                         = 'Insert failed for checks that were paid. Error: ' + convert(varchar, @error) + ' occurred.'
                                                     raiserror(
                                                                  65500
                                                                 ,1
                                                                 ,1
                                                                 ,@ProductName
                                                                 ,@ProcedureName
                                                                 ,@ProcedureStep
                                                                 ,@UserMsg
                                                                 ,@LogMsg
                                                                 ,@SessionID
                                                                 ,-1
                                                                 ,@rowcount
                                                                 ,1
                                                              )
                                                     goto AppErrorExit
                                                 end

                                             if @ShowVoidedChecks = 'Y'
                                                 begin
                                                     -- Add Voided Capitation Checks
                                                     insert into    #ResultSet
                                                         (
                                                             RecordID
                                                            ,CheckID
                                                            ,CheckNumber
                                                            ,CheckDate
                                                            ,CheckAmount
                                                            ,CheckStatusCode
                                                            ,CheckVoidReason
                                                            ,ExternalCheckNumber
                                                            ,ExternalCheckCurrency
                                                            ,ExternalCheckAmount
                                                            ,ExternalConversionRate
                                                            ,ExternalMethodOfPaymentCode
                                                            ,ExternalCheckDate
                                                            ,CheckClearedDate
                                                            ,PaymentWizardJobId
                                                            ,ParentAccountID
                                                            ,CashAccountId
                                                            ,RecordStatusCode
                                                            ,RecordTypeCode
                                                            ,EntityTypeCode
                                                            ,CreationDate
                                                            ,ProcessedDate
                                                            ,VoidDate
                                                            ,CheckGroupID
                                                            ,Notes
                                                            ,LastUpdatedAt
                                                            ,LastUpdatedBy
                                                            --extra columns
                                                            ,FinancialRecordID
                                                            ,RecordDetailId
                                                            ,RecordDetailType
                                                            ,PaymentClassCode
                                                            ,ReferenceNumber
                                                            ,DetailPaidAmount
                                                            ,DetailGroupID
                                                            ,DetailCreationDate
                                                            ,AdjustmentVersion
                                                            ,RiskGroupVendorMapID
                                                            ,MethodOfPayment
                                                            ,RateCoverageType
                                                            ,QualifierId
                                                         )
                                                     select R.RecordID
                                                           ,C.CheckId
                                                           ,C.CheckNumber
                                                           ,C.DateCreated
                                                           ,C.Amount
                                                           ,C.CheckStatus
                                                           ,C.VoidReason
                                                           ,C.ExternalCheckNumber
                                                           ,C.ExternalCheckCurrency
                                                           ,C.ExternalCheckAmount
                                                           ,C.ExternalConversionRate
                                                           ,C.ExternalMethodOfPayment
                                                           ,C.ExternalCheckDate
                                                           ,C.CheckClearedDate
                                                           ,C.JobId
                                                           ,R.ParentAccountID
                                                           ,C.CashAccountId
                                                           ,R.RecordStatus
                                                           ,R.RecordType
                                                           ,R.EntityType
                                                           ,R.CreationDate
                                                           ,R.ProcessedDate
                                                           ,R.VoidDate
                                                           ,R.GroupID
                                                           ,R.Notes
                                                           ,R.LastUpdatedAt
                                                           ,R.LastUpdatedBy
                                                            --new columns
                                                           ,CR.CapitationRecordID
                                                           ,CR.CapitationRecordID
                                                           ,CR.RecordType
                                                           ,null
                                                           ,CR.ReferenceID
                                                           ,CR.Amount
                                                           ,CR.GroupID
                                                           ,CR.PostDate
                                                           ,null
                                                           ,CR.RiskGroupVendorMapID
                                                           ,R.MethodOfPayment
                                                           ,CRD.RateCoverageType
                                                           ,CRD.QualifierId
                                                     from   Checks C
                                                            inner join #CashAccounts CA
                                                                on C.CashAccountId = CA.CashAccountId
                                                            inner join Records R
                                                                on R.RecordType = 'PS'
                                                                   and  R.ReferenceNumber = C.CheckId
                                                                   and  R.EntityType = 'CPT'
                                                                   and  isnull(R.MethodOfPayment, '') = isnull(isnull(@MethodOfPayment, R.MethodOfPayment), '')
                                                            inner join VoidCapitationCheckDetails VCCD
                                                                on R.RecordID = VCCD.PaymentRecordID
                                                            inner join CapitationRecords CR
                                                                on VCCD.CapitationRecordID = CR.CapitationRecordID
                                                                   and  CR.RecordType = isnull(@RecordType, CR.RecordType)
                                                            left outer join CapitationRateDetails CRD
                                                                on CR.CapitationRateDetailID = CRD.CapitationRateDetailID
                                                            inner join #Vendors V
                                                                on R.ParentAccountID = V.VendorAccountID
                                                            inner join #Groups G
                                                                on CR.GroupID = G.GroupID
                                                     where  C.DateCreated
                                                            between @StartDate
                                                            and     @EndDate
                                                            and isnull(C.CheckNumber, '') = isnull(@CheckNumber, isnull(C.CheckNumber, ''))
                                                            and isnull(C.JobId, -1) = isnull(@JobId, isnull(C.JobId, -1))
                                                            and C.CheckStatus = isnull(@CheckStatus, C.CheckStatus)
                                                            and C.CheckStatus != 'PWV'
                                                     option (recompile)

                                                     select @error = @@error
                                                     if @error != 0
                                                         begin
                                                             select @ProcedureStep = 2
                                                             select @UserMsg = 'Check Register could not be created. Contact System Administrator.'
                                                             select @LogMsg
                                                                 = 'Insert failed for checks that were paid. Error: ' + convert(varchar, @error) + ' occurred.'
                                                             raiserror(
                                                                          65500
                                                                         ,1
                                                                         ,1
                                                                         ,@ProductName
                                                                         ,@ProcedureName
                                                                         ,@ProcedureStep
                                                                         ,@UserMsg
                                                                         ,@LogMsg
                                                                         ,@SessionID
                                                                         ,-1
                                                                         ,@rowcount
                                                                         ,1
                                                                      )
                                                             goto AppErrorExit
                                                         end

                                                     --Voided capitation checks with negative amounts
                                                     insert into    #ResultSet
                                                         (
                                                             RecordID
                                                            ,CheckID
                                                            ,CheckNumber
                                                            ,CheckDate
                                                            ,CheckAmount
                                                            ,CheckVoidReason
                                                            ,CheckStatusCode
                                                            ,ExternalCheckNumber
                                                            ,ExternalCheckCurrency
                                                            ,ExternalCheckAmount
                                                            ,ExternalMethodOfPaymentCode
                                                            ,ExternalCheckDate
                                                            ,CheckClearedDate
                                                            ,ExternalConversionRate
                                                            ,PaymentWizardJobId
                                                            ,ParentAccountID
                                                            ,CashAccountId
                                                            ,RecordStatusCode
                                                            ,RecordTypeCode
                                                            ,EntityTypeCode
                                                            ,CreationDate
                                                            ,ProcessedDate
                                                            ,VoidDate
                                                            ,CheckGroupID
                                                            ,Notes
                                                            ,LastUpdatedAt
                                                            ,LastUpdatedBy
                                                            --extra columns
                                                            ,FinancialRecordID
                                                            ,RecordDetailId
                                                            ,RecordDetailType
                                                            ,ReferenceNumber
                                                            ,DetailPaidAmount
                                                            ,DetailGroupID
                                                            ,DetailCreationDate
                                                            ,PaymentClassCode
                                                            ,AdjustmentVersion
                                                            ,RiskGroupVendorMapID
                                                            ,MethodOfPayment
                                                            ,VoidInsert
                                                            ,RateCoverageType
                                                            ,QualifierId
                                                         )
                                                     select R.RecordID
                                                           ,C.CheckId
                                                           ,C.CheckNumber
                                                           ,C.DateCreated
                                                           ,- (C.Amount)
                                                           ,C.VoidReason
                                                           ,C.CheckStatus
                                                           ,C.ExternalCheckNumber
                                                           ,C.ExternalCheckCurrency
                                                           ,- (C.ExternalCheckAmount)
                                                           ,C.ExternalMethodOfPayment
                                                           ,C.ExternalCheckDate
                                                           ,C.CheckClearedDate
                                                           ,C.ExternalConversionRate
                                                           ,C.JobId
                                                           ,R.ParentAccountID
                                                           ,C.CashAccountId
                                                           ,R.RecordStatus
                                                           ,R.RecordType
                                                           ,R.EntityType
                                                           ,R.CreationDate
                                                           ,R.ProcessedDate
                                                           ,R.VoidDate
                                                           ,R.GroupID
                                                           ,R.Notes
                                                           ,R.LastUpdatedAt
                                                           ,R.LastUpdatedBy
                                                            --new columns
                                                           ,CR.CapitationRecordID
                                                           ,CR.CapitationRecordID
                                                           ,CR.RecordType
                                                           ,CR.ReferenceID
                                                           ,- (CR.Amount)
                                                           ,CR.GroupID
                                                           ,CR.PostDate
                                                           ,null
                                                           ,null
                                                           ,CR.RiskGroupVendorMapID
                                                           ,R.MethodOfPayment
                                                           ,'Y'
                                                           ,CRD.RateCoverageType
                                                           ,CRD.QualifierId
                                                     from   Checks C
                                                            inner join #CashAccounts CA
                                                                on C.CashAccountId = CA.CashAccountId
                                                            inner join Records R
                                                                on R.RecordType = 'PS'
                                                                   and  R.ReferenceNumber = C.CheckId
                                                                   and  R.EntityType = 'CPT'
                                                                   and  isnull(R.MethodOfPayment, '') = isnull(isnull(@MethodOfPayment, R.MethodOfPayment), '')
                                                            inner join VoidCapitationCheckDetails VCCD
                                                                on R.RecordID = VCCD.PaymentRecordID
                                                            inner join CapitationRecords CR
                                                                on VCCD.CapitationRecordID = CR.CapitationRecordID
                                                                   and  CR.RecordType = isnull(@RecordType, CR.RecordType)
                                                            left outer join CapitationRateDetails CRD
                                                                on CR.CapitationRateDetailID = CRD.CapitationRateDetailID
                                                            inner join #Vendors V
                                                                on R.ParentAccountID = V.VendorAccountID
                                                            --filter the non selected claims out
                                                            inner join #Groups G
                                                                on CR.GroupID = G.GroupID
                                                     where  C.DateVoided
                                                            between @StartDate
                                                            and     @EndDate
                                                            and isnull(C.CheckNumber, '') = isnull(@CheckNumber, isnull(C.CheckNumber, ''))
                                                            and isnull(C.JobId, -1) = isnull(@JobId, isnull(C.JobId, -1))
                                                            and C.CheckStatus = isnull(@CheckStatus, C.CheckStatus)
                                                            and C.CheckStatus != 'PWV'
                                                     option (recompile)

                                                     select @error = @@error
                                                     if @error != 0
                                                         begin
                                                             select @ProcedureStep = 2
                                                             select @UserMsg = 'Check Register could not be created. Contact System Administrator.'
                                                             select @LogMsg
                                                                 = 'Insert failed for checks that were paid. Error: ' + convert(varchar, @error) + ' occurred.'
                                                             raiserror(
                                                                          65500
                                                                         ,1
                                                                         ,1
                                                                         ,@ProductName
                                                                         ,@ProcedureName
                                                                         ,@ProcedureStep
                                                                         ,@UserMsg
                                                                         ,@LogMsg
                                                                         ,@SessionID
                                                                         ,-1
                                                                         ,@rowcount
                                                                         ,1
                                                                      )
                                                             goto AppErrorExit
                                                         end

                                                 end --- of "if @ShowVoidedChecks = 'Y'"
                                         end -- if isnull(@EntityType,'') = '' or @EntityType ='CPT'   --Capitation 

                                     if (
                                            isnull(@EntityType, '') = ''
                                            or  @EntityType = 'GCP'
                                        ) -- 1DL, @EIN is not null & @GroupID is not null   
                                         begin

                                             insert into    #ResultSet
                                                 (
                                                     RecordID
                                                    ,CheckID
                                                    ,CheckNumber
                                                    ,CheckDate
                                                    ,CheckAmount
                                                    ,CheckStatusCode
                                                    ,CheckVoidReason
                                                    ,ExternalCheckNumber
                                                    ,ExternalCheckCurrency
                                                    ,ExternalCheckAmount
                                                    ,ExternalConversionRate
                                                    ,ExternalMethodOfPaymentCode
                                                    ,ExternalCheckDate
                                                    ,CheckClearedDate
                                                    ,PaymentWizardJobId
                                                    ,ParentAccountID
                                                    ,CashAccountId
                                                    ,RecordStatusCode
                                                    ,RecordTypeCode
                                                    ,EntityTypeCode
                                                    ,CreationDate
                                                    ,ProcessedDate
                                                    ,VoidDate
                                                    ,CheckGroupID
                                                    ,Notes
                                                    ,LastUpdatedAt
                                                    ,LastUpdatedBy
                                                    --extra columns
                                                    ,FinancialRecordID
                                                    ,RecordDetailId
                                                    ,RecordDetailType
                                                    ,PaymentClassCode
                                                    ,ReferenceNumber
                                                    ,DetailPaidAmount
                                                    ,DetailGroupID
                                                    ,DetailCreationDate
                                                    ,AdjustmentVersion
                                                    ,RiskGroupVendorMapID
                                                    ,MethodOfPayment
                                                    ,RateCoverageType
                                                    ,QualifierId
                                                 )
                                             select R.RecordID
                                                   ,C.CheckId
                                                   ,C.CheckNumber
                                                   ,C.DateCreated
                                                   ,C.Amount
                                                   ,C.CheckStatus
                                                   ,C.VoidReason
                                                   ,C.ExternalCheckNumber
                                                   ,C.ExternalCheckCurrency
                                                   ,C.ExternalCheckAmount
                                                   ,C.ExternalConversionRate
                                                   ,C.ExternalMethodOfPayment
                                                   ,C.ExternalCheckDate
                                                   ,C.CheckClearedDate
                                                   ,C.JobId
                                                   ,R.ParentAccountID
                                                   ,C.CashAccountId
                                                   ,R.RecordStatus
                                                   ,R.RecordType
                                                   ,R.EntityType
                                                   ,R.CreationDate
                                                   ,R.ProcessedDate
                                                   ,R.VoidDate
                                                   ,R.GroupID
                                                   ,R.Notes
                                                   ,R.LastUpdatedAt
                                                   ,R.LastUpdatedBy
                                                    --new columns
                                                   ,CR.GlobalCapitationRecordID
                                                   ,CR.GlobalCapitationRecordID
                                                   ,CR.RecordType
                                                   ,null
                                                   ,CR.ReferenceID
                                                   ,CR.Amount
                                                   ,CR.GroupID
                                                   ,CR.PostDate
                                                   ,null
                                                   ,null
                                                   ,R.MethodOfPayment
                                                   ,CRD.RateCoverageType
                                                   ,CRD.QualifierId
                                             from   Checks C
                                                    inner join #CashAccounts CA
                                                        on C.CashAccountId = CA.CashAccountId
                                                    inner join Records R
                                                        on R.RecordType = 'PS'
                                                           and  R.ReferenceNumber = C.CheckId
                                                           and  R.EntityType = 'GCP'
                                                           and  isnull(R.MethodOfPayment, '') = isnull(isnull(@MethodOfPayment, R.MethodOfPayment), '')
                                                    inner join GlobalCapitationRecords CR
                                                        on R.RecordID = CR.PaymentRecordID
                                                           and  CR.RecordType = isnull(@RecordType, CR.RecordType)
                                                    left outer join CapitationRateDetails CRD
                                                        on CR.CapitationRateDetailID = CRD.CapitationRateDetailID
                                                    inner join #Vendors V
                                                        on R.ParentAccountID = V.VendorAccountID
                                                    inner join #Groups G
                                                        on CR.GroupID = G.GroupID
                                             where  C.DateCreated
                                                    between @StartDate
                                                    and     @EndDate
                                                    and isnull(C.CheckNumber, '') = isnull(@CheckNumber, isnull(C.CheckNumber, ''))
                                                    and isnull(C.JobId, -1) = isnull(@JobId, isnull(C.JobId, -1))
                                                    and C.CheckStatus = isnull(@CheckStatus, C.CheckStatus)
                                                    and C.CheckStatus != case when @ShowPaymentWizardVoidedChecks = 'Y' then ''
                                                                              else 'PWV'
                                                                         end
                                             option (recompile)

                                             select @error = @@error
                                             if @error != 0
                                                 begin
                                                     select @ProcedureStep = 2
                                                     select @UserMsg = 'Check Register could not be created. Contact System Administrator.'
                                                     select @LogMsg
                                                         = 'Insert failed for checks that were paid. Error: ' + convert(varchar, @error) + ' occurred.'
                                                     raiserror(
                                                                  65500
                                                                 ,1
                                                                 ,1
                                                                 ,@ProductName
                                                                 ,@ProcedureName
                                                                 ,@ProcedureStep
                                                                 ,@UserMsg
                                                                 ,@LogMsg
                                                                 ,@SessionID
                                                                 ,-1
                                                                 ,@rowcount
                                                                 ,1
                                                              )
                                                     goto AppErrorExit
                                                 end

                                             if @ShowVoidedChecks = 'Y'
                                                 begin
                                                     -- Add Voided Capitation Checks
                                                     insert into    #ResultSet
                                                         (
                                                             RecordID
                                                            ,CheckID
                                                            ,CheckNumber
                                                            ,CheckDate
                                                            ,CheckAmount
                                                            ,CheckStatusCode
                                                            ,CheckVoidReason
                                                            ,ExternalCheckNumber
                                                            ,ExternalCheckCurrency
                                                            ,ExternalCheckAmount
                                                            ,ExternalConversionRate
                                                            ,ExternalMethodOfPaymentCode
                                                            ,ExternalCheckDate
                                                            ,CheckClearedDate
                                                            ,PaymentWizardJobId
                                                            ,ParentAccountID
                                                            ,CashAccountId
                                                            ,RecordStatusCode
                                                            ,RecordTypeCode
                                                            ,EntityTypeCode
                                                            ,CreationDate
                                                            ,ProcessedDate
                                                            ,VoidDate
                                                            ,CheckGroupID
                                                            ,Notes
                                                            ,LastUpdatedAt
                                                            ,LastUpdatedBy
                                                            --extra columns
                                                            ,FinancialRecordID
                                                            ,RecordDetailId
                                                            ,RecordDetailType
                                                            ,PaymentClassCode
                                                            ,ReferenceNumber
                                                            ,DetailPaidAmount
                                                            ,DetailGroupID
                                                            ,DetailCreationDate
                                                            ,AdjustmentVersion
                                                            ,RiskGroupVendorMapID
                                                            ,MethodOfPayment
                                                            ,RateCoverageType
                                                            ,QualifierId
                                                         )
                                                     select R.RecordID
                                                           ,C.CheckId
                                                           ,C.CheckNumber
                                                           ,C.DateCreated
                                                           ,C.Amount
                                                           ,C.CheckStatus
                                                           ,C.VoidReason
                                                           ,C.ExternalCheckNumber
                                                           ,C.ExternalCheckCurrency
                                                           ,C.ExternalCheckAmount
                                                           ,C.ExternalConversionRate
                                                           ,C.ExternalMethodOfPayment
                                                           ,C.ExternalCheckDate
                                                           ,C.CheckClearedDate
                                                           ,C.JobId
                                                           ,R.ParentAccountID
                                                           ,C.CashAccountId
                                                           ,R.RecordStatus
                                                           ,R.RecordType
                                                           ,R.EntityType
                                                           ,R.CreationDate
                                                           ,R.ProcessedDate
                                                           ,R.VoidDate
                                                           ,R.GroupID
                                                           ,R.Notes
                                                           ,R.LastUpdatedAt
                                                           ,R.LastUpdatedBy
                                                            --new columns
                                                           ,CR.GlobalCapitationRecordID
                                                           ,CR.GlobalCapitationRecordID
                                                           ,CR.RecordType
                                                           ,null
                                                           ,CR.ReferenceID
                                                           ,CR.Amount
                                                           ,CR.GroupID
                                                           ,CR.PostDate
                                                           ,null
                                                           ,null
                                                           ,R.MethodOfPayment
                                                           ,CRD.RateCoverageType
                                                           ,CRD.QualifierId
                                                     from   Checks C
                                                            inner join #CashAccounts CA
                                                                on C.CashAccountId = CA.CashAccountId
                                                            inner join Records R
                                                                on R.RecordType = 'PS'
                                                                   and  R.ReferenceNumber = C.CheckId
                                                                   and  R.EntityType = 'GCP'
                                                                   and  isnull(R.MethodOfPayment, '') = isnull(isnull(@MethodOfPayment, R.MethodOfPayment), '')
                                                            inner join VoidGlobalCapitationCheckDetails VCCD
                                                                on R.RecordID = VCCD.PaymentRecordID
                                                            inner join GlobalCapitationRecords CR
                                                                on VCCD.GlobalCapitationRecordID = CR.GlobalCapitationRecordID
                                                                   and  CR.RecordType = isnull(@RecordType, CR.RecordType)
                                                            left outer join CapitationRateDetails CRD
                                                                on CR.CapitationRateDetailID = CRD.CapitationRateDetailID
                                                            inner join #Vendors V
                                                                on R.ParentAccountID = V.VendorAccountID
                                                            inner join #Groups G
                                                                on CR.GroupID = G.GroupID
                                                     where  C.DateCreated
                                                            between @StartDate
                                                            and     @EndDate
                                                            and isnull(C.CheckNumber, '') = isnull(@CheckNumber, isnull(C.CheckNumber, ''))
                                                            and isnull(C.JobId, -1) = isnull(@JobId, isnull(C.JobId, -1))
                                                            and C.CheckStatus = isnull(@CheckStatus, C.CheckStatus)
                                                            and C.CheckStatus != 'PWV'
                                                     option (recompile)

                                                     select @error = @@error
                                                     if @error != 0
                                                         begin
                                                             select @ProcedureStep = 2
                                                             select @UserMsg = 'Check Register could not be created. Contact System Administrator.'
                                                             select @LogMsg
                                                                 = 'Insert failed for checks that were paid. Error: ' + convert(varchar, @error) + ' occurred.'
                                                             raiserror(
                                                                          65500
                                                                         ,1
                                                                         ,1
                                                                         ,@ProductName
                                                                         ,@ProcedureName
                                                                         ,@ProcedureStep
                                                                         ,@UserMsg
                                                                         ,@LogMsg
                                                                         ,@SessionID
                                                                         ,-1
                                                                         ,@rowcount
                                                                         ,1
                                                                      )
                                                             goto AppErrorExit
                                                         end

                                                     --Voided capitation checks with negative amounts
                                                     insert into    #ResultSet
                                                         (
                                                             RecordID
                                                            ,CheckID
                                                            ,CheckNumber
                                                            ,CheckDate
                                                            ,CheckAmount
                                                            ,CheckVoidReason
                                                            ,CheckStatusCode
                                                            ,ExternalCheckNumber
                                                            ,ExternalCheckCurrency
                                                            ,ExternalCheckAmount
                                                            ,ExternalMethodOfPaymentCode
                                                            ,ExternalCheckDate
                                                            ,CheckClearedDate
                                                            ,ExternalConversionRate
                                                            ,PaymentWizardJobId
                                                            ,ParentAccountID
                                                            ,CashAccountId
                                                            ,RecordStatusCode
                                                            ,RecordTypeCode
                                                            ,EntityTypeCode
                                                            ,CreationDate
                                                            ,ProcessedDate
                                                            ,VoidDate
                                                            ,CheckGroupID
                                                            ,Notes
                                                            ,LastUpdatedAt
                                                            ,LastUpdatedBy
                                                            --extra columns
                                                            ,FinancialRecordID
                                                            ,RecordDetailId
                                                            ,RecordDetailType
                                                            ,ReferenceNumber
                                                            ,DetailPaidAmount
                                                            ,DetailGroupID
                                                            ,DetailCreationDate
                                                            ,PaymentClassCode
                                                            ,AdjustmentVersion
                                                            ,RiskGroupVendorMapID
                                                            ,MethodOfPayment
                                                            ,VoidInsert
                                                            ,RateCoverageType
                                                            ,QualifierId
                                                         )
                                                     select R.RecordID
                                                           ,C.CheckId
                                                           ,C.CheckNumber
                                                           ,C.DateCreated
                                                           ,- (C.Amount)
                                                           ,C.VoidReason
                                                           ,C.CheckStatus
                                                           ,C.ExternalCheckNumber
                                                           ,C.ExternalCheckCurrency
                                                           ,- (C.ExternalCheckAmount)
                                                           ,C.ExternalMethodOfPayment
                                                           ,C.ExternalCheckDate
                                                           ,C.CheckClearedDate
                                                           ,C.ExternalConversionRate
                                                           ,C.JobId
                                                           ,R.ParentAccountID
                                                           ,C.CashAccountId
                                                           ,R.RecordStatus
                                                           ,R.RecordType
                                                           ,R.EntityType
                                                           ,R.CreationDate
                                                           ,R.ProcessedDate
                                                           ,R.VoidDate
                                                           ,R.GroupID
                                                           ,R.Notes
                                                           ,R.LastUpdatedAt
                                                           ,R.LastUpdatedBy
                                                            --new columns
                                                           ,CR.GlobalCapitationRecordID
                                                           ,CR.GlobalCapitationRecordID
                                                           ,CR.RecordType
                                                           ,CR.ReferenceID
                                                           ,- (CR.Amount)
                                                           ,CR.GroupID
                                                           ,CR.PostDate
                                                           ,null
                                                           ,null
                                                           ,null
                                                           ,R.MethodOfPayment
                                                           ,'Y'
                                                           ,CRD.RateCoverageType
                                                           ,CRD.QualifierId
                                                     from   Checks C
                                                            inner join #CashAccounts CA
                                                                on C.CashAccountId = CA.CashAccountId
                                                            inner join Records R
                                                                on R.RecordType = 'PS'
                                                                   and  R.ReferenceNumber = C.CheckId
                                                                   and  R.EntityType = 'GCP'
                                                                   and  isnull(R.MethodOfPayment, '') = isnull(isnull(@MethodOfPayment, R.MethodOfPayment), '')
                                                            inner join VoidGlobalCapitationCheckDetails VCCD
                                                                on R.RecordID = VCCD.PaymentRecordID
                                                            inner join GlobalCapitationRecords CR
                                                                on VCCD.GlobalCapitationRecordID = CR.GlobalCapitationRecordID
                                                                   and  CR.RecordType = isnull(@RecordType, CR.RecordType)
                                                            left outer join CapitationRateDetails CRD
                                                                on CR.CapitationRateDetailID = CRD.CapitationRateDetailID
                                                            inner join #Vendors V
                                                                on R.ParentAccountID = V.VendorAccountID
                                                            --filter the non selected claims out
                                                            inner join #Groups G
                                                                on CR.GroupID = G.GroupID
                                                     where  C.DateVoided
                                                            between @StartDate
                                                            and     @EndDate
                                                            and isnull(C.CheckNumber, '') = isnull(@CheckNumber, isnull(C.CheckNumber, ''))
                                                            and isnull(C.JobId, -1) = isnull(@JobId, isnull(C.JobId, -1))
                                                            and C.CheckStatus = isnull(@CheckStatus, C.CheckStatus)
                                                            and C.CheckStatus != 'PWV'
                                                     option (recompile)

                                                     select @error = @@error
                                                     if @error != 0
                                                         begin
                                                             select @ProcedureStep = 2
                                                             select @UserMsg = 'Check Register could not be created. Contact System Administrator.'
                                                             select @LogMsg
                                                                 = 'Insert failed for checks that were paid. Error: ' + convert(varchar, @error) + ' occurred.'
                                                             raiserror(
                                                                          65500
                                                                         ,1
                                                                         ,1
                                                                         ,@ProductName
                                                                         ,@ProcedureName
                                                                         ,@ProcedureStep
                                                                         ,@UserMsg
                                                                         ,@LogMsg
                                                                         ,@SessionID
                                                                         ,-1
                                                                         ,@rowcount
                                                                         ,1
                                                                      )
                                                             goto AppErrorExit
                                                         end

                                                 end --- of "if @ShowVoidedChecks = 'Y'"
                                         end -- if isnull(@EntityType,'') = '' or @EntityType ='GCP'

                                 end --end of using groups table to filter results

                             else
                                 begin -- else if @GroupID is null 
                                     insert into    #ResultSet
                                         (
                                             RecordID
                                            ,CheckID
                                            ,CheckNumber
                                            ,CheckDate
                                            ,CheckAmount
                                            ,CheckStatusCode
                                            ,CheckVoidReason
                                            ,ExternalCheckNumber
                                            ,ExternalCheckCurrency
                                            ,ExternalCheckAmount
                                            ,ExternalConversionRate
                                            ,ExternalMethodOfPaymentCode
                                            ,ExternalCheckDate
                                            ,CheckClearedDate
                                            ,PaymentWizardJobId
                                            ,ParentAccountID
                                            ,CashAccountId
                                            ,RecordStatusCode
                                            ,RecordTypeCode
                                            ,EntityTypeCode
                                            ,CreationDate
                                            ,ProcessedDate
                                            ,VoidDate
                                            ,CheckGroupID
                                            ,Notes
                                            ,LastUpdatedAt
                                            ,LastUpdatedBy
                                            --extra columns
                                            ,FinancialRecordID
                                            ,RecordDetailId
                                            ,RecordDetailType
                                            ,PaymentClassCode
                                            ,ReferenceNumber
                                            ,DetailPaidAmount
                                            ,DetailGroupID
                                            ,DetailCreationDate
                                            ,AdjustmentVersion
                                            ,RiskGroupVendorMapID
                                            ,MethodOfPayment
                                            ,WriteOffReasonCode
                                         )
                                     select R.RecordID
                                           ,C.CheckId
                                           ,C.CheckNumber
                                           ,C.DateCreated
                                           ,case when R.RecordType = 'PR' then - (C.Amount)
                                                 else C.Amount
                                            end
                                           ,case when
                                                     (
                                                         @ShowVoidedChecks = 'Y'
                                                         and C.CheckStatus = 'VD'
                                                     ) then 'PRT'
                                                 else C.CheckStatus
                                            end
                                           ,case when
                                                     (
                                                         @ShowVoidedChecks = 'Y'
                                                         and C.CheckStatus = 'VD'
                                                     ) then null
                                                 else C.VoidReason
                                            end
                                           ,C.ExternalCheckNumber
                                           ,C.ExternalCheckCurrency
                                           ,case when R.RecordType = 'PR' then - (C.ExternalCheckAmount)
                                                 else C.ExternalCheckAmount
                                            end
                                           ,C.ExternalConversionRate
                                           ,C.ExternalMethodOfPayment
                                           ,C.ExternalCheckDate
                                           ,C.CheckClearedDate
                                           ,C.JobId
                                           ,R.ParentAccountID
                                           ,C.CashAccountId
                                           ,case when
                                                     (
                                                         @ShowVoidedChecks = 'Y'
                                                         and C.CheckStatus = 'VD'
                                                     ) then 'PRT'
                                                 else R.RecordStatus
                                            end
                                           ,R.RecordType
                                           ,R.EntityType
                                           ,R.CreationDate
                                           ,R.ProcessedDate
                                           ,case when
                                                     (
                                                         @ShowVoidedChecks = 'Y'
                                                         and C.CheckStatus = 'VD'
                                                     ) then null
                                                 else R.VoidDate
                                            end
                                           ,R.GroupID
                                           ,R.Notes
                                           ,R.LastUpdatedAt
                                           ,R.LastUpdatedBy
                                            --new columns
                                           ,R2.RecordID
                                           ,RD.ItemID
                                           ,RD.ItemType
                                           ,R2.PaymentClass
                                           ,R2.ReferenceNumber
                                           ,R2.Amount
                                           ,R2.GroupID
                                           ,R2.CreationDate
                                           ,R2.Adjustmentversion
                                           ,R2.RiskGroupVendorMapID
                                           ,R.MethodOfPayment
                                           ,C.WriteOffReason
                                     from   Checks C
                                            inner join Records R
                                                on R.RecordType in ('PS', isnull(@PaymentReceived, ''), isnull(@WriteOff, ''))
                                                   and  R.ReferenceNumber = C.CheckId
                                                   and  C.CashAccountId in
                                                            (
                                                                select  CashAccountId
                                                                from    #CashAccounts
                                                            )
                                                   and  R.EntityType = isnull(@EntityType, R.EntityType)
                                                   and  isnull(R.MethodOfPayment, '') = isnull(isnull(@MethodOfPayment, R.MethodOfPayment), '')
                                            inner join RecordDetails RD
                                                on R.RecordID = RD.RecordID
                                            inner join Records R2
                                                on RD.ItemID = R2.RecordID
                                                   and  R2.RecordType = isnull(@RecordType, R2.RecordType)
                                                   and  isnull(R2.PaymentClass, '') = isnull(@PaymentClass, isnull(R2.PaymentClass, ''))
                                                   and  not (
                                                                @UseProvidersTable = 'Y'
                                                                and R2.ReferenceNumber not in
                                                                        (
                                                                            select  ClaimId
                                                                            from    Claims
                                                                            where   ProviderId in
                                                                                        (
                                                                                            select  ProviderID
                                                                                            from    @Providers
                                                                                        )
                                                                        )
                                                            )
                                            inner join #Vendors V
                                                on R.ParentAccountID = V.VendorAccountID
                                     where  (
                                                (
                                                    R.RecordType = 'PS'
                                                    and C.DateCreated
                                            between @StartDate
                                            and     @EndDate
                                                )
                                                or
                                                    (
                                                        R.RecordType = 'PR'
                                                        and R.CreationDate
                                            between @StartDate
                                            and     @EndDate
                                                    )
                                                or
                                                    (
                                                        R.RecordType = 'WO'
                                                        and C.DateCreated
                                            between @StartDate
                                            and     @EndDate
                                                    )
                                            )
                                            and isnull(C.CheckNumber, '') = isnull(@CheckNumber, isnull(C.CheckNumber, ''))
                                            and isnull(C.JobId, -1) = isnull(@JobId, isnull(C.JobId, -1))
                                            and C.CheckStatus = isnull(@CheckStatus, C.CheckStatus)
                                            and C.CheckStatus != case when @ShowPaymentWizardVoidedChecks = 'Y' then ''
                                                                      else 'PWV'
                                                                 end
                                     option (recompile)

                                     select @error = @@error

                                     if @error != 0
                                         begin
                                             select @ProcedureStep = 2
                                             select @UserMsg = 'Check Register could not be created. Contact System Administrator.'
                                             select @LogMsg = 'Insert failed for checks that were paid. Error: ' + convert(varchar, @error) + ' occurred.'
                                             raiserror(
                                                          65500
                                                         ,1
                                                         ,1
                                                         ,@ProductName
                                                         ,@ProcedureName
                                                         ,@ProcedureStep
                                                         ,@UserMsg
                                                         ,@LogMsg
                                                         ,@SessionID
                                                         ,-1
                                                         ,@rowcount
                                                         ,1
                                                      )
                                             goto AppErrorExit
                                         end


                                     if @ShowVoidedChecks = 'Y'
                                         begin
                                             insert into    #ResultSet
                                                 (
                                                     RecordID
                                                    ,CheckID
                                                    ,CheckNumber
                                                    ,CheckDate
                                                    ,CheckAmount
                                                    ,CheckVoidReason
                                                    ,CheckStatusCode
                                                    ,ExternalCheckNumber
                                                    ,ExternalCheckCurrency
                                                    ,ExternalCheckAmount
                                                    ,ExternalMethodOfPaymentCode
                                                    ,ExternalCheckDate
                                                    ,CheckClearedDate
                                                    ,ExternalConversionRate
                                                    ,PaymentWizardJobId
                                                    ,ParentAccountID
                                                    ,CashAccountId
                                                    ,RecordStatusCode
                                                    ,RecordTypeCode
                                                    ,EntityTypeCode
                                                    ,CreationDate
                                                    ,ProcessedDate
                                                    ,VoidDate
                                                    ,CheckGroupID
                                                    ,Notes
                                                    ,LastUpdatedAt
                                                    ,LastUpdatedBy
                                                    --extra columns
                                                    ,FinancialRecordID
                                                    ,RecordDetailId
                                                    ,RecordDetailType
                                                    ,ReferenceNumber
                                                    ,DetailPaidAmount
                                                    ,DetailGroupID
                                                    ,DetailCreationDate
                                                    ,PaymentClassCode
                                                    ,AdjustmentVersion
                                                    ,RiskGroupVendorMapID
                                                    ,MethodOfPayment
                                                    ,VoidInsert
                                                    ,WriteOffReasonCode
                                                 )
                                             select R.RecordID
                                                   ,C.CheckId
                                                   ,C.CheckNumber
                                                   ,C.DateCreated
                                                   ,- (C.Amount)
                                                   ,C.VoidReason
                                                   ,C.CheckStatus
                                                   ,C.ExternalCheckNumber
                                                   ,C.ExternalCheckCurrency
                                                   ,- (C.ExternalCheckAmount)
                                                   ,C.ExternalMethodOfPayment
                                                   ,C.ExternalCheckDate
                                                   ,C.CheckClearedDate
                                                   ,C.ExternalConversionRate
                                                   ,C.JobId
                                                   ,R.ParentAccountID
                                                   ,C.CashAccountId
                                                   ,R.RecordStatus
                                                   ,R.RecordType
                                                   ,R.EntityType
                                                   ,R.CreationDate
                                                   ,R.ProcessedDate
                                                   ,R.VoidDate
                                                   ,R.GroupID
                                                   ,R.Notes
                                                   ,R.LastUpdatedAt
                                                   ,R.LastUpdatedBy
                                                    --new columns
                                                   ,R2.RecordID
                                                   ,RD.ItemID
                                                   ,RD.ItemType
                                                   ,R2.ReferenceNumber
                                                   ,- (R2.Amount)
                                                   ,R2.GroupID
                                                   ,R2.CreationDate
                                                   ,R2.PaymentClass
                                                   ,R2.Adjustmentversion
                                                   ,R2.RiskGroupVendorMapID
                                                   ,R.MethodOfPayment
                                                   ,'Y'
                                                   ,C.WriteOffReason
                                             from   Checks C
                                                    inner join Records R
                                                        on R.RecordType in ('PS', isnull(@PaymentReceived, ''), isnull(@WriteOff, ''))
                                                           and  R.ReferenceNumber = C.CheckId
                                                           and  C.CashAccountId in
                                                                    (
                                                                        select  CashAccountId
                                                                        from    #CashAccounts
                                                                    )
                                                           and  R.EntityType = isnull(@EntityType, R.EntityType)
                                                           and  isnull(R.MethodOfPayment, '') = isnull(isnull(@MethodOfPayment, R.MethodOfPayment), '')
                                                    inner join RecordDetails RD
                                                        on R.RecordID = RD.RecordID
                                                    inner join Records R2
                                                        on RD.ItemID = R2.RecordID
                                                           and  R2.RecordType = isnull(@RecordType, R2.RecordType)
                                                           and  isnull(R2.PaymentClass, '') = isnull(@PaymentClass, isnull(R2.PaymentClass, ''))
                                                           and  not (
                                                                        @UseProvidersTable = 'Y'
                                                                        and R2.ReferenceNumber not in
                                                                                (
                                                                                    select  ClaimId
                                                                                    from    Claims
                                                                                    where   ProviderId in
                                                                                                (
                                                                                                    select  ProviderID
                                                                                                    from    @Providers
                                                                                                )
                                                                                )
                                                                    )
                                                    inner join #Vendors V
                                                        on R.ParentAccountID = V.VendorAccountID
                                             where  C.DateVoided
                                                    between @StartDate
                                                    and     @EndDate
                                                    and isnull(C.CheckNumber, '') = isnull(@CheckNumber, isnull(C.CheckNumber, ''))
                                                    and isnull(C.JobId, -1) = isnull(@JobId, isnull(C.JobId, -1))
                                                    and C.CheckStatus = isnull(@CheckStatus, C.CheckStatus)
                                                    and C.CheckStatus != 'PWV'
                                             option (recompile)

                                             select @error = @@error
                                             if @error != 0
                                                 begin
                                                     select @ProcedureStep = 2
                                                     select @UserMsg = 'Check Register could not be created. Contact System Administrator.'
                                                     select @LogMsg
                                                         = 'Insert failed for checks that were paid. Error: ' + convert(varchar, @error) + ' occurred.'
                                                     raiserror(
                                                                  65500
                                                                 ,1
                                                                 ,1
                                                                 ,@ProductName
                                                                 ,@ProcedureName
                                                                 ,@ProcedureStep
                                                                 ,@UserMsg
                                                                 ,@LogMsg
                                                                 ,@SessionID
                                                                 ,-1
                                                                 ,@rowcount
                                                                 ,1
                                                              )
                                                     goto AppErrorExit
                                                 end
                                         end --- of "if @ShowVoidedChecks = 'Y'"
                                     else
                                         begin
                                             delete from #ResultSet
                                             where  RecordStatusCode = 'V'
                                         end

                                     if isnull(@EntityType, '') = ''
                                        or  @EntityType = 'CPT' --Capitation (1DL, @EIN is not null & @GroupID is null)
                                         begin
                                             insert into    #ResultSet
                                                 (
                                                     RecordID
                                                    ,CheckID
                                                    ,CheckNumber
                                                    ,CheckDate
                                                    ,CheckAmount
                                                    ,CheckStatusCode
                                                    ,CheckVoidReason
                                                    ,ExternalCheckNumber
                                                    ,ExternalCheckCurrency
                                                    ,ExternalCheckAmount
                                                    ,ExternalConversionRate
                                                    ,ExternalMethodOfPaymentCode
                                                    ,ExternalCheckDate
                                                    ,CheckClearedDate
                                                    ,PaymentWizardJobId
                                                    ,ParentAccountID
                                                    ,CashAccountId
                                                    ,RecordStatusCode
                                                    ,RecordTypeCode
                                                    ,EntityTypeCode
                                                    ,CreationDate
                                                    ,ProcessedDate
                                                    ,VoidDate
                                                    ,CheckGroupID
                                                    ,Notes
                                                    ,LastUpdatedAt
                                                    ,LastUpdatedBy
                                                    --extra columns
                                                    ,FinancialRecordID
                                                    ,RecordDetailId
                                                    ,RecordDetailType
                                                    ,PaymentClassCode
                                                    ,ReferenceNumber
                                                    ,DetailPaidAmount
                                                    ,DetailGroupID
                                                    ,DetailCreationDate
                                                    ,AdjustmentVersion
                                                    ,RiskGroupVendorMapID
                                                    ,MethodOfPayment
                                                    ,RateCoverageType
                                                    ,QualifierId
                                                 )
                                             select R.RecordID
                                                   ,C.CheckId
                                                   ,C.CheckNumber
                                                   ,C.DateCreated
                                                   ,C.Amount
                                                   ,C.CheckStatus
                                                   ,C.VoidReason
                                                   ,C.ExternalCheckNumber
                                                   ,C.ExternalCheckCurrency
                                                   ,C.ExternalCheckAmount
                                                   ,C.ExternalConversionRate
                                                   ,C.ExternalMethodOfPayment
                                                   ,C.ExternalCheckDate
                                                   ,C.CheckClearedDate
                                                   ,C.JobId
                                                   ,R.ParentAccountID
                                                   ,C.CashAccountId
                                                   ,R.RecordStatus
                                                   ,R.RecordType
                                                   ,R.EntityType
                                                   ,R.CreationDate
                                                   ,R.ProcessedDate
                                                   ,R.VoidDate
                                                   ,R.GroupID
                                                   ,R.Notes
                                                   ,R.LastUpdatedAt
                                                   ,R.LastUpdatedBy
                                                    --new columns
                                                   ,CR.CapitationRecordID
                                                   ,CR.CapitationRecordID
                                                   ,CR.RecordType
                                                   ,null
                                                   ,CR.ReferenceID
                                                   ,CR.Amount
                                                   ,CR.GroupID
                                                   ,CR.PostDate
                                                   ,null
                                                   ,CR.RiskGroupVendorMapID
                                                   ,R.MethodOfPayment
                                                   ,CRD.RateCoverageType
                                                   ,CRD.QualifierId
                                             from   Checks C
                                                    inner join #CashAccounts CA
                                                        on C.CashAccountId = CA.CashAccountId
                                                    inner join Records R
                                                        on R.RecordType = 'PS'
                                                           and  R.ReferenceNumber = C.CheckId
                                                           and  isnull(R.MethodOfPayment, '') = isnull(isnull(@MethodOfPayment, R.MethodOfPayment), '')
                                                    inner join CapitationRecords CR
                                                        on R.RecordID = CR.PaymentRecordID
                                                           and  CR.RecordType = isnull(@RecordType, CR.RecordType)
                                                    left outer join CapitationRateDetails CRD
                                                        on CR.CapitationRateDetailID = CRD.CapitationRateDetailID
                                                    inner join #Vendors V
                                                        on R.ParentAccountID = V.VendorAccountID
                                             where  C.DateCreated
                                                    between @StartDate
                                                    and     @EndDate
                                                    and isnull(C.CheckNumber, '') = isnull(@CheckNumber, isnull(C.CheckNumber, ''))
                                                    and isnull(C.JobId, -1) = isnull(@JobId, isnull(C.JobId, -1))
                                                    and C.CheckStatus = isnull(@CheckStatus, C.CheckStatus)
                                                    and C.CheckStatus != case when @ShowPaymentWizardVoidedChecks = 'Y' then ''
                                                                              else 'PWV'
                                                                         end
                                             option (recompile)

                                             select @error = @@error

                                             if @error != 0
                                                 begin
                                                     select @ProcedureStep = 2
                                                     select @UserMsg = 'Check Register could not be created. Contact System Administrator.'
                                                     select @LogMsg
                                                         = 'Insert failed for checks that were paid. Error: ' + convert(varchar, @error) + ' occurred.'
                                                     raiserror(
                                                                  65500
                                                                 ,1
                                                                 ,1
                                                                 ,@ProductName
                                                                 ,@ProcedureName
                                                                 ,@ProcedureStep
                                                                 ,@UserMsg
                                                                 ,@LogMsg
                                                                 ,@SessionID
                                                                 ,-1
                                                                 ,@rowcount
                                                                 ,1
                                                              )
                                                     goto AppErrorExit
                                                 end

                                             if @ShowVoidedChecks = 'Y'
                                                 begin
                                                     --Voided capitation checks
                                                     insert into    #ResultSet
                                                         (
                                                             RecordID
                                                            ,CheckID
                                                            ,CheckNumber
                                                            ,CheckDate
                                                            ,CheckAmount
                                                            ,CheckStatusCode
                                                            ,CheckVoidReason
                                                            ,ExternalCheckNumber
                                                            ,ExternalCheckCurrency
                                                            ,ExternalCheckAmount
                                                            ,ExternalConversionRate
                                                            ,ExternalMethodOfPaymentCode
                                                            ,ExternalCheckDate
                                                            ,CheckClearedDate
                                                            ,PaymentWizardJobId
                                                            ,ParentAccountID
                                                            ,CashAccountId
                                                            ,RecordStatusCode
                                                            ,RecordTypeCode
                                                            ,EntityTypeCode
                                                            ,CreationDate
                                                            ,ProcessedDate
                                                            ,VoidDate
                                                            ,CheckGroupID
                                                            ,Notes
                                                            ,LastUpdatedAt
                                                            ,LastUpdatedBy
                                                            --extra columns
                                                            ,FinancialRecordID
                                                            ,RecordDetailId
                                                            ,RecordDetailType
                                                            ,PaymentClassCode
                                                            ,ReferenceNumber
                                                            ,DetailPaidAmount
                                                            ,DetailGroupID
                                                            ,DetailCreationDate
                                                            ,AdjustmentVersion
                                                            ,RiskGroupVendorMapID
                                                            ,MethodOfPayment
                                                            ,RateCoverageType
                                                            ,QualifierId
                                                         )
                                                     select R.RecordID
                                                           ,C.CheckId
                                                           ,C.CheckNumber
                                                           ,C.DateCreated
                                                           ,C.Amount
                                                           ,C.CheckStatus
                                                           ,C.VoidReason
                                                           ,C.ExternalCheckNumber
                                                           ,C.ExternalCheckCurrency
                                                           ,C.ExternalCheckAmount
                                                           ,C.ExternalConversionRate
                                                           ,C.ExternalMethodOfPayment
                                                           ,C.ExternalCheckDate
                                                           ,C.CheckClearedDate
                                                           ,C.JobId
                                                           ,R.ParentAccountID
                                                           ,C.CashAccountId
                                                           ,R.RecordStatus
                                                           ,R.RecordType
                                                           ,R.EntityType
                                                           ,R.CreationDate
                                                           ,R.ProcessedDate
                                                           ,R.VoidDate
                                                           ,R.GroupID
                                                           ,R.Notes
                                                           ,R.LastUpdatedAt
                                                           ,R.LastUpdatedBy
                                                            --new columns
                                                           ,CR.CapitationRecordID
                                                           ,CR.CapitationRecordID
                                                           ,CR.RecordType
                                                           ,null
                                                           ,CR.ReferenceID
                                                           ,CR.Amount
                                                           ,CR.GroupID
                                                           ,CR.PostDate
                                                           ,null
                                                           ,CR.RiskGroupVendorMapID
                                                           ,R.MethodOfPayment
                                                           ,CRD.RateCoverageType
                                                           ,CRD.QualifierId
                                                     from   Checks C
                                                            inner join #CashAccounts CA
                                                                on C.CashAccountId = CA.CashAccountId
                                                            inner join Records R
                                                                on R.RecordType = 'PS'
                                                                   and  R.ReferenceNumber = C.CheckId
                                                                   and  isnull(R.MethodOfPayment, '') = isnull(isnull(@MethodOfPayment, R.MethodOfPayment), '')
                                                            inner join VoidCapitationCheckDetails VCCD
                                                                on R.RecordID = VCCD.PaymentRecordID
                                                            inner join CapitationRecords CR
                                                                on VCCD.CapitationRecordID = CR.CapitationRecordID
                                                                   and  CR.RecordType = isnull(@RecordType, CR.RecordType)
                                                            left outer join CapitationRateDetails CRD
                                                                on CR.CapitationRateDetailID = CRD.CapitationRateDetailID
                                                            inner join #Vendors V
                                                                on R.ParentAccountID = V.VendorAccountID
                                                     where  C.DateCreated
                                                            between @StartDate
                                                            and     @EndDate
                                                            and isnull(C.CheckNumber, '') = isnull(@CheckNumber, isnull(C.CheckNumber, ''))
                                                            and isnull(C.JobId, -1) = isnull(@JobId, isnull(C.JobId, -1))
                                                            and C.CheckStatus = isnull(@CheckStatus, C.CheckStatus)
                                                            and C.CheckStatus != 'PWV'
                                                     option (recompile)

                                                     select @error = @@error
                                                     if @error != 0
                                                         begin
                                                             select @ProcedureStep = 2
                                                             select @UserMsg = 'Check Register could not be created. Contact System Administrator.'
                                                             select @LogMsg
                                                                 = 'Insert failed for checks that were paid. Error: ' + convert(varchar, @error) + ' occurred.'
                                                             raiserror(
                                                                          65500
                                                                         ,1
                                                                         ,1
                                                                         ,@ProductName
                                                                         ,@ProcedureName
                                                                         ,@ProcedureStep
                                                                         ,@UserMsg
                                                                         ,@LogMsg
                                                                         ,@SessionID
                                                                         ,-1
                                                                         ,@rowcount
                                                                         ,1
                                                                      )
                                                             goto AppErrorExit
                                                         end

                                                     --Voided capitation checks with negative amounts
                                                     insert into    #ResultSet
                                                         (
                                                             RecordID
                                                            ,CheckID
                                                            ,CheckNumber
                                                            ,CheckDate
                                                            ,CheckAmount
                                                            ,CheckVoidReason
                                                            ,CheckStatusCode
                                                            ,ExternalCheckNumber
                                                            ,ExternalCheckCurrency
                                                            ,ExternalCheckAmount
                                                            ,ExternalMethodOfPaymentCode
                                                            ,ExternalCheckDate
                                                            ,CheckClearedDate
                                                            ,ExternalConversionRate
                                                            ,PaymentWizardJobId
                                                            ,ParentAccountID
                                                            ,CashAccountId
                                                            ,RecordStatusCode
                                                            ,RecordTypeCode
                                                            ,EntityTypeCode
                                                            ,CreationDate
                                                            ,ProcessedDate
                                                            ,VoidDate
                                                            ,CheckGroupID
                                                            ,Notes
                                                            ,LastUpdatedAt
                                                            ,LastUpdatedBy
                                                            --extra columns
                                                            ,FinancialRecordID
                                                            ,RecordDetailId
                                                            ,RecordDetailType
                                                            ,ReferenceNumber
                                                            ,DetailPaidAmount
                                                            ,DetailGroupID
                                                            ,DetailCreationDate
                                                            ,PaymentClassCode
                                                            ,AdjustmentVersion
                                                            ,RiskGroupVendorMapID
                                                            ,MethodOfPayment
                                                            ,VoidInsert
                                                            ,RateCoverageType
                                                            ,QualifierId
                                                         )
                                                     select R.RecordID
                                                           ,C.CheckId
                                                           ,C.CheckNumber
                                                           ,C.DateCreated
                                                           ,- (C.Amount)
                                                           ,C.VoidReason
                                                           ,C.CheckStatus
                                                           ,C.ExternalCheckNumber
                                                           ,C.ExternalCheckCurrency
                                                           ,- (C.ExternalCheckAmount)
                                                           ,C.ExternalMethodOfPayment
                                                           ,C.ExternalCheckDate
                                                           ,C.CheckClearedDate
                                                           ,C.ExternalConversionRate
                                                           ,C.JobId
                                                           ,R.ParentAccountID
                                                           ,C.CashAccountId
                                                           ,R.RecordStatus
                                                           ,R.RecordType
                                                           ,R.EntityType
                                                           ,R.CreationDate
                                                           ,R.ProcessedDate
                                                           ,R.VoidDate
                                                           ,R.GroupID
                                                           ,R.Notes
                                                           ,R.LastUpdatedAt
                                                           ,R.LastUpdatedBy
                                                            --new columns
                                                           ,CR.CapitationRecordID
                                                           ,CR.CapitationRecordID
                                                           ,CR.RecordType
                                                           ,CR.ReferenceID
                                                           ,- (CR.Amount)
                                                           ,CR.GroupID
                                                           ,CR.PostDate
                                                           ,null
                                                           ,null
                                                           ,CR.RiskGroupVendorMapID
                                                           ,R.MethodOfPayment
                                                           ,'Y'
                                                           ,CRD.RateCoverageType
                                                           ,CRD.QualifierId
                                                     from   Checks C
                                                            inner join #CashAccounts CA
                                                                on C.CashAccountId = CA.CashAccountId
                                                            inner join Records R
                                                                on R.RecordType = 'PS'
                                                                   and  R.ReferenceNumber = C.CheckId
                                                                   and  isnull(R.MethodOfPayment, '') = isnull(isnull(@MethodOfPayment, R.MethodOfPayment), '')
                                                            inner join VoidCapitationCheckDetails VCCD
                                                                on R.RecordID = VCCD.PaymentRecordID
                                                            inner join CapitationRecords CR
                                                                on VCCD.CapitationRecordID = CR.CapitationRecordID
                                                                   and  CR.RecordType = isnull(@RecordType, CR.RecordType)
                                                            left outer join CapitationRateDetails CRD
                                                                on CR.CapitationRateDetailID = CRD.CapitationRateDetailID
                                                            inner join #Vendors V
                                                                on R.ParentAccountID = V.VendorAccountID
                                                     where  C.DateVoided
                                                            between @StartDate
                                                            and     @EndDate
                                                            and isnull(C.CheckNumber, '') = isnull(@CheckNumber, isnull(C.CheckNumber, ''))
                                                            and isnull(C.JobId, -1) = isnull(@JobId, isnull(C.JobId, -1))
                                                            and C.CheckStatus = isnull(@CheckStatus, C.CheckStatus)
                                                            and C.CheckStatus != 'PWV'
                                                     option (recompile)

                                                     select @error = @@error
                                                     if @error != 0
                                                         begin
                                                             select @ProcedureStep = 2
                                                             select @UserMsg = 'Check Register could not be created. Contact System Administrator.'
                                                             select @LogMsg
                                                                 = 'Insert failed for checks that were paid. Error: ' + convert(varchar, @error) + ' occurred.'
                                                             raiserror(
                                                                          65500
                                                                         ,1
                                                                         ,1
                                                                         ,@ProductName
                                                                         ,@ProcedureName
                                                                         ,@ProcedureStep
                                                                         ,@UserMsg
                                                                         ,@LogMsg
                                                                         ,@SessionID
                                                                         ,-1
                                                                         ,@rowcount
                                                                         ,1
                                                                      )
                                                             goto AppErrorExit
                                                         end

                                                 end --- of "if @ShowVoidedChecks = 'Y'"
                                         end -- if isnull(@EntityType,'') = '' or @EntityType ='CPT' --Capitation

                                     if (
                                            isnull(@EntityType, '') = ''
                                            or  @EntityType = 'GCP'
                                        ) -- 1DL, @EIN is not null & @GroupID is null   
                                         begin
                                             insert into    #ResultSet
                                                 (
                                                     RecordID
                                                    ,CheckID
                                                    ,CheckNumber
                                                    ,CheckDate
                                                    ,CheckAmount
                                                    ,CheckStatusCode
                                                    ,CheckVoidReason
                                                    ,ExternalCheckNumber
                                                    ,ExternalCheckCurrency
                                                    ,ExternalCheckAmount
                                                    ,ExternalConversionRate
                                                    ,ExternalMethodOfPaymentCode
                                                    ,ExternalCheckDate
                                                    ,CheckClearedDate
                                                    ,PaymentWizardJobId
                                                    ,ParentAccountID
                                                    ,CashAccountId
                                                    ,RecordStatusCode
                                                    ,RecordTypeCode
                                                    ,EntityTypeCode
                                                    ,CreationDate
                                                    ,ProcessedDate
                                                    ,VoidDate
                                                    ,CheckGroupID
                                                    ,Notes
                                                    ,LastUpdatedAt
                                                    ,LastUpdatedBy
                                                    --extra columns
                                                    ,FinancialRecordID
                                                    ,RecordDetailId
                                                    ,RecordDetailType
                                                    ,PaymentClassCode
                                                    ,ReferenceNumber
                                                    ,DetailPaidAmount
                                                    ,DetailGroupID
                                                    ,DetailCreationDate
                                                    ,AdjustmentVersion
                                                    ,RiskGroupVendorMapID
                                                    ,MethodOfPayment
                                                    ,RateCoverageType
                                                    ,QualifierId
                                                 )
                                             select R.RecordID
                                                   ,C.CheckId
                                                   ,C.CheckNumber
                                                   ,C.DateCreated
                                                   ,C.Amount
                                                   ,C.CheckStatus
                                                   ,C.VoidReason
                                                   ,C.ExternalCheckNumber
                                                   ,C.ExternalCheckCurrency
                                                   ,C.ExternalCheckAmount
                                                   ,C.ExternalConversionRate
                                                   ,C.ExternalMethodOfPayment
                                                   ,C.ExternalCheckDate
                                                   ,C.CheckClearedDate
                                                   ,C.JobId
                                                   ,R.ParentAccountID
                                                   ,C.CashAccountId
                                                   ,R.RecordStatus
                                                   ,R.RecordType
                                                   ,R.EntityType
                                                   ,R.CreationDate
                                                   ,R.ProcessedDate
                                                   ,R.VoidDate
                                                   ,R.GroupID
                                                   ,R.Notes
                                                   ,R.LastUpdatedAt
                                                   ,R.LastUpdatedBy
                                                    --new columns
                                                   ,CR.GlobalCapitationRecordID
                                                   ,CR.GlobalCapitationRecordID
                                                   ,CR.RecordType
                                                   ,null
                                                   ,CR.ReferenceID
                                                   ,CR.Amount
                                                   ,CR.GroupID
                                                   ,CR.PostDate
                                                   ,null
                                                   ,null
                                                   ,R.MethodOfPayment
                                                   ,CRD.RateCoverageType
                                                   ,CRD.QualifierId
                                             from   Checks C
                                                    inner join #CashAccounts CA
                                                        on C.CashAccountId = CA.CashAccountId
                                                    inner join Records R
                                                        on R.RecordType = 'PS'
                                                           and  R.ReferenceNumber = C.CheckId
                                                           and  isnull(R.MethodOfPayment, '') = isnull(isnull(@MethodOfPayment, R.MethodOfPayment), '')
                                                    inner join GlobalCapitationRecords CR
                                                        on R.RecordID = CR.PaymentRecordID
                                                           and  CR.RecordType = isnull(@RecordType, CR.RecordType)
                                                    left outer join CapitationRateDetails CRD
                                                        on CR.CapitationRateDetailID = CRD.CapitationRateDetailID
                                                    inner join #Vendors V
                                                        on R.ParentAccountID = V.VendorAccountID
                                             where  C.DateCreated
                                                    between @StartDate
                                                    and     @EndDate
                                                    and isnull(C.CheckNumber, '') = isnull(@CheckNumber, isnull(C.CheckNumber, ''))
                                                    and isnull(C.JobId, -1) = isnull(@JobId, isnull(C.JobId, -1))
                                                    and C.CheckStatus = isnull(@CheckStatus, C.CheckStatus)
                                                    and C.CheckStatus != case when @ShowPaymentWizardVoidedChecks = 'Y' then ''
                                                                              else 'PWV'
                                                                         end
                                             option (recompile)

                                             select @error = @@error

                                             if @error != 0
                                                 begin
                                                     select @ProcedureStep = 2
                                                     select @UserMsg = 'Check Register could not be created. Contact System Administrator.'
                                                     select @LogMsg
                                                         = 'Insert failed for checks that were paid. Error: ' + convert(varchar, @error) + ' occurred.'
                                                     raiserror(
                                                                  65500
                                                                 ,1
                                                                 ,1
                                                                 ,@ProductName
                                                                 ,@ProcedureName
                                                                 ,@ProcedureStep
                                                                 ,@UserMsg
                                                                 ,@LogMsg
                                                                 ,@SessionID
                                                                 ,-1
                                                                 ,@rowcount
                                                                 ,1
                                                              )
                                                     goto AppErrorExit
                                                 end

                                             if @ShowVoidedChecks = 'Y'
                                                 begin
                                                     --Voided capitation checks
                                                     insert into    #ResultSet
                                                         (
                                                             RecordID
                                                            ,CheckID
                                                            ,CheckNumber
                                                            ,CheckDate
                                                            ,CheckAmount
                                                            ,CheckStatusCode
                                                            ,CheckVoidReason
                                                            ,ExternalCheckNumber
                                                            ,ExternalCheckCurrency
                                                            ,ExternalCheckAmount
                                                            ,ExternalConversionRate
                                                            ,ExternalMethodOfPaymentCode
                                                            ,ExternalCheckDate
                                                            ,CheckClearedDate
                                                            ,PaymentWizardJobId
                                                            ,ParentAccountID
                                                            ,CashAccountId
                                                            ,RecordStatusCode
                                                            ,RecordTypeCode
                                                            ,EntityTypeCode
                                                            ,CreationDate
                                                            ,ProcessedDate
                                                            ,VoidDate
                                                            ,CheckGroupID
                                                            ,Notes
                                                            ,LastUpdatedAt
                                                            ,LastUpdatedBy
                                                            --extra columns
                                                            ,FinancialRecordID
                                                            ,RecordDetailId
                                                            ,RecordDetailType
                                                            ,PaymentClassCode
                                                            ,ReferenceNumber
                                                            ,DetailPaidAmount
                                                            ,DetailGroupID
                                                            ,DetailCreationDate
                                                            ,AdjustmentVersion
                                                            ,RiskGroupVendorMapID
                                                            ,MethodOfPayment
                                                            ,RateCoverageType
                                                            ,QualifierId
                                                         )
                                                     select R.RecordID
                                                           ,C.CheckId
                                                           ,C.CheckNumber
                                                           ,C.DateCreated
                                                           ,C.Amount
                                                           ,C.CheckStatus
                                                           ,C.VoidReason
                                                           ,C.ExternalCheckNumber
                                                           ,C.ExternalCheckCurrency
                                                           ,C.ExternalCheckAmount
                                                           ,C.ExternalConversionRate
                                                           ,C.ExternalMethodOfPayment
                                                           ,C.ExternalCheckDate
                                                           ,C.CheckClearedDate
                                                           ,C.JobId
                                                           ,R.ParentAccountID
                                                           ,C.CashAccountId
                                                           ,R.RecordStatus
                                                           ,R.RecordType
                                                           ,R.EntityType
                                                           ,R.CreationDate
                                                           ,R.ProcessedDate
                                                           ,R.VoidDate
                                                           ,R.GroupID
                                                           ,R.Notes
                                                           ,R.LastUpdatedAt
                                                           ,R.LastUpdatedBy
                                                                    --new columns
                                                           ,CR.GlobalCapitationRecordID
                                                           ,CR.GlobalCapitationRecordID
                                                           ,CR.RecordType
                                                           ,null
                                                           ,CR.ReferenceID
                                                           ,CR.Amount
                                                           ,CR.GroupID
                                                           ,CR.PostDate
                                                           ,null
                                                           ,null    -- CR.RiskGroupVendorMapID,
                                                           ,R.MethodOfPayment
                                                           ,CRD.RateCoverageType
                                                           ,CRD.QualifierId
                                                     from   Checks C
                                                            inner join #CashAccounts CA
                                                                on C.CashAccountId = CA.CashAccountId
                                                            inner join Records R
                                                                on R.RecordType = 'PS'
                                                                   and  R.ReferenceNumber = C.CheckId
                                                                   and  isnull(R.MethodOfPayment, '') = isnull(isnull(@MethodOfPayment, R.MethodOfPayment), '')
                                                            inner join VoidGlobalCapitationCheckDetails VCCD
                                                                on R.RecordID = VCCD.PaymentRecordID
                                                            inner join GlobalCapitationRecords CR
                                                                on VCCD.GlobalCapitationRecordID = CR.GlobalCapitationRecordID
                                                                   and  CR.RecordType = isnull(@RecordType, CR.RecordType)
                                                            left outer join CapitationRateDetails CRD
                                                                on CR.CapitationRateDetailID = CRD.CapitationRateDetailID
                                                            inner join #Vendors V
                                                                on R.ParentAccountID = V.VendorAccountID
                                                     where  C.DateCreated
                                                            between @StartDate
                                                            and     @EndDate
                                                            and isnull(C.CheckNumber, '') = isnull(@CheckNumber, isnull(C.CheckNumber, ''))
                                                            and isnull(C.JobId, -1) = isnull(@JobId, isnull(C.JobId, -1))
                                                            and C.CheckStatus = isnull(@CheckStatus, C.CheckStatus)
                                                            and C.CheckStatus != 'PWV'
                                                     option (recompile)

                                                     select @error = @@error
                                                     if @error != 0
                                                         begin
                                                             select @ProcedureStep = 2
                                                             select @UserMsg = 'Check Register could not be created. Contact System Administrator.'
                                                             select @LogMsg
                                                                 = 'Insert failed for checks that were paid. Error: ' + convert(varchar, @error) + ' occurred.'
                                                             raiserror(
                                                                          65500
                                                                         ,1
                                                                         ,1
                                                                         ,@ProductName
                                                                         ,@ProcedureName
                                                                         ,@ProcedureStep
                                                                         ,@UserMsg
                                                                         ,@LogMsg
                                                                         ,@SessionID
                                                                         ,-1
                                                                         ,@rowcount
                                                                         ,1
                                                                      )
                                                             goto AppErrorExit
                                                         end

                                                     --Voided capitation checks with negative amounts
                                                     insert into    #ResultSet
                                                         (
                                                             RecordID
                                                            ,CheckID
                                                            ,CheckNumber
                                                            ,CheckDate
                                                            ,CheckAmount
                                                            ,CheckVoidReason
                                                            ,CheckStatusCode
                                                            ,ExternalCheckNumber
                                                            ,ExternalCheckCurrency
                                                            ,ExternalCheckAmount
                                                            ,ExternalMethodOfPaymentCode
                                                            ,ExternalCheckDate
                                                            ,CheckClearedDate
                                                            ,ExternalConversionRate
                                                            ,PaymentWizardJobId
                                                            ,ParentAccountID
                                                            ,CashAccountId
                                                            ,RecordStatusCode
                                                            ,RecordTypeCode
                                                            ,EntityTypeCode
                                                            ,CreationDate
                                                            ,ProcessedDate
                                                            ,VoidDate
                                                            ,CheckGroupID
                                                            ,Notes
                                                            ,LastUpdatedAt
                                                            ,LastUpdatedBy
                                                            --extra columns
                                                            ,FinancialRecordID
                                                            ,RecordDetailId
                                                            ,RecordDetailType
                                                            ,ReferenceNumber
                                                            ,DetailPaidAmount
                                                            ,DetailGroupID
                                                            ,DetailCreationDate
                                                            ,PaymentClassCode
                                                            ,AdjustmentVersion
                                                            ,RiskGroupVendorMapID
                                                            ,MethodOfPayment
                                                            ,VoidInsert
                                                            ,RateCoverageType
                                                            ,QualifierId
                                                         )
                                                     select R.RecordID
                                                           ,C.CheckId
                                                           ,C.CheckNumber
                                                           ,C.DateCreated
                                                           ,- (C.Amount)
                                                           ,C.VoidReason
                                                           ,C.CheckStatus
                                                           ,C.ExternalCheckNumber
                                                           ,C.ExternalCheckCurrency
                                                           ,- (C.ExternalCheckAmount)
                                                           ,C.ExternalMethodOfPayment
                                                           ,C.ExternalCheckDate
                                                           ,C.CheckClearedDate
                                                           ,C.ExternalConversionRate
                                                           ,C.JobId
                                                           ,R.ParentAccountID
                                                           ,C.CashAccountId
                                                           ,R.RecordStatus
                                                           ,R.RecordType
                                                           ,R.EntityType
                                                           ,R.CreationDate
                                                           ,R.ProcessedDate
                                                           ,R.VoidDate
                                                           ,R.GroupID
                                                           ,R.Notes
                                                           ,R.LastUpdatedAt
                                                           ,R.LastUpdatedBy
                                                            --new columns
                                                           ,CR.GlobalCapitationRecordID
                                                           ,CR.GlobalCapitationRecordID
                                                           ,CR.RecordType
                                                           ,CR.ReferenceID
                                                           ,- (CR.Amount)
                                                           ,CR.GroupID
                                                           ,CR.PostDate
                                                           ,null
                                                           ,null
                                                           ,null /* CR.RiskGroupVendorMapID */
                                                           ,R.MethodOfPayment
                                                           ,'Y'
                                                           ,CRD.RateCoverageType
                                                           ,CRD.QualifierId
                                                     from   Checks C
                                                            inner join #CashAccounts CA
                                                                on C.CashAccountId = CA.CashAccountId
                                                            inner join Records R
                                                                on R.RecordType = 'PS'
                                                                   and  R.ReferenceNumber = C.CheckId
                                                                   and  isnull(R.MethodOfPayment, '') = isnull(isnull(@MethodOfPayment, R.MethodOfPayment), '')
                                                            inner join VoidGlobalCapitationCheckDetails VCCD
                                                                on R.RecordID = VCCD.PaymentRecordID
                                                            inner join GlobalCapitationRecords CR
                                                                on VCCD.GlobalCapitationRecordID = CR.GlobalCapitationRecordID
                                                                   and  CR.RecordType = isnull(@RecordType, CR.RecordType)
                                                            left outer join CapitationRateDetails CRD
                                                                on CR.CapitationRateDetailID = CRD.CapitationRateDetailID
                                                            inner join #Vendors V
                                                                on R.ParentAccountID = V.VendorAccountID
                                                     where  C.DateVoided
                                                            between @StartDate
                                                            and     @EndDate
                                                            and isnull(C.CheckNumber, '') = isnull(@CheckNumber, isnull(C.CheckNumber, ''))
                                                            and isnull(C.JobId, -1) = isnull(@JobId, isnull(C.JobId, -1))
                                                            and C.CheckStatus = isnull(@CheckStatus, C.CheckStatus)
                                                            and C.CheckStatus != 'PWV'
                                                     option (recompile)

                                                     select @error = @@error
                                                     if @error != 0
                                                         begin
                                                             select @ProcedureStep = 2
                                                             select @UserMsg = 'Check Register could not be created. Contact System Administrator.'
                                                             select @LogMsg
                                                                 = 'Insert failed for checks that were paid. Error: ' + convert(varchar, @error) + ' occurred.'
                                                             raiserror(
                                                                          65500
                                                                         ,1
                                                                         ,1
                                                                         ,@ProductName
                                                                         ,@ProcedureName
                                                                         ,@ProcedureStep
                                                                         ,@UserMsg
                                                                         ,@LogMsg
                                                                         ,@SessionID
                                                                         ,-1
                                                                         ,@rowcount
                                                                         ,1
                                                                      )
                                                             goto AppErrorExit
                                                         end

                                                 end --- of "if @ShowVoidedChecks = 'Y'"
                                         end -- if isnull(@EntityType,'') = '' or @EntityType ='GCP'

                                 end --end of non-group usage
                         end -- end of if @EIN is not null

                     else
                         begin -- @EIN is null
                             if exists
                                 (
                                     select 1
                                     from   #Groups
                                 ) -- @GroupID is not null or @GroupLOB is not null
                                 begin
                                     insert into    #ResultSet
                                         (
                                             RecordID
                                            ,CheckID
                                            ,CheckNumber
                                            ,CheckDate
                                            ,CheckAmount
                                            ,CheckStatusCode
                                            ,CheckVoidReason
                                            ,ExternalCheckNumber
                                            ,ExternalCheckCurrency
                                            ,ExternalCheckAmount
                                            ,ExternalConversionRate
                                            ,ExternalMethodOfPaymentCode
                                            ,ExternalCheckDate
                                            ,CheckClearedDate
                                            ,PaymentWizardJobId
                                            ,ParentAccountID
                                            ,CashAccountId
                                            ,RecordStatusCode
                                            ,RecordTypeCode
                                            ,EntityTypeCode
                                            ,CreationDate
                                            ,ProcessedDate
                                            ,VoidDate
                                            ,CheckGroupID
                                            ,Notes
                                            ,LastUpdatedAt
                                            ,LastUpdatedBy
                                            --extra columns
                                            ,FinancialRecordID
                                            ,RecordDetailId
                                            ,RecordDetailType
                                            ,PaymentClassCode
                                            ,ReferenceNumber
                                            ,DetailPaidAmount
                                            ,DetailGroupID
                                            ,DetailCreationDate
                                            ,AdjustmentVersion
                                            ,RiskGroupVendorMapID
                                            ,MethodOfPayment
                                            ,WriteOffReasonCode
                                         )
                                     select R.RecordID
                                           ,C.CheckId
                                           ,C.CheckNumber
                                           ,C.DateCreated
                                           ,case when R.RecordType = 'PR' then - (C.Amount)
                                                 else C.Amount
                                            end
                                           ,case when
                                                     (
                                                         @ShowVoidedChecks = 'Y'
                                                         and C.CheckStatus = 'VD'
                                                     ) then 'PRT'
                                                 else C.CheckStatus
                                            end
                                           ,case when
                                                     (
                                                         @ShowVoidedChecks = 'Y'
                                                         and C.CheckStatus = 'VD'
                                                     ) then null
                                                 else C.VoidReason
                                            end
                                           ,C.ExternalCheckNumber
                                           ,C.ExternalCheckCurrency
                                           ,case when R.RecordType = 'PR' then - (C.ExternalCheckAmount)
                                                 else C.ExternalCheckAmount
                                            end
                                           ,C.ExternalConversionRate
                                           ,C.ExternalMethodOfPayment
                                           ,C.ExternalCheckDate
                                           ,C.CheckClearedDate
                                           ,C.JobId
                                           ,R.ParentAccountID
                                           ,C.CashAccountId
                                           ,case when
                                                     (
                                                         @ShowVoidedChecks = 'Y'
                                                         and C.CheckStatus = 'VD'
                                                     ) then 'PRT'
                                                 else R.RecordStatus
                                            end
                                           ,R.RecordType
                                           ,R.EntityType
                                           ,R.CreationDate
                                           ,R.ProcessedDate
                                           ,case when
                                                     (
                                                         @ShowVoidedChecks = 'Y'
                                                         and C.CheckStatus = 'VD'
                                                     ) then null
                                                 else R.VoidDate
                                            end
                                           ,R.GroupID
                                           ,R.Notes
                                           ,R.LastUpdatedAt
                                           ,R.LastUpdatedBy
                                            --new columns
                                           ,R2.RecordID
                                           ,RD.ItemID
                                           ,RD.ItemType
                                           ,R2.PaymentClass
                                           ,R2.ReferenceNumber
                                           ,R2.Amount
                                           ,R2.GroupID
                                           ,R2.CreationDate
                                           ,R2.Adjustmentversion
                                           ,R2.RiskGroupVendorMapID
                                           ,R.MethodOfPayment
                                           ,C.WriteOffReason
                                     from   Checks C
                                            inner join Records R
                                                on R.RecordType in ('PS', isnull(@PaymentReceived, ''), isnull(@WriteOff, ''))
                                                   and  R.ReferenceNumber = C.CheckId
                                                   and  C.CashAccountId in
                                                            (
                                                                select  CashAccountId
                                                                from    #CashAccounts
                                                            )
                                                   and  R.EntityType = isnull(@EntityType, R.EntityType)
                                                   and  isnull(R.MethodOfPayment, '') = isnull(isnull(@MethodOfPayment, R.MethodOfPayment), '')
                                            inner join RecordDetails RD
                                                on R.RecordID = RD.RecordID
                                            inner join Records R2
                                                on RD.ItemID = R2.RecordID
                                                   and  R2.RecordType = isnull(@RecordType, R2.RecordType)
                                                   and  isnull(R2.PaymentClass, '') = isnull(@PaymentClass, isnull(R2.PaymentClass, ''))
                                                   and  not (
                                                                @UseProvidersTable = 'Y'
                                                                and R2.ReferenceNumber not in
                                                                        (
                                                                            select  ClaimId
                                                                            from    Claims
                                                                            where   ProviderId in
                                                                                        (
                                                                                            select  ProviderID
                                                                                            from    @Providers
                                                                                        )
                                                                        )
                                                            )
                                            inner join EntityAccountMap EAM
                                                on EAM.AccountID = R.ParentAccountID
                                                   and  EAM.EntityType = 'VDR'
                                            inner join Vendors V
                                                on EAM.EntityID = V.VendorId
                                                   and  isnull(V.VendorClass, '') = isnull(isnull(@VendorClass, V.VendorClass), '')
                                                   and  isnull(V.VendorSubclass, '') = isnull(isnull(@VendorSubClass, V.VendorSubclass), '')

                                            --filter the non selected claims out
                                            inner join #Groups G
                                                on R2.GroupID = G.GroupID
                                     where  (
                                                (
                                                    R.RecordType = 'PS'
                                                    and C.DateCreated
                                            between @StartDate
                                            and     @EndDate
                                                )
                                                or
                                                    (
                                                        R.RecordType = 'PR'
                                                        and R.CreationDate
                                            between @StartDate
                                            and     @EndDate
                                                    )
                                                or
                                                    (
                                                        R.RecordType = 'WO'
                                                        and C.DateCreated
                                            between @StartDate
                                            and     @EndDate
                                                    )
                                            )
                                            and isnull(C.CheckNumber, '') = isnull(@CheckNumber, isnull(C.CheckNumber, ''))
                                            and isnull(C.JobId, -1) = isnull(@JobId, isnull(C.JobId, -1))
                                            and C.CheckStatus = isnull(@CheckStatus, C.CheckStatus)
                                            and C.CheckStatus != case when @ShowPaymentWizardVoidedChecks = 'Y' then ''
                                                                      else 'PWV'
                                                                 end
                                     option (recompile)

                                     select @error = @@error
                                     if @error != 0
                                         begin
                                             select @ProcedureStep = 2
                                             select @UserMsg = 'Check Register could not be created. Contact System Administrator.'
                                             select @LogMsg = 'Insert failed for checks that were paid. Error: ' + convert(varchar, @error) + ' occurred.'
                                             raiserror(
                                                          65500
                                                         ,1
                                                         ,1
                                                         ,@ProductName
                                                         ,@ProcedureName
                                                         ,@ProcedureStep
                                                         ,@UserMsg
                                                         ,@LogMsg
                                                         ,@SessionID
                                                         ,-1
                                                         ,@rowcount
                                                         ,1
                                                      )
                                             goto AppErrorExit
                                         end

                                     if @ShowVoidedChecks = 'Y'
                                         begin
                                             insert into    #ResultSet
                                                 (
                                                     RecordID
                                                    ,CheckID
                                                    ,CheckNumber
                                                    ,CheckDate
                                                    ,CheckAmount
                                                    ,CheckVoidReason
                                                    ,CheckStatusCode
                                                    ,ExternalCheckNumber
                                                    ,ExternalCheckCurrency
                                                    ,ExternalCheckAmount
                                                    ,ExternalMethodOfPaymentCode
                                                    ,ExternalCheckDate
                                                    ,CheckClearedDate
                                                    ,ExternalConversionRate
                                                    ,PaymentWizardJobId
                                                    ,ParentAccountID
                                                    ,CashAccountId
                                                    ,RecordStatusCode
                                                    ,RecordTypeCode
                                                    ,EntityTypeCode
                                                    ,CreationDate
                                                    ,ProcessedDate
                                                    ,VoidDate
                                                    ,CheckGroupID
                                                    ,Notes
                                                    ,LastUpdatedAt
                                                    ,LastUpdatedBy
                                                    --extra columns
                                                    ,FinancialRecordID
                                                    ,RecordDetailId
                                                    ,RecordDetailType
                                                    ,ReferenceNumber
                                                    ,DetailPaidAmount
                                                    ,DetailGroupID
                                                    ,DetailCreationDate
                                                    ,PaymentClassCode
                                                    ,AdjustmentVersion
                                                    ,RiskGroupVendorMapID
                                                    ,MethodOfPayment
                                                    ,VoidInsert
                                                    ,WriteOffReasonCode
                                                 )
                                             select R.RecordID
                                                   ,C.CheckId
                                                   ,C.CheckNumber
                                                   ,C.DateCreated
                                                   ,- (C.Amount)
                                                   ,C.VoidReason
                                                   ,C.CheckStatus
                                                   ,C.ExternalCheckNumber
                                                   ,C.ExternalCheckCurrency
                                                   ,- (C.ExternalCheckAmount)
                                                   ,C.ExternalMethodOfPayment
                                                   ,C.ExternalCheckDate
                                                   ,C.CheckClearedDate
                                                   ,C.ExternalConversionRate
                                                   ,C.JobId
                                                   ,R.ParentAccountID
                                                   ,C.CashAccountId
                                                   ,R.RecordStatus
                                                   ,R.RecordType
                                                   ,R.EntityType
                                                   ,R.CreationDate
                                                   ,R.ProcessedDate
                                                   ,R.VoidDate
                                                   ,R.GroupID
                                                   ,R.Notes
                                                   ,R.LastUpdatedAt
                                                   ,R.LastUpdatedBy
                                                    --new columns
                                                   ,R2.RecordID
                                                   ,RD.ItemID
                                                   ,RD.ItemType
                                                   ,R2.ReferenceNumber
                                                   ,- (R2.Amount)
                                                   ,R2.GroupID
                                                   ,R2.CreationDate
                                                   ,R2.PaymentClass
                                                   ,R2.Adjustmentversion
                                                   ,R2.RiskGroupVendorMapID
                                                   ,R.MethodOfPayment
                                                   ,'Y'
                                                   ,C.WriteOffReason
                                             from   Checks C
                                                    inner join Records R
                                                        on R.RecordType in ('PS', isnull(@PaymentReceived, ''), isnull(@WriteOff, ''))
                                                           and  R.ReferenceNumber = C.CheckId
                                                           and  C.CashAccountId in
                                                                    (
                                                                        select  CashAccountId
                                                                        from    #CashAccounts
                                                                    )
                                                           and  R.EntityType = isnull(@EntityType, R.EntityType)
                                                           and  isnull(R.MethodOfPayment, '') = isnull(isnull(@MethodOfPayment, R.MethodOfPayment), '')
                                                    inner join RecordDetails RD
                                                        on R.RecordID = RD.RecordID
                                                    inner join Records R2
                                                        on RD.ItemID = R2.RecordID
                                                           and  R2.RecordType = isnull(@RecordType, R2.RecordType)
                                                           and  isnull(R2.PaymentClass, '') = isnull(@PaymentClass, isnull(R2.PaymentClass, ''))
                                                           and  not (
                                                                        @UseProvidersTable = 'Y'
                                                                        and R2.ReferenceNumber not in
                                                                                (
                                                                                    select  ClaimId
                                                                                    from    Claims
                                                                                    where   ProviderId in
                                                                                                (
                                                                                                    select  ProviderID
                                                                                                    from    @Providers
                                                                                                )
                                                                                )
                                                                    )
                                                    inner join EntityAccountMap EAM
                                                        on EAM.AccountID = R.ParentAccountID
                                                           and  EAM.EntityType = 'VDR'
                                                    inner join Vendors V
                                                        on EAM.EntityID = V.VendorId
                                                           and  isnull(V.VendorClass, '') = isnull(isnull(@VendorClass, V.VendorClass), '')
                                                           and  isnull(V.VendorSubclass, '') = isnull(isnull(@VendorSubClass, V.VendorSubclass), '')

                                                    --filter the non selected claims out
                                                    inner join #Groups G
                                                        on R2.GroupID = G.GroupID
                                             where  C.DateVoided
                                                    between @StartDate
                                                    and     @EndDate
                                                    and isnull(C.CheckNumber, '') = isnull(@CheckNumber, isnull(C.CheckNumber, ''))
                                                    and isnull(C.JobId, -1) = isnull(@JobId, isnull(C.JobId, -1))
                                                    and C.CheckStatus = isnull(@CheckStatus, C.CheckStatus)
                                                    and C.CheckStatus != 'PWV'
                                             option (recompile)

                                             select @error = @@error
                                             if @error != 0
                                                 begin
                                                     select @ProcedureStep = 2
                                                     select @UserMsg = 'Check Register could not be created. Contact System Administrator.'
                                                     select @LogMsg
                                                         = 'Insert failed for checks that were paid. Error: ' + convert(varchar, @error) + ' occurred.'
                                                     raiserror(
                                                                  65500
                                                                 ,1
                                                                 ,1
                                                                 ,@ProductName
                                                                 ,@ProcedureName
                                                                 ,@ProcedureStep
                                                                 ,@UserMsg
                                                                 ,@LogMsg
                                                                 ,@SessionID
                                                                 ,-1
                                                                 ,@rowcount
                                                                 ,1
                                                              )
                                                     goto AppErrorExit
                                                 end
                                         end
                                     else
                                         begin
                                             delete from #ResultSet
                                             where  RecordStatusCode = 'V'
                                         end

                                     if isnull(@EntityType, '') = ''
                                        or  @EntityType = 'CPT' --Capitation (1DL, @EIN is null & @GroupID is not null)
                                         begin
                                             insert into    #ResultSet
                                                 (
                                                     RecordID
                                                    ,CheckID
                                                    ,CheckNumber
                                                    ,CheckDate
                                                    ,CheckAmount
                                                    ,CheckStatusCode
                                                    ,CheckVoidReason
                                                    ,ExternalCheckNumber
                                                    ,ExternalCheckCurrency
                                                    ,ExternalCheckAmount
                                                    ,ExternalConversionRate
                                                    ,ExternalMethodOfPaymentCode
                                                    ,ExternalCheckDate
                                                    ,CheckClearedDate
                                                    ,PaymentWizardJobId
                                                    ,ParentAccountID
                                                    ,CashAccountId
                                                    ,RecordStatusCode
                                                    ,RecordTypeCode
                                                    ,EntityTypeCode
                                                    ,CreationDate
                                                    ,ProcessedDate
                                                    ,VoidDate
                                                    ,CheckGroupID
                                                    ,Notes
                                                    ,LastUpdatedAt
                                                    ,LastUpdatedBy
                                                    --extra columns
                                                    ,FinancialRecordID
                                                    ,RecordDetailId
                                                    ,RecordDetailType
                                                    ,PaymentClassCode
                                                    ,ReferenceNumber
                                                    ,DetailPaidAmount
                                                    ,DetailGroupID
                                                    ,DetailCreationDate
                                                    ,AdjustmentVersion
                                                    ,RiskGroupVendorMapID
                                                    ,MethodOfPayment
                                                    ,RateCoverageType
                                                    ,QualifierId
                                                 )
                                             select R.RecordID
                                                   ,C.CheckId
                                                   ,C.CheckNumber
                                                   ,C.DateCreated
                                                   ,C.Amount
                                                   ,C.CheckStatus
                                                   ,C.VoidReason
                                                   ,C.ExternalCheckNumber
                                                   ,C.ExternalCheckCurrency
                                                   ,C.ExternalCheckAmount
                                                   ,C.ExternalConversionRate
                                                   ,C.ExternalMethodOfPayment
                                                   ,C.ExternalCheckDate
                                                   ,C.CheckClearedDate
                                                   ,C.JobId
                                                   ,R.ParentAccountID
                                                   ,C.CashAccountId
                                                   ,R.RecordStatus
                                                   ,R.RecordType
                                                   ,R.EntityType
                                                   ,R.CreationDate
                                                   ,R.ProcessedDate
                                                   ,R.VoidDate
                                                   ,R.GroupID
                                                   ,R.Notes
                                                   ,R.LastUpdatedAt
                                                   ,R.LastUpdatedBy
                                                    --new columns
                                                   ,CR.CapitationRecordID
                                                   ,CR.CapitationRecordID
                                                   ,CR.RecordType
                                                   ,null
                                                   ,CR.ReferenceID
                                                   ,CR.Amount
                                                   ,CR.GroupID
                                                   ,CR.PostDate
                                                   ,null
                                                   ,CR.RiskGroupVendorMapID
                                                   ,R.MethodOfPayment
                                                   ,CRD.RateCoverageType
                                                   ,CRD.QualifierId
                                             from   Checks C
                                                    inner join #CashAccounts CA
                                                        on C.CashAccountId = CA.CashAccountId
                                                    inner join Records R
                                                        on R.RecordType = 'PS'
                                                           and  R.ReferenceNumber = C.CheckId
                                                           and  isnull(R.MethodOfPayment, '') = isnull(isnull(null, R.MethodOfPayment), '')
                                                    inner join CapitationRecords CR
                                                        on R.RecordID = CR.PaymentRecordID
                                                           and  CR.RecordType = isnull(@RecordType, CR.RecordType)
                                                    left outer join CapitationRateDetails CRD
                                                        on CR.CapitationRateDetailID = CRD.CapitationRateDetailID
                                                    inner join EntityAccountMap EAM
                                                        on EAM.AccountID = R.ParentAccountID
                                                           and  EAM.EntityType = 'VDR'
                                                    inner join Vendors V
                                                        on EAM.EntityID = V.VendorId
                                                           and  isnull(V.VendorClass, '') = isnull(isnull(@VendorClass, V.VendorClass), '')
                                                           and  isnull(V.VendorSubclass, '') = isnull(isnull(@VendorSubClass, V.VendorSubclass), '')
                                                    inner join #Groups G
                                                        on CR.GroupID = G.GroupID
                                             where  C.DateCreated
                                                    between @StartDate
                                                    and     @EndDate
                                                    and isnull(C.CheckNumber, '') = isnull(@CheckNumber, isnull(C.CheckNumber, ''))
                                                    and isnull(C.JobId, -1) = isnull(@JobId, isnull(C.JobId, -1))
                                                    and C.CheckStatus = isnull(@CheckStatus, C.CheckStatus)
                                                    and C.CheckStatus != case when @ShowPaymentWizardVoidedChecks = 'Y' then ''
                                                                              else 'PWV'
                                                                         end
                                             option (recompile)

                                             select @error = @@error
                                             if @error != 0
                                                 begin
                                                     select @ProcedureStep = 2
                                                     select @UserMsg = 'Check Register could not be created. Contact System Administrator.'
                                                     select @LogMsg
                                                         = 'Insert failed for checks that were paid. Error: ' + convert(varchar, @error) + ' occurred.'
                                                     raiserror(
                                                                  65500
                                                                 ,1
                                                                 ,1
                                                                 ,@ProductName
                                                                 ,@ProcedureName
                                                                 ,@ProcedureStep
                                                                 ,@UserMsg
                                                                 ,@LogMsg
                                                                 ,@SessionID
                                                                 ,-1
                                                                 ,@rowcount
                                                                 ,1
                                                              )
                                                     goto AppErrorExit
                                                 end


                                             if @ShowVoidedChecks = 'Y'
                                                 begin
                                                     --Voided capitation checks
                                                     insert into    #ResultSet
                                                         (
                                                             RecordID
                                                            ,CheckID
                                                            ,CheckNumber
                                                            ,CheckDate
                                                            ,CheckAmount
                                                            ,CheckStatusCode
                                                            ,CheckVoidReason
                                                            ,ExternalCheckNumber
                                                            ,ExternalCheckCurrency
                                                            ,ExternalCheckAmount
                                                            ,ExternalConversionRate
                                                            ,ExternalMethodOfPaymentCode
                                                            ,ExternalCheckDate
                                                            ,CheckClearedDate
                                                            ,PaymentWizardJobId
                                                            ,ParentAccountID
                                                            ,CashAccountId
                                                            ,RecordStatusCode
                                                            ,RecordTypeCode
                                                            ,EntityTypeCode
                                                            ,CreationDate
                                                            ,ProcessedDate
                                                            ,VoidDate
                                                            ,CheckGroupID
                                                            ,Notes
                                                            ,LastUpdatedAt
                                                            ,LastUpdatedBy
                                                            --extra columns
                                                            ,FinancialRecordID
                                                            ,RecordDetailId
                                                            ,RecordDetailType
                                                            ,PaymentClassCode
                                                            ,ReferenceNumber
                                                            ,DetailPaidAmount
                                                            ,DetailGroupID
                                                            ,DetailCreationDate
                                                            ,AdjustmentVersion
                                                            ,RiskGroupVendorMapID
                                                            ,MethodOfPayment
                                                            ,RateCoverageType
                                                            ,QualifierId
                                                         )
                                                     select R.RecordID
                                                           ,C.CheckId
                                                           ,C.CheckNumber
                                                           ,C.DateCreated
                                                           ,C.Amount
                                                           ,C.CheckStatus
                                                           ,C.VoidReason
                                                           ,C.ExternalCheckNumber
                                                           ,C.ExternalCheckCurrency
                                                           ,C.ExternalCheckAmount
                                                           ,C.ExternalConversionRate
                                                           ,C.ExternalMethodOfPayment
                                                           ,C.ExternalCheckDate
                                                           ,C.CheckClearedDate
                                                           ,C.JobId
                                                           ,R.ParentAccountID
                                                           ,C.CashAccountId
                                                           ,R.RecordStatus
                                                           ,R.RecordType
                                                           ,R.EntityType
                                                           ,R.CreationDate
                                                           ,R.ProcessedDate
                                                           ,R.VoidDate
                                                           ,R.GroupID
                                                           ,R.Notes
                                                           ,R.LastUpdatedAt
                                                           ,R.LastUpdatedBy
                                                            --new columns
                                                           ,CR.CapitationRecordID
                                                           ,CR.CapitationRecordID
                                                           ,CR.RecordType
                                                           ,null
                                                           ,CR.ReferenceID
                                                           ,CR.Amount
                                                           ,CR.GroupID
                                                           ,CR.PostDate
                                                           ,null
                                                           ,CR.RiskGroupVendorMapID
                                                           ,R.MethodOfPayment
                                                           ,CRD.RateCoverageType
                                                           ,CRD.QualifierId
                                                     from   Checks C
                                                            inner join #CashAccounts CA
                                                                on C.CashAccountId = CA.CashAccountId
                                                            inner join Records R
                                                                on R.RecordType = 'PS'
                                                                   and  R.ReferenceNumber = C.CheckId
                                                                   and  isnull(R.MethodOfPayment, '') = isnull(isnull(null, R.MethodOfPayment), '')
                                                            inner join VoidCapitationCheckDetails VCCD
                                                                on R.RecordID = VCCD.PaymentRecordID
                                                            inner join CapitationRecords CR
                                                                on VCCD.CapitationRecordID = CR.CapitationRecordID
                                                                   and  CR.RecordType = isnull(@RecordType, CR.RecordType)
                                                            left outer join CapitationRateDetails CRD
                                                                on CR.CapitationRateDetailID = CRD.CapitationRateDetailID
                                                            inner join EntityAccountMap EAM
                                                                on EAM.AccountID = R.ParentAccountID
                                                                   and  EAM.EntityType = 'VDR'
                                                            inner join Vendors V
                                                                on EAM.EntityID = V.VendorId
                                                                   and  isnull(V.VendorClass, '') = isnull(isnull(@VendorClass, V.VendorClass), '')
                                                                   and  isnull(V.VendorSubclass, '') = isnull(isnull(@VendorSubClass, V.VendorSubclass), '')
                                                            inner join #Groups G
                                                                on CR.GroupID = G.GroupID
                                                     where  C.DateCreated
                                                            between @StartDate
                                                            and     @EndDate
                                                            and isnull(C.CheckNumber, '') = isnull(@CheckNumber, isnull(C.CheckNumber, ''))
                                                            and isnull(C.JobId, -1) = isnull(@JobId, isnull(C.JobId, -1))
                                                            and C.CheckStatus = isnull(@CheckStatus, C.CheckStatus)
                                                            and C.CheckStatus != 'PWV'
                                                     option (recompile)

                                                     select @error = @@error
                                                     if @error != 0
                                                         begin
                                                             select @ProcedureStep = 2
                                                             select @UserMsg = 'Check Register could not be created. Contact System Administrator.'
                                                             select @LogMsg
                                                                 = 'Insert failed for checks that were paid. Error: ' + convert(varchar, @error) + ' occurred.'
                                                             raiserror(
                                                                          65500
                                                                         ,1
                                                                         ,1
                                                                         ,@ProductName
                                                                         ,@ProcedureName
                                                                         ,@ProcedureStep
                                                                         ,@UserMsg
                                                                         ,@LogMsg
                                                                         ,@SessionID
                                                                         ,-1
                                                                         ,@rowcount
                                                                         ,1
                                                                      )
                                                             goto AppErrorExit
                                                         end


                                                     --Voided capitation checks with negative amounts
                                                     insert into    #ResultSet
                                                         (
                                                             RecordID
                                                            ,CheckID
                                                            ,CheckNumber
                                                            ,CheckDate
                                                            ,CheckAmount
                                                            ,CheckVoidReason
                                                            ,CheckStatusCode
                                                            ,ExternalCheckNumber
                                                            ,ExternalCheckCurrency
                                                            ,ExternalCheckAmount
                                                            ,ExternalMethodOfPaymentCode
                                                            ,ExternalCheckDate
                                                            ,CheckClearedDate
                                                            ,ExternalConversionRate
                                                            ,PaymentWizardJobId
                                                            ,ParentAccountID
                                                            ,CashAccountId
                                                            ,RecordStatusCode
                                                            ,RecordTypeCode
                                                            ,EntityTypeCode
                                                            ,CreationDate
                                                            ,ProcessedDate
                                                            ,VoidDate
                                                            ,CheckGroupID
                                                            ,Notes
                                                            ,LastUpdatedAt
                                                            ,LastUpdatedBy
                                                            --extra columns
                                                            ,FinancialRecordID
                                                            ,RecordDetailId
                                                            ,RecordDetailType
                                                            ,ReferenceNumber
                                                            ,DetailPaidAmount
                                                            ,DetailGroupID
                                                            ,DetailCreationDate
                                                            ,PaymentClassCode
                                                            ,AdjustmentVersion
                                                            ,RiskGroupVendorMapID
                                                            ,MethodOfPayment
                                                            ,VoidInsert
                                                            ,RateCoverageType
                                                            ,QualifierId
                                                         )
                                                     select R.RecordID
                                                           ,C.CheckId
                                                           ,C.CheckNumber
                                                           ,C.DateCreated
                                                           ,- (C.Amount)
                                                           ,C.VoidReason
                                                           ,C.CheckStatus
                                                           ,C.ExternalCheckNumber
                                                           ,C.ExternalCheckCurrency
                                                           ,- (C.ExternalCheckAmount)
                                                           ,C.ExternalMethodOfPayment
                                                           ,C.ExternalCheckDate
                                                           ,C.CheckClearedDate
                                                           ,C.ExternalConversionRate
                                                           ,C.JobId
                                                           ,R.ParentAccountID
                                                           ,C.CashAccountId
                                                           ,R.RecordStatus
                                                           ,R.RecordType
                                                           ,R.EntityType
                                                           ,R.CreationDate
                                                           ,R.ProcessedDate
                                                           ,R.VoidDate
                                                           ,R.GroupID
                                                           ,R.Notes
                                                           ,R.LastUpdatedAt
                                                           ,R.LastUpdatedBy
                                                            --new columns
                                                           ,CR.CapitationRecordID
                                                           ,CR.CapitationRecordID
                                                           ,CR.RecordType
                                                           ,CR.ReferenceID
                                                           ,- (CR.Amount)
                                                           ,CR.GroupID
                                                           ,CR.PostDate
                                                           ,null
                                                           ,null
                                                           ,CR.RiskGroupVendorMapID
                                                           ,R.MethodOfPayment
                                                           ,'Y'
                                                           ,CRD.RateCoverageType
                                                           ,CRD.QualifierId
                                                     from   Checks C
                                                            inner join #CashAccounts CA
                                                                on C.CashAccountId = CA.CashAccountId
                                                            inner join Records R
                                                                on R.RecordType = 'PS'
                                                                   and  R.ReferenceNumber = C.CheckId
                                                                   and  isnull(R.MethodOfPayment, '') = isnull(isnull(@MethodOfPayment, R.MethodOfPayment), '')
                                                            inner join VoidCapitationCheckDetails VCCD
                                                                on R.RecordID = VCCD.PaymentRecordID
                                                            inner join CapitationRecords CR
                                                                on VCCD.CapitationRecordID = CR.CapitationRecordID
                                                                   and  CR.RecordType = isnull(@RecordType, CR.RecordType)
                                                            left outer join CapitationRateDetails CRD
                                                                on CR.CapitationRateDetailID = CRD.CapitationRateDetailID
                                                            inner join EntityAccountMap EAM
                                                                on EAM.AccountID = R.ParentAccountID
                                                                   and  EAM.EntityType = 'VDR'
                                                            inner join Vendors V
                                                                on EAM.EntityID = V.VendorId
                                                                   and  isnull(V.VendorClass, '') = isnull(isnull(@VendorClass, V.VendorClass), '')
                                                                   and  isnull(V.VendorSubclass, '') = isnull(isnull(@VendorSubClass, V.VendorSubclass), '')
                                                            --filter the non selected claims out
                                                            inner join #Groups G
                                                                on CR.GroupID = G.GroupID
                                                     where  C.DateVoided
                                                            between @StartDate
                                                            and     @EndDate
                                                            and isnull(C.CheckNumber, '') = isnull(@CheckNumber, isnull(C.CheckNumber, ''))
                                                            and isnull(C.JobId, -1) = isnull(@JobId, isnull(C.JobId, -1))
                                                            and C.CheckStatus = isnull(@CheckStatus, C.CheckStatus)
                                                            and C.CheckStatus != 'PWV'
                                                     option (recompile)

                                                     select @error = @@error
                                                     if @error != 0
                                                         begin
                                                             select @ProcedureStep = 2
                                                             select @UserMsg = 'Check Register could not be created. Contact System Administrator.'
                                                             select @LogMsg
                                                                 = 'Insert failed for checks that were paid. Error: ' + convert(varchar, @error) + ' occurred.'
                                                             raiserror(
                                                                          65500
                                                                         ,1
                                                                         ,1
                                                                         ,@ProductName
                                                                         ,@ProcedureName
                                                                         ,@ProcedureStep
                                                                         ,@UserMsg
                                                                         ,@LogMsg
                                                                         ,@SessionID
                                                                         ,-1
                                                                         ,@rowcount
                                                                         ,1
                                                                      )
                                                             goto AppErrorExit
                                                         end

                                                 end --- of "if @ShowVoidedChecks = 'Y'"
                                         end -- of if isnull(@EntityType,'') = '' or @EntityType ='CPT' --Capitation

                                     if (
                                            isnull(@EntityType, '') = ''
                                            or  @EntityType = 'GCP'
                                        ) -- 1DL, @EIN is null & @GroupID is not null 
                                         begin
                                             insert into    #ResultSet
                                                 (
                                                     RecordID
                                                    ,CheckID
                                                    ,CheckNumber
                                                    ,CheckDate
                                                    ,CheckAmount
                                                    ,CheckStatusCode
                                                    ,CheckVoidReason
                                                    ,ExternalCheckNumber
                                                    ,ExternalCheckCurrency
                                                    ,ExternalCheckAmount
                                                    ,ExternalConversionRate
                                                    ,ExternalMethodOfPaymentCode
                                                    ,ExternalCheckDate
                                                    ,CheckClearedDate
                                                    ,PaymentWizardJobId
                                                    ,ParentAccountID
                                                    ,CashAccountId
                                                    ,RecordStatusCode
                                                    ,RecordTypeCode
                                                    ,EntityTypeCode
                                                    ,CreationDate
                                                    ,ProcessedDate
                                                    ,VoidDate
                                                    ,CheckGroupID
                                                    ,Notes
                                                    ,LastUpdatedAt
                                                    ,LastUpdatedBy
                                                    --extra columns
                                                    ,FinancialRecordID
                                                    ,RecordDetailId
                                                    ,RecordDetailType
                                                    ,PaymentClassCode
                                                    ,ReferenceNumber
                                                    ,DetailPaidAmount
                                                    ,DetailGroupID
                                                    ,DetailCreationDate
                                                    ,AdjustmentVersion
                                                    ,RiskGroupVendorMapID
                                                    ,MethodOfPayment
                                                    ,RateCoverageType
                                                    ,QualifierId
                                                 )
                                             select R.RecordID
                                                   ,C.CheckId
                                                   ,C.CheckNumber
                                                   ,C.DateCreated
                                                   ,C.Amount
                                                   ,C.CheckStatus
                                                   ,C.VoidReason
                                                   ,C.ExternalCheckNumber
                                                   ,C.ExternalCheckCurrency
                                                   ,C.ExternalCheckAmount
                                                   ,C.ExternalConversionRate
                                                   ,C.ExternalMethodOfPayment
                                                   ,C.ExternalCheckDate
                                                   ,C.CheckClearedDate
                                                   ,C.JobId
                                                   ,R.ParentAccountID
                                                   ,C.CashAccountId
                                                   ,R.RecordStatus
                                                   ,R.RecordType
                                                   ,R.EntityType
                                                   ,R.CreationDate
                                                   ,R.ProcessedDate
                                                   ,R.VoidDate
                                                   ,R.GroupID
                                                   ,R.Notes
                                                   ,R.LastUpdatedAt
                                                   ,R.LastUpdatedBy
                                                            --new columns
                                                   ,CR.GlobalCapitationRecordID
                                                   ,CR.GlobalCapitationRecordID
                                                   ,CR.RecordType
                                                   ,null
                                                   ,CR.ReferenceID
                                                   ,CR.Amount
                                                   ,CR.GroupID
                                                   ,CR.PostDate
                                                   ,null
                                                   ,null    -- CR.RiskGroupVendorMapID,
                                                   ,R.MethodOfPayment
                                                   ,CRD.RateCoverageType
                                                   ,CRD.QualifierId
                                             from   Checks C
                                                    inner join #CashAccounts CA
                                                        on C.CashAccountId = CA.CashAccountId
                                                    inner join Records R
                                                        on R.RecordType = 'PS'
                                                           and  R.ReferenceNumber = C.CheckId
                                                           and  isnull(R.MethodOfPayment, '') = isnull(isnull(null, R.MethodOfPayment), '')
                                                    inner join GlobalCapitationRecords CR
                                                        on R.RecordID = CR.PaymentRecordID
                                                           and  CR.RecordType = isnull(@RecordType, CR.RecordType)
                                                    left outer join CapitationRateDetails CRD
                                                        on CR.CapitationRateDetailID = CRD.CapitationRateDetailID
                                                    inner join EntityAccountMap EAM
                                                        on EAM.AccountID = R.ParentAccountID
                                                           and  EAM.EntityType = 'VDR'
                                                    inner join Vendors V
                                                        on EAM.EntityID = V.VendorId
                                                           and  isnull(V.VendorClass, '') = isnull(isnull(@VendorClass, V.VendorClass), '')
                                                           and  isnull(V.VendorSubclass, '') = isnull(isnull(@VendorSubClass, V.VendorSubclass), '')
                                                    inner join #Groups G
                                                        on CR.GroupID = G.GroupID
                                             where  C.DateCreated
                                                    between @StartDate
                                                    and     @EndDate
                                                    and isnull(C.CheckNumber, '') = isnull(@CheckNumber, isnull(C.CheckNumber, ''))
                                                    and isnull(C.JobId, -1) = isnull(@JobId, isnull(C.JobId, -1))
                                                    and C.CheckStatus = isnull(@CheckStatus, C.CheckStatus)
                                                    and C.CheckStatus != case when @ShowPaymentWizardVoidedChecks = 'Y' then ''
                                                                              else 'PWV'
                                                                         end
                                             option (recompile)

                                             select @error = @@error
                                             if @error != 0
                                                 begin
                                                     select @ProcedureStep = 2
                                                     select @UserMsg = 'Check Register could not be created. Contact System Administrator.'
                                                     select @LogMsg
                                                         = 'Insert failed for checks that were paid. Error: ' + convert(varchar, @error) + ' occurred.'
                                                     raiserror(
                                                                  65500
                                                                 ,1
                                                                 ,1
                                                                 ,@ProductName
                                                                 ,@ProcedureName
                                                                 ,@ProcedureStep
                                                                 ,@UserMsg
                                                                 ,@LogMsg
                                                                 ,@SessionID
                                                                 ,-1
                                                                 ,@rowcount
                                                                 ,1
                                                              )
                                                     goto AppErrorExit
                                                 end


                                             if @ShowVoidedChecks = 'Y'
                                                 begin
                                                     --Voided capitation checks
                                                     insert into    #ResultSet
                                                         (
                                                             RecordID
                                                            ,CheckID
                                                            ,CheckNumber
                                                            ,CheckDate
                                                            ,CheckAmount
                                                            ,CheckStatusCode
                                                            ,CheckVoidReason
                                                            ,ExternalCheckNumber
                                                            ,ExternalCheckCurrency
                                                            ,ExternalCheckAmount
                                                            ,ExternalConversionRate
                                                            ,ExternalMethodOfPaymentCode
                                                            ,ExternalCheckDate
                                                            ,CheckClearedDate
                                                            ,PaymentWizardJobId
                                                            ,ParentAccountID
                                                            ,CashAccountId
                                                            ,RecordStatusCode
                                                            ,RecordTypeCode
                                                            ,EntityTypeCode
                                                            ,CreationDate
                                                            ,ProcessedDate
                                                            ,VoidDate
                                                            ,CheckGroupID
                                                            ,Notes
                                                            ,LastUpdatedAt
                                                            ,LastUpdatedBy
                                                            --extra columns
                                                            ,FinancialRecordID
                                                            ,RecordDetailId
                                                            ,RecordDetailType
                                                            ,PaymentClassCode
                                                            ,ReferenceNumber
                                                            ,DetailPaidAmount
                                                            ,DetailGroupID
                                                            ,DetailCreationDate
                                                            ,AdjustmentVersion
                                                            ,RiskGroupVendorMapID
                                                            ,MethodOfPayment
                                                            ,RateCoverageType
                                                            ,QualifierId
                                                         )
                                                     select R.RecordID
                                                           ,C.CheckId
                                                           ,C.CheckNumber
                                                           ,C.DateCreated
                                                           ,C.Amount
                                                           ,C.CheckStatus
                                                           ,C.VoidReason
                                                           ,C.ExternalCheckNumber
                                                           ,C.ExternalCheckCurrency
                                                           ,C.ExternalCheckAmount
                                                           ,C.ExternalConversionRate
                                                           ,C.ExternalMethodOfPayment
                                                           ,C.ExternalCheckDate
                                                           ,C.CheckClearedDate
                                                           ,C.JobId
                                                           ,R.ParentAccountID
                                                           ,C.CashAccountId
                                                           ,R.RecordStatus
                                                           ,R.RecordType
                                                           ,R.EntityType
                                                           ,R.CreationDate
                                                           ,R.ProcessedDate
                                                           ,R.VoidDate
                                                           ,R.GroupID
                                                           ,R.Notes
                                                           ,R.LastUpdatedAt
                                                           ,R.LastUpdatedBy
                                                                    --new columns
                                                           ,CR.GlobalCapitationRecordID
                                                           ,CR.GlobalCapitationRecordID
                                                           ,CR.RecordType
                                                           ,null
                                                           ,CR.ReferenceID
                                                           ,CR.Amount
                                                           ,CR.GroupID
                                                           ,CR.PostDate
                                                           ,null
                                                           ,null    -- CR.RiskGroupVendorMapID,
                                                           ,R.MethodOfPayment
                                                           ,CRD.RateCoverageType
                                                           ,CRD.QualifierId
                                                     from   Checks C
                                                            inner join #CashAccounts CA
                                                                on C.CashAccountId = CA.CashAccountId
                                                            inner join Records R
                                                                on R.RecordType = 'PS'
                                                                   and  R.ReferenceNumber = C.CheckId
                                                                   and  isnull(R.MethodOfPayment, '') = isnull(isnull(null, R.MethodOfPayment), '')
                                                            inner join VoidGlobalCapitationCheckDetails VCCD
                                                                on R.RecordID = VCCD.PaymentRecordID
                                                            inner join GlobalCapitationRecords CR
                                                                on VCCD.GlobalCapitationRecordID = CR.GlobalCapitationRecordID
                                                                   and  CR.RecordType = isnull(@RecordType, CR.RecordType)
                                                            left outer join CapitationRateDetails CRD
                                                                on CR.CapitationRateDetailID = CRD.CapitationRateDetailID
                                                            inner join EntityAccountMap EAM
                                                                on EAM.AccountID = R.ParentAccountID
                                                                   and  EAM.EntityType = 'VDR'
                                                            inner join Vendors V
                                                                on EAM.EntityID = V.VendorId
                                                                   and  isnull(V.VendorClass, '') = isnull(isnull(@VendorClass, V.VendorClass), '')
                                                                   and  isnull(V.VendorSubclass, '') = isnull(isnull(@VendorSubClass, V.VendorSubclass), '')
                                                            inner join #Groups G
                                                                on CR.GroupID = G.GroupID
                                                     where  C.DateCreated
                                                            between @StartDate
                                                            and     @EndDate
                                                            and isnull(C.CheckNumber, '') = isnull(@CheckNumber, isnull(C.CheckNumber, ''))
                                                            and isnull(C.JobId, -1) = isnull(@JobId, isnull(C.JobId, -1))
                                                            and C.CheckStatus = isnull(@CheckStatus, C.CheckStatus)
                                                            and C.CheckStatus != 'PWV'
                                                     option (recompile)

                                                     select @error = @@error
                                                     if @error != 0
                                                         begin
                                                             select @ProcedureStep = 2
                                                             select @UserMsg = 'Check Register could not be created. Contact System Administrator.'
                                                             select @LogMsg
                                                                 = 'Insert failed for checks that were paid. Error: ' + convert(varchar, @error) + ' occurred.'
                                                             raiserror(
                                                                          65500
                                                                         ,1
                                                                         ,1
                                                                         ,@ProductName
                                                                         ,@ProcedureName
                                                                         ,@ProcedureStep
                                                                         ,@UserMsg
                                                                         ,@LogMsg
                                                                         ,@SessionID
                                                                         ,-1
                                                                         ,@rowcount
                                                                         ,1
                                                                      )
                                                             goto AppErrorExit
                                                         end


                                                     --Voided capitation checks with negative amounts
                                                     insert into    #ResultSet
                                                         (
                                                             RecordID
                                                            ,CheckID
                                                            ,CheckNumber
                                                            ,CheckDate
                                                            ,CheckAmount
                                                            ,CheckVoidReason
                                                            ,CheckStatusCode
                                                            ,ExternalCheckNumber
                                                            ,ExternalCheckCurrency
                                                            ,ExternalCheckAmount
                                                            ,ExternalMethodOfPaymentCode
                                                            ,ExternalCheckDate
                                                            ,CheckClearedDate
                                                            ,ExternalConversionRate
                                                            ,PaymentWizardJobId
                                                            ,ParentAccountID
                                                            ,CashAccountId
                                                            ,RecordStatusCode
                                                            ,RecordTypeCode
                                                            ,EntityTypeCode
                                                            ,CreationDate
                                                            ,ProcessedDate
                                                            ,VoidDate
                                                            ,CheckGroupID
                                                            ,Notes
                                                            ,LastUpdatedAt
                                                            ,LastUpdatedBy
                                                            --extra columns
                                                            ,FinancialRecordID
                                                            ,RecordDetailId
                                                            ,RecordDetailType
                                                            ,ReferenceNumber
                                                            ,DetailPaidAmount
                                                            ,DetailGroupID
                                                            ,DetailCreationDate
                                                            ,PaymentClassCode
                                                            ,AdjustmentVersion
                                                            ,RiskGroupVendorMapID
                                                            ,MethodOfPayment
                                                            ,VoidInsert
                                                            ,RateCoverageType
                                                            ,QualifierId
                                                         )
                                                     select R.RecordID
                                                           ,C.CheckId
                                                           ,C.CheckNumber
                                                           ,C.DateCreated
                                                           ,- (C.Amount)
                                                           ,C.VoidReason
                                                           ,C.CheckStatus
                                                           ,C.ExternalCheckNumber
                                                           ,C.ExternalCheckCurrency
                                                           ,- (C.ExternalCheckAmount)
                                                           ,C.ExternalMethodOfPayment
                                                           ,C.ExternalCheckDate
                                                           ,C.CheckClearedDate
                                                           ,C.ExternalConversionRate
                                                           ,C.JobId
                                                           ,R.ParentAccountID
                                                           ,C.CashAccountId
                                                           ,R.RecordStatus
                                                           ,R.RecordType
                                                           ,R.EntityType
                                                           ,R.CreationDate
                                                           ,R.ProcessedDate
                                                           ,R.VoidDate
                                                           ,R.GroupID
                                                           ,R.Notes
                                                           ,R.LastUpdatedAt
                                                           ,R.LastUpdatedBy
                                                            --new columns
                                                           ,CR.GlobalCapitationRecordID
                                                           ,CR.GlobalCapitationRecordID
                                                           ,CR.RecordType
                                                           ,CR.ReferenceID
                                                           ,- (CR.Amount)
                                                           ,CR.GroupID
                                                           ,CR.PostDate
                                                           ,null
                                                           ,null
                                                           ,null /* CR.RiskGroupVendorMapID */
                                                           ,R.MethodOfPayment
                                                           ,'Y'
                                                           ,CRD.RateCoverageType
                                                           ,CRD.QualifierId
                                                     from   Checks C
                                                            inner join #CashAccounts CA
                                                                on C.CashAccountId = CA.CashAccountId
                                                            inner join Records R
                                                                on R.RecordType = 'PS'
                                                                   and  R.ReferenceNumber = C.CheckId
                                                                   and  isnull(R.MethodOfPayment, '') = isnull(isnull(@MethodOfPayment, R.MethodOfPayment), '')
                                                            inner join VoidGlobalCapitationCheckDetails VCCD
                                                                on R.RecordID = VCCD.PaymentRecordID
                                                            inner join GlobalCapitationRecords CR
                                                                on VCCD.GlobalCapitationRecordID = CR.GlobalCapitationRecordID
                                                                   and  CR.RecordType = isnull(@RecordType, CR.RecordType)
                                                            left outer join CapitationRateDetails CRD
                                                                on CR.CapitationRateDetailID = CRD.CapitationRateDetailID
                                                            inner join EntityAccountMap EAM
                                                                on EAM.AccountID = R.ParentAccountID
                                                                   and  EAM.EntityType = 'VDR'
                                                            inner join Vendors V
                                                                on EAM.EntityID = V.VendorId
                                                                   and  isnull(V.VendorClass, '') = isnull(isnull(@VendorClass, V.VendorClass), '')
                                                                   and  isnull(V.VendorSubclass, '') = isnull(isnull(@VendorSubClass, V.VendorSubclass), '')
                                                            --filter the non selected claims out
                                                            inner join #Groups G
                                                                on CR.GroupID = G.GroupID
                                                     where  C.DateVoided
                                                            between @StartDate
                                                            and     @EndDate
                                                            and isnull(C.CheckNumber, '') = isnull(@CheckNumber, isnull(C.CheckNumber, ''))
                                                            and isnull(C.JobId, -1) = isnull(@JobId, isnull(C.JobId, -1))
                                                            and C.CheckStatus = isnull(@CheckStatus, C.CheckStatus)
                                                            and C.CheckStatus != 'PWV'
                                                     option (recompile)

                                                     select @error = @@error
                                                     if @error != 0
                                                         begin
                                                             select @ProcedureStep = 2
                                                             select @UserMsg = 'Check Register could not be created. Contact System Administrator.'
                                                             select @LogMsg
                                                                 = 'Insert failed for checks that were paid. Error: ' + convert(varchar, @error) + ' occurred.'
                                                             raiserror(
                                                                          65500
                                                                         ,1
                                                                         ,1
                                                                         ,@ProductName
                                                                         ,@ProcedureName
                                                                         ,@ProcedureStep
                                                                         ,@UserMsg
                                                                         ,@LogMsg
                                                                         ,@SessionID
                                                                         ,-1
                                                                         ,@rowcount
                                                                         ,1
                                                                      )
                                                             goto AppErrorExit
                                                         end

                                                 end --- of "if @ShowVoidedChecks = 'Y'"
                                         end -- of if isnull(@EntityType,'') = '' or @EntityType ='GCP'

                                 end --end of using groups table to filter results

                             else
                                 begin -- else if @GroupID is null 
                                     insert into    #ResultSet
                                         (
                                             RecordID
                                            ,CheckID
                                            ,CheckNumber
                                            ,CheckDate
                                            ,CheckAmount
                                            ,CheckStatusCode
                                            ,CheckVoidReason
                                            ,ExternalCheckNumber
                                            ,ExternalCheckCurrency
                                            ,ExternalCheckAmount
                                            ,ExternalConversionRate
                                            ,ExternalMethodOfPaymentCode
                                            ,ExternalCheckDate
                                            ,CheckClearedDate
                                            ,PaymentWizardJobId
                                            ,ParentAccountID
                                            ,CashAccountId
                                            ,RecordStatusCode
                                            ,RecordTypeCode
                                            ,EntityTypeCode
                                            ,CreationDate
                                            ,ProcessedDate
                                            ,VoidDate
                                            ,CheckGroupID
                                            ,Notes
                                            ,LastUpdatedAt
                                            ,LastUpdatedBy
                                            --extra columns
                                            ,FinancialRecordID
                                            ,RecordDetailId
                                            ,RecordDetailType
                                            ,PaymentClassCode
                                            ,ReferenceNumber
                                            ,DetailPaidAmount
                                            ,DetailGroupID
                                            ,DetailCreationDate
                                            ,AdjustmentVersion
                                            ,RiskGroupVendorMapID
                                            ,MethodOfPayment
                                            ,WriteOffReasonCode
                                         )
                                     select R.RecordID
                                           ,C.CheckId
                                           ,C.CheckNumber
                                           ,C.DateCreated
                                           ,case when R.RecordType = 'PR' then - (C.Amount)
                                                 else C.Amount
                                            end
                                           ,case when
                                                     (
                                                         @ShowVoidedChecks = 'Y'
                                                         and C.CheckStatus = 'VD'
                                                     ) then 'PRT'
                                                 else C.CheckStatus
                                            end
                                           ,case when
                                                     (
                                                         @ShowVoidedChecks = 'Y'
                                                         and C.CheckStatus = 'VD'
                                                     ) then null
                                                 else C.VoidReason
                                            end
                                           ,C.ExternalCheckNumber
                                           ,C.ExternalCheckCurrency
                                           ,case when R.RecordType = 'PR' then - (C.ExternalCheckAmount)
                                                 else C.ExternalCheckAmount
                                            end
                                           ,C.ExternalConversionRate
                                           ,C.ExternalMethodOfPayment
                                           ,C.ExternalCheckDate
                                           ,C.CheckClearedDate
                                           ,C.JobId
                                           ,R.ParentAccountID
                                           ,C.CashAccountId
                                           ,case when
                                                     (
                                                         @ShowVoidedChecks = 'Y'
                                                         and C.CheckStatus = 'VD'
                                                     ) then 'PRT'
                                                 else R.RecordStatus
                                            end
                                           ,R.RecordType
                                           ,R.EntityType
                                           ,R.CreationDate
                                           ,R.ProcessedDate
                                           ,case when
                                                     (
                                                         @ShowVoidedChecks = 'Y'
                                                         and C.CheckStatus = 'VD'
                                                     ) then null
                                                 else R.VoidDate
                                            end
                                           ,R.GroupID
                                           ,R.Notes
                                           ,R.LastUpdatedAt
                                           ,R.LastUpdatedBy
                                            --new columns
                                           ,R2.RecordID
                                           ,RD.ItemID
                                           ,RD.ItemType
                                           ,R2.PaymentClass
                                           ,R2.ReferenceNumber
                                           ,R2.Amount
                                           ,R2.GroupID
                                           ,R2.CreationDate
                                           ,R2.Adjustmentversion
                                           ,R2.RiskGroupVendorMapID
                                           ,R.MethodOfPayment
                                           ,C.WriteOffReason
                                     from   Checks C
                                            inner join Records R
                                                on R.RecordType in ('PS', isnull(@PaymentReceived, ''), isnull(@WriteOff, ''))
                                                   and  R.ReferenceNumber = C.CheckId
                                                   and  C.CashAccountId in
                                                            (
                                                                select  CashAccountId
                                                                from    #CashAccounts
                                                            )
                                                   and  R.EntityType = isnull(@EntityType, R.EntityType)
                                                   and  isnull(R.MethodOfPayment, '') = isnull(isnull(@MethodOfPayment, R.MethodOfPayment), '')
                                            inner join RecordDetails RD
                                                on R.RecordID = RD.RecordID
                                            inner join Records R2
                                                on RD.ItemID = R2.RecordID
                                                   and  R2.RecordType = isnull(@RecordType, R2.RecordType)
                                                   and  isnull(R2.PaymentClass, '') = isnull(@PaymentClass, isnull(R2.PaymentClass, ''))
                                                   and  not (
                                                                @UseProvidersTable = 'Y'
                                                                and R2.ReferenceNumber not in
                                                                        (
                                                                            select  ClaimId
                                                                            from    Claims
                                                                            where   ProviderId in
                                                                                        (
                                                                                            select  ProviderID
                                                                                            from    @Providers
                                                                                        )
                                                                        )
                                                            )
                                            inner join EntityAccountMap EAM
                                                on EAM.AccountID = R.ParentAccountID
                                                   and  EAM.EntityType = 'VDR'
                                            inner join Vendors V
                                                on EAM.EntityID = V.VendorId
                                                   and  isnull(V.VendorClass, '') = isnull(isnull(@VendorClass, V.VendorClass), '')
                                                   and  isnull(V.VendorSubclass, '') = isnull(isnull(@VendorSubClass, V.VendorSubclass), '')
                                     where  (
                                                (
                                                    R.RecordType = 'PS'
                                                    and C.DateCreated
                                            between @StartDate
                                            and     @EndDate
                                                )
                                                or
                                                    (
                                                        R.RecordType = 'PR'
                                                        and R.CreationDate
                                            between @StartDate
                                            and     @EndDate
                                                    )
                                                or
                                                    (
                                                        R.RecordType = 'WO'
                                                        and C.DateCreated
                                            between @StartDate
                                            and     @EndDate
                                                    )
                                            )
                                            and isnull(C.CheckNumber, '') = isnull(@CheckNumber, isnull(C.CheckNumber, ''))
                                            and isnull(C.JobId, -1) = isnull(@JobId, isnull(C.JobId, -1))
                                            and C.CheckStatus = isnull(@CheckStatus, C.CheckStatus)
                                            and C.CheckStatus != case when @ShowPaymentWizardVoidedChecks = 'Y' then ''
                                                                      else 'PWV'
                                                                 end
                                     option (recompile)

                                     select @error = @@error
                                     if @error != 0
                                         begin
                                             select @ProcedureStep = 2
                                             select @UserMsg = 'Check Register could not be created. Contact System Administrator.'
                                             select @LogMsg = 'Insert failed for checks that were paid. Error: ' + convert(varchar, @error) + ' occurred.'
                                             raiserror(
                                                          65500
                                                         ,1
                                                         ,1
                                                         ,@ProductName
                                                         ,@ProcedureName
                                                         ,@ProcedureStep
                                                         ,@UserMsg
                                                         ,@LogMsg
                                                         ,@SessionID
                                                         ,-1
                                                         ,@rowcount
                                                         ,1
                                                      )
                                             goto AppErrorExit
                                         end

                                     if @ShowVoidedChecks = 'Y'
                                         begin
                                             insert into    #ResultSet
                                                 (
                                                     RecordID
                                                    ,CheckID
                                                    ,CheckNumber
                                                    ,CheckDate
                                                    ,CheckAmount
                                                    ,CheckVoidReason
                                                    ,CheckStatusCode
                                                    ,ExternalCheckNumber
                                                    ,ExternalCheckCurrency
                                                    ,ExternalCheckAmount
                                                    ,ExternalMethodOfPaymentCode
                                                    ,ExternalCheckDate
                                                    ,CheckClearedDate
                                                    ,ExternalConversionRate
                                                    ,PaymentWizardJobId
                                                    ,ParentAccountID
                                                    ,CashAccountId
                                                    ,RecordStatusCode
                                                    ,RecordTypeCode
                                                    ,EntityTypeCode
                                                    ,CreationDate
                                                    ,ProcessedDate
                                                    ,VoidDate
                                                    ,CheckGroupID
                                                    ,Notes
                                                    ,LastUpdatedAt
                                                    ,LastUpdatedBy
                                                    --extra columns
                                                    ,FinancialRecordID
                                                    ,RecordDetailId
                                                    ,RecordDetailType
                                                    ,ReferenceNumber
                                                    ,DetailPaidAmount
                                                    ,DetailGroupID
                                                    ,DetailCreationDate
                                                    ,PaymentClassCode
                                                    ,AdjustmentVersion
                                                    ,RiskGroupVendorMapID
                                                    ,MethodOfPayment
                                                    ,VoidInsert
                                                    ,WriteOffReasonCode
                                                 )
                                             select R.RecordID
                                                   ,C.CheckId
                                                   ,C.CheckNumber
                                                   ,C.DateCreated
                                                   ,- (C.Amount)
                                                   ,C.VoidReason
                                                   ,C.CheckStatus
                                                   ,C.ExternalCheckNumber
                                                   ,C.ExternalCheckCurrency
                                                   ,- (C.ExternalCheckAmount)
                                                   ,C.ExternalMethodOfPayment
                                                   ,C.ExternalCheckDate
                                                   ,C.CheckClearedDate
                                                   ,C.ExternalConversionRate
                                                   ,C.JobId
                                                   ,R.ParentAccountID
                                                   ,C.CashAccountId
                                                   ,R.RecordStatus
                                                   ,R.RecordType
                                                   ,R.EntityType
                                                   ,R.CreationDate
                                                   ,R.ProcessedDate
                                                   ,R.VoidDate
                                                   ,R.GroupID
                                                   ,R.Notes
                                                   ,R.LastUpdatedAt
                                                   ,R.LastUpdatedBy
                                                    --new columns
                                                   ,R2.RecordID
                                                   ,RD.ItemID
                                                   ,RD.ItemType
                                                   ,R2.ReferenceNumber
                                                   ,- (R2.Amount)
                                                   ,R2.GroupID
                                                   ,R2.CreationDate
                                                   ,R2.PaymentClass
                                                   ,R2.Adjustmentversion
                                                   ,R2.RiskGroupVendorMapID
                                                   ,R.MethodOfPayment
                                                   ,'Y'
                                                   ,C.WriteOffReason
                                             from   Checks C
                                                    inner join Records R
                                                        on R.RecordType in ('PS', isnull(@PaymentReceived, ''), isnull(@WriteOff, ''))
                                                           and  R.ReferenceNumber = C.CheckId
                                                           and  C.CashAccountId in
                                                                    (
                                                                        select  CashAccountId
                                                                        from    #CashAccounts
                                                                    )
                                                           and  R.EntityType = isnull(@EntityType, R.EntityType)
                                                           and  isnull(R.MethodOfPayment, '') = isnull(isnull(@MethodOfPayment, R.MethodOfPayment), '')
                                                    inner join RecordDetails RD
                                                        on R.RecordID = RD.RecordID
                                                    inner join Records R2
                                                        on RD.ItemID = R2.RecordID
                                                           and  R2.RecordType = isnull(@RecordType, R2.RecordType)
                                                           and  isnull(R2.PaymentClass, '') = isnull(@PaymentClass, isnull(R2.PaymentClass, ''))
                                                           and  not (
                                                                        @UseProvidersTable = 'Y'
                                                                        and R2.ReferenceNumber not in
                                                                                (
                                                                                    select  ClaimId
                                                                                    from    Claims
                                                                                    where   ProviderId in
                                                                                                (
                                                                                                    select  ProviderID
                                                                                                    from    @Providers
                                                                                                )
                                                                                )
                                                                    )
                                                    inner join EntityAccountMap EAM
                                                        on EAM.AccountID = R.ParentAccountID
                                                           and  EAM.EntityType = 'VDR'
                                                    inner join Vendors V
                                                        on EAM.EntityID = V.VendorId
                                                           and  isnull(V.VendorClass, '') = isnull(isnull(@VendorClass, V.VendorClass), '')
                                                           and  isnull(V.VendorSubclass, '') = isnull(isnull(@VendorSubClass, V.VendorSubclass), '')
                                             where  C.DateVoided
                                                    between @StartDate
                                                    and     @EndDate
                                                    and isnull(C.CheckNumber, '') = isnull(@CheckNumber, isnull(C.CheckNumber, ''))
                                                    and isnull(C.JobId, -1) = isnull(@JobId, isnull(C.JobId, -1))
                                                    and C.CheckStatus = isnull(@CheckStatus, C.CheckStatus)
                                                    and C.CheckStatus != 'PWV'
                                             option (recompile)

                                             select @error = @@error
                                             if @error != 0
                                                 begin
                                                     select @ProcedureStep = 2
                                                     select @UserMsg = 'Check Register could not be created. Contact System Administrator.'
                                                     select @LogMsg
                                                         = 'Insert failed for checks that were paid. Error: ' + convert(varchar, @error) + ' occurred.'
                                                     raiserror(
                                                                  65500
                                                                 ,1
                                                                 ,1
                                                                 ,@ProductName
                                                                 ,@ProcedureName
                                                                 ,@ProcedureStep
                                                                 ,@UserMsg
                                                                 ,@LogMsg
                                                                 ,@SessionID
                                                                 ,-1
                                                                 ,@rowcount
                                                                 ,1
                                                              )
                                                     goto AppErrorExit
                                                 end
                                         end --- of "if @ShowVoidedChecks = 'Y'"
                                     else
                                         begin
                                             delete from #ResultSet
                                             where  RecordStatusCode = 'V'
                                         end

                                     if isnull(@EntityType, '') = ''
                                        or  @EntityType = 'CPT' --Capitation (1DL, @EIN is null & @GroupID is null)
                                         begin
                                             insert into    #ResultSet
                                                 (
                                                     RecordID
                                                    ,CheckID
                                                    ,CheckNumber
                                                    ,CheckDate
                                                    ,CheckAmount
                                                    ,CheckStatusCode
                                                    ,CheckVoidReason
                                                    ,ExternalCheckNumber
                                                    ,ExternalCheckCurrency
                                                    ,ExternalCheckAmount
                                                    ,ExternalConversionRate
                                                    ,ExternalMethodOfPaymentCode
                                                    ,ExternalCheckDate
                                                    ,CheckClearedDate
                                                    ,PaymentWizardJobId
                                                    ,ParentAccountID
                                                    ,CashAccountId
                                                    ,RecordStatusCode
                                                    ,RecordTypeCode
                                                    ,EntityTypeCode
                                                    ,CreationDate
                                                    ,ProcessedDate
                                                    ,VoidDate
                                                    ,CheckGroupID
                                                    ,Notes
                                                    ,LastUpdatedAt
                                                    ,LastUpdatedBy
                                                    --extra columns
                                                    ,FinancialRecordID
                                                    ,RecordDetailId
                                                    ,RecordDetailType
                                                    ,PaymentClassCode
                                                    ,ReferenceNumber
                                                    ,DetailPaidAmount
                                                    ,DetailGroupID
                                                    ,DetailCreationDate
                                                    ,AdjustmentVersion
                                                    ,RiskGroupVendorMapID
                                                    ,MethodOfPayment
                                                    ,RateCoverageType
                                                    ,QualifierId
                                                 )
                                             select R.RecordID
                                                   ,C.CheckId
                                                   ,C.CheckNumber
                                                   ,C.DateCreated
                                                   ,C.Amount
                                                   ,C.CheckStatus
                                                   ,C.VoidReason
                                                   ,C.ExternalCheckNumber
                                                   ,C.ExternalCheckCurrency
                                                   ,C.ExternalCheckAmount
                                                   ,C.ExternalConversionRate
                                                   ,C.ExternalMethodOfPayment
                                                   ,C.ExternalCheckDate
                                                   ,C.CheckClearedDate
                                                   ,C.JobId
                                                   ,R.ParentAccountID
                                                   ,C.CashAccountId
                                                   ,R.RecordStatus
                                                   ,R.RecordType
                                                   ,R.EntityType
                                                   ,R.CreationDate
                                                   ,R.ProcessedDate
                                                   ,R.VoidDate
                                                   ,R.GroupID
                                                   ,R.Notes
                                                   ,R.LastUpdatedAt
                                                   ,R.LastUpdatedBy
                                                    --new columns
                                                   ,CR.CapitationRecordID
                                                   ,CR.CapitationRecordID
                                                   ,CR.RecordType
                                                   ,null
                                                   ,CR.ReferenceID
                                                   ,CR.Amount
                                                   ,CR.GroupID
                                                   ,CR.PostDate
                                                   ,null
                                                   ,CR.RiskGroupVendorMapID
                                                   ,R.MethodOfPayment
                                                   ,CRD.RateCoverageType
                                                   ,CRD.QualifierId
                                             from   Checks C
                                                    inner join #CashAccounts CA
                                                        on C.CashAccountId = CA.CashAccountId
                                                    inner join Records R
                                                        on R.RecordType = 'PS'
                                                           and  R.ReferenceNumber = C.CheckId
                                                           and  isnull(R.MethodOfPayment, '') = isnull(isnull(@MethodOfPayment, R.MethodOfPayment), '')
                                                    inner join CapitationRecords CR
                                                        on R.RecordID = CR.PaymentRecordID
                                                           and  CR.RecordType = isnull(@RecordType, CR.RecordType)
                                                    left outer join CapitationRateDetails CRD
                                                        on CR.CapitationRateDetailID = CRD.CapitationRateDetailID
                                                    inner join EntityAccountMap EAM
                                                        on EAM.AccountID = R.ParentAccountID
                                                           and  EAM.EntityType = 'VDR'
                                                    inner join Vendors V
                                                        on EAM.EntityID = V.VendorId
                                                           and  isnull(V.VendorClass, '') = isnull(isnull(@VendorClass, V.VendorClass), '')
                                                           and  isnull(V.VendorSubclass, '') = isnull(isnull(@VendorSubClass, V.VendorSubclass), '')
                                             where  C.DateCreated
                                                    between @StartDate
                                                    and     @EndDate
                                                    and isnull(C.CheckNumber, '') = isnull(@CheckNumber, isnull(C.CheckNumber, ''))
                                                    and isnull(C.JobId, -1) = isnull(@JobId, isnull(C.JobId, -1))
                                                    and C.CheckStatus = isnull(@CheckStatus, C.CheckStatus)
                                                    and C.CheckStatus != case when @ShowPaymentWizardVoidedChecks = 'Y' then ''
                                                                              else 'PWV'
                                                                         end
                                             option (recompile)

                                             select @error = @@error
                                             if @error != 0
                                                 begin
                                                     select @ProcedureStep = 2
                                                     select @UserMsg = 'Check Register could not be created. Contact System Administrator.'
                                                     select @LogMsg
                                                         = 'Insert failed for checks that were paid. Error: ' + convert(varchar, @error) + ' occurred.'
                                                     raiserror(
                                                                  65500
                                                                 ,1
                                                                 ,1
                                                                 ,@ProductName
                                                                 ,@ProcedureName
                                                                 ,@ProcedureStep
                                                                 ,@UserMsg
                                                                 ,@LogMsg
                                                                 ,@SessionID
                                                                 ,-1
                                                                 ,@rowcount
                                                                 ,1
                                                              )
                                                     goto AppErrorExit
                                                 end

                                             if @ShowVoidedChecks = 'Y'
                                                 begin
                                                     --Voided capitation checks 
                                                     insert into    #ResultSet
                                                         (
                                                             RecordID
                                                            ,CheckID
                                                            ,CheckNumber
                                                            ,CheckDate
                                                            ,CheckAmount
                                                            ,CheckStatusCode
                                                            ,CheckVoidReason
                                                            ,ExternalCheckNumber
                                                            ,ExternalCheckCurrency
                                                            ,ExternalCheckAmount
                                                            ,ExternalConversionRate
                                                            ,ExternalMethodOfPaymentCode
                                                            ,ExternalCheckDate
                                                            ,CheckClearedDate
                                                            ,PaymentWizardJobId
                                                            ,ParentAccountID
                                                            ,CashAccountId
                                                            ,RecordStatusCode
                                                            ,RecordTypeCode
                                                            ,EntityTypeCode
                                                            ,CreationDate
                                                            ,ProcessedDate
                                                            ,VoidDate
                                                            ,CheckGroupID
                                                            ,Notes
                                                            ,LastUpdatedAt
                                                            ,LastUpdatedBy
                                                            --extra columns
                                                            ,FinancialRecordID
                                                            ,RecordDetailId
                                                            ,RecordDetailType
                                                            ,PaymentClassCode
                                                            ,ReferenceNumber
                                                            ,DetailPaidAmount
                                                            ,DetailGroupID
                                                            ,DetailCreationDate
                                                            ,AdjustmentVersion
                                                            ,RiskGroupVendorMapID
                                                            ,MethodOfPayment
                                                            ,RateCoverageType
                                                            ,QualifierId
                                                         )
                                                     select R.RecordID
                                                           ,C.CheckId
                                                           ,C.CheckNumber
                                                           ,C.DateCreated
                                                           ,C.Amount
                                                           ,C.CheckStatus
                                                           ,C.VoidReason
                                                           ,C.ExternalCheckNumber
                                                           ,C.ExternalCheckCurrency
                                                           ,C.ExternalCheckAmount
                                                           ,C.ExternalConversionRate
                                                           ,C.ExternalMethodOfPayment
                                                           ,C.ExternalCheckDate
                                                           ,C.CheckClearedDate
                                                           ,C.JobId
                                                           ,R.ParentAccountID
                                                           ,C.CashAccountId
                                                           ,R.RecordStatus
                                                           ,R.RecordType
                                                           ,R.EntityType
                                                           ,R.CreationDate
                                                           ,R.ProcessedDate
                                                           ,R.VoidDate
                                                           ,R.GroupID
                                                           ,R.Notes
                                                           ,R.LastUpdatedAt
                                                           ,R.LastUpdatedBy
                                                            --new columns
                                                           ,CR.CapitationRecordID
                                                           ,CR.CapitationRecordID
                                                           ,CR.RecordType
                                                           ,null
                                                           ,CR.ReferenceID
                                                           ,CR.Amount
                                                           ,CR.GroupID
                                                           ,CR.PostDate
                                                           ,null
                                                           ,CR.RiskGroupVendorMapID
                                                           ,R.MethodOfPayment
                                                           ,CRD.RateCoverageType
                                                           ,CRD.QualifierId
                                                     from   Checks C
                                                            inner join #CashAccounts CA
                                                                on C.CashAccountId = CA.CashAccountId
                                                            inner join Records R
                                                                on R.RecordType = 'PS'
                                                                   and  R.ReferenceNumber = C.CheckId
                                                                   and  isnull(R.MethodOfPayment, '') = isnull(isnull(@MethodOfPayment, R.MethodOfPayment), '')
                                                            inner join VoidCapitationCheckDetails VCCD
                                                                on R.RecordID = VCCD.PaymentRecordID
                                                            inner join CapitationRecords CR
                                                                on VCCD.CapitationRecordID = CR.CapitationRecordID
                                                                   and  CR.RecordType = isnull(@RecordType, CR.RecordType)
                                                            left outer join CapitationRateDetails CRD
                                                                on CR.CapitationRateDetailID = CRD.CapitationRateDetailID
                                                            inner join EntityAccountMap EAM
                                                                on EAM.AccountID = R.ParentAccountID
                                                                   and  EAM.EntityType = 'VDR'
                                                            inner join Vendors V
                                                                on EAM.EntityID = V.VendorId
                                                                   and  isnull(V.VendorClass, '') = isnull(isnull(@VendorClass, V.VendorClass), '')
                                                                   and  isnull(V.VendorSubclass, '') = isnull(isnull(@VendorSubClass, V.VendorSubclass), '')
                                                     where  C.DateCreated
                                                            between @StartDate
                                                            and     @EndDate
                                                            and isnull(C.CheckNumber, '') = isnull(@CheckNumber, isnull(C.CheckNumber, ''))
                                                            and isnull(C.JobId, -1) = isnull(@JobId, isnull(C.JobId, -1))
                                                            and C.CheckStatus = isnull(@CheckStatus, C.CheckStatus)
                                                            and C.CheckStatus != 'PWV'
                                                     option (recompile)

                                                     select @error = @@error
                                                     if @error != 0
                                                         begin
                                                             select @ProcedureStep = 2
                                                             select @UserMsg = 'Check Register could not be created. Contact System Administrator.'
                                                             select @LogMsg
                                                                 = 'Insert failed for checks that were paid. Error: ' + convert(varchar, @error) + ' occurred.'
                                                             raiserror(
                                                                          65500
                                                                         ,1
                                                                         ,1
                                                                         ,@ProductName
                                                                         ,@ProcedureName
                                                                         ,@ProcedureStep
                                                                         ,@UserMsg
                                                                         ,@LogMsg
                                                                         ,@SessionID
                                                                         ,-1
                                                                         ,@rowcount
                                                                         ,1
                                                                      )
                                                             goto AppErrorExit
                                                         end

                                                     --Voided capitation checks with negative amounts
                                                     insert into    #ResultSet
                                                         (
                                                             RecordID
                                                            ,CheckID
                                                            ,CheckNumber
                                                            ,CheckDate
                                                            ,CheckAmount
                                                            ,CheckVoidReason
                                                            ,CheckStatusCode
                                                            ,ExternalCheckNumber
                                                            ,ExternalCheckCurrency
                                                            ,ExternalCheckAmount
                                                            ,ExternalMethodOfPaymentCode
                                                            ,ExternalCheckDate
                                                            ,CheckClearedDate
                                                            ,ExternalConversionRate
                                                            ,PaymentWizardJobId
                                                            ,ParentAccountID
                                                            ,CashAccountId
                                                            ,RecordStatusCode
                                                            ,RecordTypeCode
                                                            ,EntityTypeCode
                                                            ,CreationDate
                                                            ,ProcessedDate
                                                            ,VoidDate
                                                            ,CheckGroupID
                                                            ,Notes
                                                            ,LastUpdatedAt
                                                            ,LastUpdatedBy
                                                            --extra columns
                                                            ,FinancialRecordID
                                                            ,RecordDetailId
                                                            ,RecordDetailType
                                                            ,ReferenceNumber
                                                            ,DetailPaidAmount
                                                            ,DetailGroupID
                                                            ,DetailCreationDate
                                                            ,PaymentClassCode
                                                            ,AdjustmentVersion
                                                            ,RiskGroupVendorMapID
                                                            ,MethodOfPayment
                                                            ,VoidInsert
                                                            ,RateCoverageType
                                                            ,QualifierId
                                                         )
                                                     select R.RecordID
                                                           ,C.CheckId
                                                           ,C.CheckNumber
                                                           ,C.DateCreated
                                                           ,- (C.Amount)
                                                           ,C.VoidReason
                                                           ,C.CheckStatus
                                                           ,C.ExternalCheckNumber
                                                           ,C.ExternalCheckCurrency
                                                           ,- (C.ExternalCheckAmount)
                                                           ,C.ExternalMethodOfPayment
                                                           ,C.ExternalCheckDate
                                                           ,C.CheckClearedDate
                                                           ,C.ExternalConversionRate
                                                           ,C.JobId
                                                           ,R.ParentAccountID
                                                           ,C.CashAccountId
                                                           ,R.RecordStatus
                                                           ,R.RecordType
                                                           ,R.EntityType
                                                           ,R.CreationDate
                                                           ,R.ProcessedDate
                                                           ,R.VoidDate
                                                           ,R.GroupID
                                                           ,R.Notes
                                                           ,R.LastUpdatedAt
                                                           ,R.LastUpdatedBy
                                                            --new columns
                                                           ,CR.CapitationRecordID
                                                           ,CR.CapitationRecordID
                                                           ,CR.RecordType
                                                           ,CR.ReferenceID
                                                           ,- (CR.Amount)
                                                           ,CR.GroupID
                                                           ,CR.PostDate
                                                           ,null
                                                           ,null
                                                           ,CR.RiskGroupVendorMapID
                                                           ,R.MethodOfPayment
                                                           ,'Y'
                                                           ,CRD.RateCoverageType
                                                           ,CRD.QualifierId
                                                     from   Checks C
                                                            inner join #CashAccounts CA
                                                                on C.CashAccountId = CA.CashAccountId
                                                            inner join Records R
                                                                on R.RecordType = 'PS'
                                                                   and  R.ReferenceNumber = C.CheckId
                                                                   and  isnull(R.MethodOfPayment, '') = isnull(isnull(@MethodOfPayment, R.MethodOfPayment), '')
                                                            inner join VoidCapitationCheckDetails VCCD
                                                                on R.RecordID = VCCD.PaymentRecordID
                                                            inner join CapitationRecords CR
                                                                on VCCD.CapitationRecordID = CR.CapitationRecordID
                                                                   and  CR.RecordType = isnull(@RecordType, CR.RecordType)
                                                            left outer join CapitationRateDetails CRD
                                                                on CR.CapitationRateDetailID = CRD.CapitationRateDetailID
                                                            inner join EntityAccountMap EAM
                                                                on EAM.AccountID = R.ParentAccountID
                                                                   and  EAM.EntityType = 'VDR'
                                                            inner join Vendors V
                                                                on EAM.EntityID = V.VendorId
                                                                   and  isnull(V.VendorClass, '') = isnull(isnull(@VendorClass, V.VendorClass), '')
                                                                   and  isnull(V.VendorSubclass, '') = isnull(isnull(@VendorSubClass, V.VendorSubclass), '')
                                                     where  C.DateVoided
                                                            between @StartDate
                                                            and     @EndDate
                                                            and isnull(C.CheckNumber, '') = isnull(@CheckNumber, isnull(C.CheckNumber, ''))
                                                            and isnull(C.JobId, -1) = isnull(@JobId, isnull(C.JobId, -1))
                                                            and C.CheckStatus = isnull(@CheckStatus, C.CheckStatus)
                                                            and C.CheckStatus != 'PWV'
                                                     option (recompile)

                                                     select @error = @@error
                                                     if @error != 0
                                                         begin
                                                             select @ProcedureStep = 2
                                                             select @UserMsg = 'Check Register could not be created. Contact System Administrator.'
                                                             select @LogMsg
                                                                 = 'Insert failed for checks that were paid. Error: ' + convert(varchar, @error) + ' occurred.'
                                                             raiserror(
                                                                          65500
                                                                         ,1
                                                                         ,1
                                                                         ,@ProductName
                                                                         ,@ProcedureName
                                                                         ,@ProcedureStep
                                                                         ,@UserMsg
                                                                         ,@LogMsg
                                                                         ,@SessionID
                                                                         ,-1
                                                                         ,@rowcount
                                                                         ,1
                                                                      )
                                                             goto AppErrorExit
                                                         end
                                                 end --- of "if @ShowVoidedChecks = 'Y'"
                                         end -- if isnull(@EntityType,'') = '' or @EntityType ='CPT' --Capitation

                                     if (
                                            isnull(@EntityType, '') = ''
                                            or  @EntityType = 'GCP'
                                        ) -- 1DL, @EIN is null & @GroupID is null  
                                         begin
                                             insert into    #ResultSet
                                                 (
                                                     RecordID
                                                    ,CheckID
                                                    ,CheckNumber
                                                    ,CheckDate
                                                    ,CheckAmount
                                                    ,CheckStatusCode
                                                    ,CheckVoidReason
                                                    ,ExternalCheckNumber
                                                    ,ExternalCheckCurrency
                                                    ,ExternalCheckAmount
                                                    ,ExternalConversionRate
                                                    ,ExternalMethodOfPaymentCode
                                                    ,ExternalCheckDate
                                                    ,CheckClearedDate
                                                    ,PaymentWizardJobId
                                                    ,ParentAccountID
                                                    ,CashAccountId
                                                    ,RecordStatusCode
                                                    ,RecordTypeCode
                                                    ,EntityTypeCode
                                                    ,CreationDate
                                                    ,ProcessedDate
                                                    ,VoidDate
                                                    ,CheckGroupID
                                                    ,Notes
                                                    ,LastUpdatedAt
                                                    ,LastUpdatedBy
                                                    --extra columns
                                                    ,FinancialRecordID
                                                    ,RecordDetailId
                                                    ,RecordDetailType
                                                    ,PaymentClassCode
                                                    ,ReferenceNumber
                                                    ,DetailPaidAmount
                                                    ,DetailGroupID
                                                    ,DetailCreationDate
                                                    ,AdjustmentVersion
                                                    ,RiskGroupVendorMapID
                                                    ,MethodOfPayment
                                                    ,RateCoverageType
                                                    ,QualifierId
                                                 )
                                             select R.RecordID
                                                   ,C.CheckId
                                                   ,C.CheckNumber
                                                   ,C.DateCreated
                                                   ,C.Amount
                                                   ,C.CheckStatus
                                                   ,C.VoidReason
                                                   ,C.ExternalCheckNumber
                                                   ,C.ExternalCheckCurrency
                                                   ,C.ExternalCheckAmount
                                                   ,C.ExternalConversionRate
                                                   ,C.ExternalMethodOfPayment
                                                   ,C.ExternalCheckDate
                                                   ,C.CheckClearedDate
                                                   ,C.JobId
                                                   ,R.ParentAccountID
                                                   ,C.CashAccountId
                                                   ,R.RecordStatus
                                                   ,R.RecordType
                                                   ,R.EntityType
                                                   ,R.CreationDate
                                                   ,R.ProcessedDate
                                                   ,R.VoidDate
                                                   ,R.GroupID
                                                   ,R.Notes
                                                   ,R.LastUpdatedAt
                                                   ,R.LastUpdatedBy
                                                            --new columns
                                                   ,CR.GlobalCapitationRecordID
                                                   ,CR.GlobalCapitationRecordID
                                                   ,CR.RecordType
                                                   ,null
                                                   ,CR.ReferenceID
                                                   ,CR.Amount
                                                   ,CR.GroupID
                                                   ,CR.PostDate
                                                   ,null
                                                   ,null    -- CR.RiskGroupVendorMapID,
                                                   ,R.MethodOfPayment
                                                   ,CRD.RateCoverageType
                                                   ,CRD.QualifierId
                                             from   Checks C
                                                    inner join #CashAccounts CA
                                                        on C.CashAccountId = CA.CashAccountId
                                                    inner join Records R
                                                        on R.RecordType = 'PS'
                                                           and  R.ReferenceNumber = C.CheckId
                                                           and  isnull(R.MethodOfPayment, '') = isnull(isnull(@MethodOfPayment, R.MethodOfPayment), '')
                                                    inner join GlobalCapitationRecords CR
                                                        on R.RecordID = CR.PaymentRecordID
                                                           and  CR.RecordType = isnull(@RecordType, CR.RecordType)
                                                    left outer join CapitationRateDetails CRD
                                                        on CR.CapitationRateDetailID = CRD.CapitationRateDetailID
                                                    inner join EntityAccountMap EAM
                                                        on EAM.AccountID = R.ParentAccountID
                                                           and  EAM.EntityType = 'VDR'
                                                    inner join Vendors V
                                                        on EAM.EntityID = V.VendorId
                                                           and  isnull(V.VendorClass, '') = isnull(isnull(@VendorClass, V.VendorClass), '')
                                                           and  isnull(V.VendorSubclass, '') = isnull(isnull(@VendorSubClass, V.VendorSubclass), '')
                                             where  C.DateCreated
                                                    between @StartDate
                                                    and     @EndDate
                                                    and isnull(C.CheckNumber, '') = isnull(@CheckNumber, isnull(C.CheckNumber, ''))
                                                    and isnull(C.JobId, -1) = isnull(@JobId, isnull(C.JobId, -1))
                                                    and C.CheckStatus = isnull(@CheckStatus, C.CheckStatus)
                                                    and C.CheckStatus != case when @ShowPaymentWizardVoidedChecks = 'Y' then ''
                                                                              else 'PWV'
                                                                         end
                                             option (recompile)

                                             select @error = @@error
                                             if @error != 0
                                                 begin
                                                     select @ProcedureStep = 2
                                                     select @UserMsg = 'Check Register could not be created. Contact System Administrator.'
                                                     select @LogMsg
                                                         = 'Insert failed for checks that were paid. Error: ' + convert(varchar, @error) + ' occurred.'
                                                     raiserror(
                                                                  65500
                                                                 ,1
                                                                 ,1
                                                                 ,@ProductName
                                                                 ,@ProcedureName
                                                                 ,@ProcedureStep
                                                                 ,@UserMsg
                                                                 ,@LogMsg
                                                                 ,@SessionID
                                                                 ,-1
                                                                 ,@rowcount
                                                                 ,1
                                                              )
                                                     goto AppErrorExit
                                                 end

                                             if @ShowVoidedChecks = 'Y'
                                                 begin
                                                     --Voided capitation checks 
                                                     insert into    #ResultSet
                                                         (
                                                             RecordID
                                                            ,CheckID
                                                            ,CheckNumber
                                                            ,CheckDate
                                                            ,CheckAmount
                                                            ,CheckStatusCode
                                                            ,CheckVoidReason
                                                            ,ExternalCheckNumber
                                                            ,ExternalCheckCurrency
                                                            ,ExternalCheckAmount
                                                            ,ExternalConversionRate
                                                            ,ExternalMethodOfPaymentCode
                                                            ,ExternalCheckDate
                                                            ,CheckClearedDate
                                                            ,PaymentWizardJobId
                                                            ,ParentAccountID
                                                            ,CashAccountId
                                                            ,RecordStatusCode
                                                            ,RecordTypeCode
                                                            ,EntityTypeCode
                                                            ,CreationDate
                                                            ,ProcessedDate
                                                            ,VoidDate
                                                            ,CheckGroupID
                                                            ,Notes
                                                            ,LastUpdatedAt
                                                            ,LastUpdatedBy
                                                            --extra columns
                                                            ,FinancialRecordID
                                                            ,RecordDetailId
                                                            ,RecordDetailType
                                                            ,PaymentClassCode
                                                            ,ReferenceNumber
                                                            ,DetailPaidAmount
                                                            ,DetailGroupID
                                                            ,DetailCreationDate
                                                            ,AdjustmentVersion
                                                            ,RiskGroupVendorMapID
                                                            ,MethodOfPayment
                                                            ,RateCoverageType
                                                            ,QualifierId
                                                         )
                                                     select R.RecordID
                                                           ,C.CheckId
                                                           ,C.CheckNumber
                                                           ,C.DateCreated
                                                           ,C.Amount
                                                           ,C.CheckStatus
                                                           ,C.VoidReason
                                                           ,C.ExternalCheckNumber
                                                           ,C.ExternalCheckCurrency
                                                           ,C.ExternalCheckAmount
                                                           ,C.ExternalConversionRate
                                                           ,C.ExternalMethodOfPayment
                                                           ,C.ExternalCheckDate
                                                           ,C.CheckClearedDate
                                                           ,C.JobId
                                                           ,R.ParentAccountID
                                                           ,C.CashAccountId
                                                           ,R.RecordStatus
                                                           ,R.RecordType
                                                           ,R.EntityType
                                                           ,R.CreationDate
                                                           ,R.ProcessedDate
                                                           ,R.VoidDate
                                                           ,R.GroupID
                                                           ,R.Notes
                                                           ,R.LastUpdatedAt
                                                           ,R.LastUpdatedBy
                                                                    --new columns
                                                           ,CR.GlobalCapitationRecordID
                                                           ,CR.GlobalCapitationRecordID
                                                           ,CR.RecordType
                                                           ,null
                                                           ,CR.ReferenceID
                                                           ,CR.Amount
                                                           ,CR.GroupID
                                                           ,CR.PostDate
                                                           ,null
                                                           ,null    -- CR.RiskGroupVendorMapID,
                                                           ,R.MethodOfPayment
                                                           ,CRD.RateCoverageType
                                                           ,CRD.QualifierId
                                                     from   Checks C
                                                            inner join #CashAccounts CA
                                                                on C.CashAccountId = CA.CashAccountId
                                                            inner join Records R
                                                                on R.RecordType = 'PS'
                                                                   and  R.ReferenceNumber = C.CheckId
                                                                   and  isnull(R.MethodOfPayment, '') = isnull(isnull(@MethodOfPayment, R.MethodOfPayment), '')
                                                            inner join VoidGlobalCapitationCheckDetails VCCD
                                                                on R.RecordID = VCCD.PaymentRecordID
                                                            inner join GlobalCapitationRecords CR
                                                                on VCCD.GlobalCapitationRecordID = CR.GlobalCapitationRecordID
                                                                   and  CR.RecordType = isnull(@RecordType, CR.RecordType)
                                                            left outer join CapitationRateDetails CRD
                                                                on CR.CapitationRateDetailID = CRD.CapitationRateDetailID
                                                            inner join EntityAccountMap EAM
                                                                on EAM.AccountID = R.ParentAccountID
                                                                   and  EAM.EntityType = 'VDR'
                                                            inner join Vendors V
                                                                on EAM.EntityID = V.VendorId
                                                                   and  isnull(V.VendorClass, '') = isnull(isnull(@VendorClass, V.VendorClass), '')
                                                                   and  isnull(V.VendorSubclass, '') = isnull(isnull(@VendorSubClass, V.VendorSubclass), '')
                                                     where  C.DateCreated
                                                            between @StartDate
                                                            and     @EndDate
                                                            and isnull(C.CheckNumber, '') = isnull(@CheckNumber, isnull(C.CheckNumber, ''))
                                                            and isnull(C.JobId, -1) = isnull(@JobId, isnull(C.JobId, -1))
                                                            and C.CheckStatus = isnull(@CheckStatus, C.CheckStatus)
                                                            and C.CheckStatus != 'PWV'
                                                     option (recompile)

                                                     select @error = @@error
                                                     if @error != 0
                                                         begin
                                                             select @ProcedureStep = 2
                                                             select @UserMsg = 'Check Register could not be created. Contact System Administrator.'
                                                             select @LogMsg
                                                                 = 'Insert failed for checks that were paid. Error: ' + convert(varchar, @error) + ' occurred.'
                                                             raiserror(
                                                                          65500
                                                                         ,1
                                                                         ,1
                                                                         ,@ProductName
                                                                         ,@ProcedureName
                                                                         ,@ProcedureStep
                                                                         ,@UserMsg
                                                                         ,@LogMsg
                                                                         ,@SessionID
                                                                         ,-1
                                                                         ,@rowcount
                                                                         ,1
                                                                      )
                                                             goto AppErrorExit
                                                         end

                                                     --Voided capitation checks with negative amounts
                                                     insert into    #ResultSet
                                                         (
                                                             RecordID
                                                            ,CheckID
                                                            ,CheckNumber
                                                            ,CheckDate
                                                            ,CheckAmount
                                                            ,CheckVoidReason
                                                            ,CheckStatusCode
                                                            ,ExternalCheckNumber
                                                            ,ExternalCheckCurrency
                                                            ,ExternalCheckAmount
                                                            ,ExternalMethodOfPaymentCode
                                                            ,ExternalCheckDate
                                                            ,CheckClearedDate
                                                            ,ExternalConversionRate
                                                            ,PaymentWizardJobId
                                                            ,ParentAccountID
                                                            ,CashAccountId
                                                            ,RecordStatusCode
                                                            ,RecordTypeCode
                                                            ,EntityTypeCode
                                                            ,CreationDate
                                                            ,ProcessedDate
                                                            ,VoidDate
                                                            ,CheckGroupID
                                                            ,Notes
                                                            ,LastUpdatedAt
                                                            ,LastUpdatedBy
                                                            --extra columns
                                                            ,FinancialRecordID
                                                            ,RecordDetailId
                                                            ,RecordDetailType
                                                            ,ReferenceNumber
                                                            ,DetailPaidAmount
                                                            ,DetailGroupID
                                                            ,DetailCreationDate
                                                            ,PaymentClassCode
                                                            ,AdjustmentVersion
                                                            ,RiskGroupVendorMapID
                                                            ,MethodOfPayment
                                                            ,VoidInsert
                                                            ,RateCoverageType
                                                            ,QualifierId
                                                         )
                                                     select R.RecordID
                                                           ,C.CheckId
                                                           ,C.CheckNumber
                                                           ,C.DateCreated
                                                           ,- (C.Amount)
                                                           ,C.VoidReason
                                                           ,C.CheckStatus
                                                           ,C.ExternalCheckNumber
                                                           ,C.ExternalCheckCurrency
                                                           ,- (C.ExternalCheckAmount)
                                                           ,C.ExternalMethodOfPayment
                                                           ,C.ExternalCheckDate
                                                           ,C.CheckClearedDate
                                                           ,C.ExternalConversionRate
                                                           ,C.JobId
                                                           ,R.ParentAccountID
                                                           ,C.CashAccountId
                                                           ,R.RecordStatus
                                                           ,R.RecordType
                                                           ,R.EntityType
                                                           ,R.CreationDate
                                                           ,R.ProcessedDate
                                                           ,R.VoidDate
                                                           ,R.GroupID
                                                           ,R.Notes
                                                           ,R.LastUpdatedAt
                                                           ,R.LastUpdatedBy
                                                            --new columns
                                                           ,CR.GlobalCapitationRecordID
                                                           ,CR.GlobalCapitationRecordID
                                                           ,CR.RecordType
                                                           ,CR.ReferenceID
                                                           ,- (CR.Amount)
                                                           ,CR.GroupID
                                                           ,CR.PostDate
                                                           ,null
                                                           ,null
                                                           ,null
                                                           ,R.MethodOfPayment
                                                           ,'Y'
                                                           ,CRD.RateCoverageType
                                                           ,CRD.QualifierId
                                                     from   Checks C
                                                            inner join #CashAccounts CA
                                                                on C.CashAccountId = CA.CashAccountId
                                                            inner join Records R
                                                                on R.RecordType = 'PS'
                                                                   and  R.ReferenceNumber = C.CheckId
                                                                   and  isnull(R.MethodOfPayment, '') = isnull(isnull(@MethodOfPayment, R.MethodOfPayment), '')
                                                            inner join VoidGlobalCapitationCheckDetails VCCD
                                                                on R.RecordID = VCCD.PaymentRecordID
                                                            inner join GlobalCapitationRecords CR
                                                                on VCCD.GlobalCapitationRecordID = CR.GlobalCapitationRecordID
                                                                   and  CR.RecordType = isnull(@RecordType, CR.RecordType)
                                                            left outer join CapitationRateDetails CRD
                                                                on CR.CapitationRateDetailID = CRD.CapitationRateDetailID
                                                            inner join EntityAccountMap EAM
                                                                on EAM.AccountID = R.ParentAccountID
                                                                   and  EAM.EntityType = 'VDR'
                                                            inner join Vendors V
                                                                on EAM.EntityID = V.VendorId
                                                                   and  isnull(V.VendorClass, '') = isnull(isnull(@VendorClass, V.VendorClass), '')
                                                                   and  isnull(V.VendorSubclass, '') = isnull(isnull(@VendorSubClass, V.VendorSubclass), '')
                                                     where  C.DateVoided
                                                            between @StartDate
                                                            and     @EndDate
                                                            and isnull(C.CheckNumber, '') = isnull(@CheckNumber, isnull(C.CheckNumber, ''))
                                                            and isnull(C.JobId, -1) = isnull(@JobId, isnull(C.JobId, -1))
                                                            and C.CheckStatus = isnull(@CheckStatus, C.CheckStatus)
                                                            and C.CheckStatus != 'PWV'
                                                     option (recompile)

                                                     select @error = @@error
                                                     if @error != 0
                                                         begin
                                                             select @ProcedureStep = 2
                                                             select @UserMsg = 'Check Register could not be created. Contact System Administrator.'
                                                             select @LogMsg
                                                                 = 'Insert failed for checks that were paid. Error: ' + convert(varchar, @error) + ' occurred.'
                                                             raiserror(
                                                                          65500
                                                                         ,1
                                                                         ,1
                                                                         ,@ProductName
                                                                         ,@ProcedureName
                                                                         ,@ProcedureStep
                                                                         ,@UserMsg
                                                                         ,@LogMsg
                                                                         ,@SessionID
                                                                         ,-1
                                                                         ,@rowcount
                                                                         ,1
                                                                      )
                                                             goto AppErrorExit
                                                         end
                                                 end --- of "if @ShowVoidedChecks = 'Y'"
                                         end -- if isnull(@EntityType,'') = '' or @EntityType ='GCP'

                                 end --end of non-group usage
                         end --end of if EIN is null

                     if @RemoveZeroDollarClaimPayments = 'Y'
                         delete from #ResultSet
                         where  DetailPaidAmount = 0
                 end
        else if @Usage = '|TWODETAILLEVELS|'
                 begin
                     if @EIN is not null
                         begin
                             if exists
                                 (
                                     select 1
                                     from   #Groups
                                 ) --@GroupID is not null or @GroupLOB is not null
                                 begin
                                     insert into    #ResultSet
                                         (
                                             RecordID
                                            ,CheckID
                                            ,CheckNumber
                                            ,CheckDate
                                            ,CheckAmount
                                            ,CheckStatusCode
                                            ,CheckVoidReason
                                            ,ExternalCheckNumber
                                            ,ExternalCheckCurrency
                                            ,ExternalCheckAmount
                                            ,ExternalConversionRate
                                            ,ExternalMethodOfPaymentCode
                                            ,ExternalCheckDate
                                            ,CheckClearedDate
                                            ,PaymentWizardJobId
                                            ,ParentAccountID
                                            ,CashAccountId
                                            ,RecordStatusCode
                                            ,RecordTypeCode
                                            ,EntityTypeCode
                                            ,CreationDate
                                            ,ProcessedDate
                                            ,VoidDate
                                            ,CheckGroupID
                                            ,Notes
                                            ,LastUpdatedAt
                                            ,LastUpdatedBy
                                            --extra columns
                                            ,FinancialRecordID
                                            ,FinancialRecordDetailID
                                            ,RecordDetailId
                                            ,RecordDetailType
                                            ,PaymentClassCode
                                            ,ReferenceNumber
                                            ,DetailPaidAmount
                                            ,DetailGroupID
                                            ,DetailCreationDate
                                            ,AdjustmentVersion
                                            ,RiskGroupVendorMapID
                                            ,LineNumber
                                            ,LinePaidAmount
                                            ,MethodOfPayment
                                            ,WriteOffReasonCode
                                         )
                                     select R.RecordID
                                           ,C.CheckId
                                           ,C.CheckNumber
                                           ,C.DateCreated
                                           ,case when R.RecordType = 'PR' then - (C.Amount)
                                                 else C.Amount
                                            end
                                           ,case when
                                                     (
                                                         @ShowVoidedChecks = 'Y'
                                                         and C.CheckStatus = 'VD'
                                                     ) then 'PRT'
                                                 else C.CheckStatus
                                            end
                                           ,case when
                                                     (
                                                         @ShowVoidedChecks = 'Y'
                                                         and C.CheckStatus = 'VD'
                                                     ) then null
                                                 else C.VoidReason
                                            end
                                           ,C.ExternalCheckNumber
                                           ,C.ExternalCheckCurrency
                                           ,case when R.RecordType = 'PR' then - (C.ExternalCheckAmount)
                                                 else C.ExternalCheckAmount
                                            end
                                           ,C.ExternalConversionRate
                                           ,C.ExternalMethodOfPayment
                                           ,C.ExternalCheckDate
                                           ,C.CheckClearedDate
                                           ,C.JobId
                                           ,R.ParentAccountID
                                           ,C.CashAccountId
                                           ,case when
                                                     (
                                                         @ShowVoidedChecks = 'Y'
                                                         and C.CheckStatus = 'VD'
                                                     ) then 'PRT'
                                                 else R.RecordStatus
                                            end
                                           ,R.RecordType
                                           ,R.EntityType
                                           ,R.CreationDate
                                           ,R.ProcessedDate
                                           ,case when
                                                     (
                                                         @ShowVoidedChecks = 'Y'
                                                         and C.CheckStatus = 'VD'
                                                     ) then null
                                                 else R.VoidDate
                                            end
                                           ,R.GroupID
                                           ,R.Notes
                                           ,R.LastUpdatedAt
                                           ,R.LastUpdatedBy
                                            --new columns
                                           ,R2.RecordID
                                           ,RD2.RecordDetailID
                                           ,RD.ItemID
                                           ,RD.ItemType
                                           ,R2.PaymentClass
                                           ,R2.ReferenceNumber
                                           ,R2.Amount
                                           ,R2.GroupID
                                           ,R2.CreationDate
                                           ,R2.Adjustmentversion
                                           ,R2.RiskGroupVendorMapID
                                           ,RD2.ItemID
                                           ,RD2.TotalAmount
                                           ,R.MethodOfPayment
                                           ,C.WriteOffReason
                                     from   Checks C
                                            inner join Records R
                                                on R.RecordType in ('PS', isnull(@PaymentReceived, ''), isnull(@WriteOff, ''))
                                                   and  R.ReferenceNumber = C.CheckId
                                                   and  C.CashAccountId in
                                                            (
                                                                select  CashAccountId
                                                                from    #CashAccounts
                                                            )
                                                   and  R.EntityType = isnull(@EntityType, R.EntityType)
                                                   and  isnull(R.MethodOfPayment, '') = isnull(isnull(@MethodOfPayment, R.MethodOfPayment), '')
                                            inner join RecordDetails RD
                                                on R.RecordID = RD.RecordID
                                            inner join Records R2
                                                on RD.ItemID = R2.RecordID
                                                   and  R2.RecordType = isnull(@RecordType, R2.RecordType)
                                                   and  isnull(R2.PaymentClass, '') = isnull(@PaymentClass, isnull(R2.PaymentClass, ''))
                                                   and  not (
                                                                @UseProvidersTable = 'Y'
                                                                and R2.ReferenceNumber not in
                                                                        (
                                                                            select  ClaimId
                                                                            from    Claims
                                                                            where   ProviderId in
                                                                                        (
                                                                                            select  ProviderID
                                                                                            from    @Providers
                                                                                        )
                                                                        )
                                                            )
                                            inner join RecordDetails RD2
                                                on R2.RecordID = RD2.RecordID
                                                   and  RD2.ItemType in ('CL', 'IP', 'AIP', 'AIA', 'IF', 'MPD', 'BPR', 'UVP', 'UVW', 'MP')
                                            inner join #Vendors V
                                                on R.ParentAccountID = V.VendorAccountID
                                            --filter the non selected claims out
                                            inner join #Groups G
                                                on R2.GroupID = G.GroupID
                                     where  (
                                                (
                                                    R.RecordType = 'PS'
                                                    and C.DateCreated
                                            between @StartDate
                                            and     @EndDate
                                                )
                                                or
                                                    (
                                                        R.RecordType = 'PR'
                                                        and R.CreationDate
                                            between @StartDate
                                            and     @EndDate
                                                    )
                                                or
                                                    (
                                                        R.RecordType = 'WO'
                                                        and C.DateCreated
                                            between @StartDate
                                            and     @EndDate
                                                    )
                                            )
                                            and isnull(C.CheckNumber, '') = isnull(@CheckNumber, isnull(C.CheckNumber, ''))
                                            and isnull(C.JobId, -1) = isnull(@JobId, isnull(C.JobId, -1))
                                            and C.CheckStatus = isnull(@CheckStatus, C.CheckStatus)
                                            and C.CheckStatus != case when @ShowPaymentWizardVoidedChecks = 'Y' then ''
                                                                      else 'PWV'
                                                                 end
                                     union
                                     select R.RecordID
                                           ,C.CheckId
                                           ,C.CheckNumber
                                           ,C.DateCreated
                                           ,case when R.RecordType = 'PR' then - (C.Amount)
                                                 else C.Amount
                                            end
                                           ,case when
                                                     (
                                                         @ShowVoidedChecks = 'Y'
                                                         and C.CheckStatus = 'VD'
                                                     ) then 'PRT'
                                                 else C.CheckStatus
                                            end
                                           ,case when
                                                     (
                                                         @ShowVoidedChecks = 'Y'
                                                         and C.CheckStatus = 'VD'
                                                     ) then null
                                                 else C.VoidReason
                                            end
                                           ,C.ExternalCheckNumber
                                           ,C.ExternalCheckCurrency
                                           ,case when R.RecordType = 'PR' then - (C.ExternalCheckAmount)
                                                 else C.ExternalCheckAmount
                                            end
                                           ,C.ExternalConversionRate
                                           ,C.ExternalMethodOfPayment
                                           ,C.ExternalCheckDate
                                           ,C.CheckClearedDate
                                           ,C.JobId
                                           ,R.ParentAccountID
                                           ,C.CashAccountId
                                           ,case when
                                                     (
                                                         @ShowVoidedChecks = 'Y'
                                                         and C.CheckStatus = 'VD'
                                                     ) then 'PRT'
                                                 else R.RecordStatus
                                            end
                                           ,R.RecordType
                                           ,R.EntityType
                                           ,R.CreationDate
                                           ,R.ProcessedDate
                                           ,case when
                                                     (
                                                         @ShowVoidedChecks = 'Y'
                                                         and C.CheckStatus = 'VD'
                                                     ) then null
                                                 else R.VoidDate
                                            end
                                           ,R.GroupID
                                           ,R.Notes
                                           ,R.LastUpdatedAt
                                           ,R.LastUpdatedBy
                                            --new columns
                                           ,R2.RecordID
                                           ,null
                                           ,RD.ItemID
                                           ,RD.ItemType
                                           ,R2.PaymentClass
                                           ,R2.ReferenceNumber
                                           ,R2.Amount
                                           ,R2.GroupID
                                           ,R2.CreationDate
                                           ,R2.Adjustmentversion
                                           ,R2.RiskGroupVendorMapID
                                           ,CR.LineNumber
                                           ,0.00
                                           ,R.MethodOfPayment
                                           ,C.WriteOffReason
                                     from   Checks C
                                            inner join Records R
                                                on R.RecordType in ('PS', isnull(@PaymentReceived, ''), isnull(@WriteOff, ''))
                                                   and  R.ReferenceNumber = C.CheckId
                                                   and  C.CashAccountId in
                                                            (
                                                                select  CashAccountId
                                                                from    #CashAccounts
                                                            )
                                                   and  R.EntityType = isnull(@EntityType, R.EntityType)
                                                   and  isnull(R.MethodOfPayment, '') = isnull(isnull(@MethodOfPayment, R.MethodOfPayment), '')
                                            inner join RecordDetails RD
                                                on R.RecordID = RD.RecordID
                                            inner join Records R2
                                                on RD.ItemID = R2.RecordID
                                                   and  R2.RecordType in ('CA', 'INF')
                                                   and  isnull(R2.PaymentClass, '') = isnull(@PaymentClass, isnull(R2.PaymentClass, ''))
                                                   and  not (
                                                                @UseProvidersTable = 'Y'
                                                                and R2.ReferenceNumber not in
                                                                        (
                                                                            select  ClaimId
                                                                            from    Claims
                                                                            where   ProviderId in
                                                                                        (
                                                                                            select  ProviderID
                                                                                            from    @Providers
                                                                                        )
                                                                        )
                                                            )
                                            inner join Claim_Details CD
                                                on R2.ReferenceNumber = CD.ClaimID
                                                   and  R2.Adjustmentversion = CD.AdjustmentVersion
                                                   and  not exists
                                 (
                                     select 1
                                     from   RecordDetails RD2
                                     where  R2.RecordID = RD2.RecordID
                                            and RD2.ItemID = CD.LineNumber
                                 )
                                            inner join Claim_Results CR
                                                on R2.ReferenceNumber = CR.ClaimId
                                                   and  R2.Adjustmentversion = CR.AdjustmentVersion
                                                   and  CD.LineNumber = CR.LineNumber
                                            inner join #Vendors V
                                                on R.ParentAccountID = V.VendorAccountID
                                            --filter the non selected claims out
                                            inner join #Groups G
                                                on R2.GroupID = G.GroupID
                                     where  (
                                                (
                                                    R.RecordType = 'PS'
                                                    and C.DateCreated
                                            between @StartDate
                                            and     @EndDate
                                                )
                                                or
                                                    (
                                                        R.RecordType = 'PR'
                                                        and R.CreationDate
                                            between @StartDate
                                            and     @EndDate
                                                    )
                                                or
                                                    (
                                                        R.RecordType = 'WO'
                                                        and C.DateCreated
                                            between @StartDate
                                            and     @EndDate
                                                    )
                                            )
                                            and isnull(C.CheckNumber, '') = isnull(@CheckNumber, isnull(C.CheckNumber, ''))
                                            and isnull(C.JobId, -1) = isnull(@JobId, isnull(C.JobId, -1))
                                            and C.CheckStatus = isnull(@CheckStatus, C.CheckStatus)
                                            and C.CheckStatus != case when @ShowPaymentWizardVoidedChecks = 'Y' then ''
                                                                      else 'PWV'
                                                                 end
                                     option (recompile)

                                     select @error = @@error

                                     if @error != 0
                                         begin
                                             select @ProcedureStep = 2
                                             select @UserMsg = 'Check Register could not be created. Contact System Administrator.'
                                             select @LogMsg = 'Insert failed for checks that were paid. Error: ' + convert(varchar, @error) + ' occurred.'
                                             raiserror(
                                                          65500
                                                         ,1
                                                         ,1
                                                         ,@ProductName
                                                         ,@ProcedureName
                                                         ,@ProcedureStep
                                                         ,@UserMsg
                                                         ,@LogMsg
                                                         ,@SessionID
                                                         ,-1
                                                         ,@rowcount
                                                         ,1
                                                      )
                                             goto AppErrorExit
                                         end

                                     if @ShowVoidedChecks = 'Y'
                                         begin

                                             insert into    #ResultSet
                                                 (
                                                     RecordID
                                                    ,CheckID
                                                    ,CheckNumber
                                                    ,CheckDate
                                                    ,CheckAmount
                                                    ,CheckVoidReason
                                                    ,CheckStatusCode
                                                    ,ExternalCheckNumber
                                                    ,ExternalCheckCurrency
                                                    ,ExternalCheckAmount
                                                    ,ExternalMethodOfPaymentCode
                                                    ,ExternalCheckDate
                                                    ,CheckClearedDate
                                                    ,ExternalConversionRate
                                                    ,PaymentWizardJobId
                                                    ,ParentAccountID
                                                    ,CashAccountId
                                                    ,RecordStatusCode
                                                    ,RecordTypeCode
                                                    ,EntityTypeCode
                                                    ,CreationDate
                                                    ,ProcessedDate
                                                    ,VoidDate
                                                    ,CheckGroupID
                                                    ,Notes
                                                    ,LastUpdatedAt
                                                    ,LastUpdatedBy
                                                    --extra columns
                                                    ,FinancialRecordID
                                                    ,FinancialRecordDetailID
                                                    ,RecordDetailId
                                                    ,RecordDetailType
                                                    ,ReferenceNumber
                                                    ,DetailPaidAmount
                                                    ,DetailGroupID
                                                    ,DetailCreationDate
                                                    ,PaymentClassCode
                                                    ,AdjustmentVersion
                                                    ,RiskGroupVendorMapID
                                                    ,LineNumber
                                                    ,LinePaidAmount
                                                    ,MethodOfPayment
                                                    ,VoidInsert
                                                    ,WriteOffReasonCode
                                                 )
                                             select R.RecordID
                                                   ,C.CheckId
                                                   ,C.CheckNumber
                                                   ,C.DateCreated
                                                   ,- (C.Amount)
                                                   ,C.VoidReason
                                                   ,C.CheckStatus
                                                   ,C.ExternalCheckNumber
                                                   ,C.ExternalCheckCurrency
                                                   ,- (C.ExternalCheckAmount)
                                                   ,C.ExternalMethodOfPayment
                                                   ,C.ExternalCheckDate
                                                   ,C.CheckClearedDate
                                                   ,C.ExternalConversionRate
                                                   ,C.JobId
                                                   ,R.ParentAccountID
                                                   ,C.CashAccountId
                                                   ,R.RecordStatus
                                                   ,R.RecordType
                                                   ,R.EntityType
                                                   ,R.CreationDate
                                                   ,R.ProcessedDate
                                                   ,R.VoidDate
                                                   ,R.GroupID
                                                   ,R.Notes
                                                   ,R.LastUpdatedAt
                                                   ,R.LastUpdatedBy
                                                    --new columns
                                                   ,R2.RecordID
                                                   ,RD2.RecordDetailID
                                                   ,RD.ItemID
                                                   ,RD.ItemType
                                                   ,R2.ReferenceNumber
                                                   ,- (R2.Amount)
                                                   ,R2.GroupID
                                                   ,R2.CreationDate
                                                   ,R2.PaymentClass
                                                   ,R2.Adjustmentversion
                                                   ,R2.RiskGroupVendorMapID
                                                   ,RD2.ItemID
                                                   ,- (RD2.TotalAmount)
                                                   ,R.MethodOfPayment
                                                   ,'Y'
                                                   ,C.WriteOffReason
                                             from   Checks C
                                                    inner join Records R
                                                        on R.RecordType in ('PS', isnull(@PaymentReceived, ''), isnull(@WriteOff, ''))
                                                           and  R.ReferenceNumber = C.CheckId
                                                           and  C.CashAccountId in
                                                                    (
                                                                        select  CashAccountId
                                                                        from    #CashAccounts
                                                                    )
                                                           and  R.EntityType = isnull(@EntityType, R.EntityType)
                                                           and  isnull(R.MethodOfPayment, '') = isnull(isnull(@MethodOfPayment, R.MethodOfPayment), '')
                                                    inner join RecordDetails RD
                                                        on R.RecordID = RD.RecordID
                                                    inner join Records R2
                                                        on RD.ItemID = R2.RecordID
                                                           and  R2.RecordType = isnull(@RecordType, R2.RecordType)
                                                           and  isnull(R2.PaymentClass, '') = isnull(@PaymentClass, isnull(R2.PaymentClass, ''))
                                                           and  not (
                                                                        @UseProvidersTable = 'Y'
                                                                        and R2.ReferenceNumber not in
                                                                                (
                                                                                    select  ClaimId
                                                                                    from    Claims
                                                                                    where   ProviderId in
                                                                                                (
                                                                                                    select  ProviderID
                                                                                                    from    @Providers
                                                                                                )
                                                                                )
                                                                    )
                                                    inner join RecordDetails RD2
                                                        on R2.RecordID = RD2.RecordID
                                                           and  RD2.ItemType in ('CL', 'IP', 'AIP', 'AIA', 'IF', 'MPD', 'BPR', 'UVP', 'UVW', 'MP')
                                                    inner join #Vendors V
                                                        on R.ParentAccountID = V.VendorAccountID
                                                    --filter the non selected claims out
                                                    inner join #Groups G
                                                        on R2.GroupID = G.GroupID
                                             where  C.DateVoided
                                                    between @StartDate
                                                    and     @EndDate
                                                    and isnull(C.CheckNumber, '') = isnull(@CheckNumber, isnull(C.CheckNumber, ''))
                                                    and isnull(C.JobId, -1) = isnull(@JobId, isnull(C.JobId, -1))
                                                    and C.CheckStatus = isnull(@CheckStatus, C.CheckStatus)
                                                    and C.CheckStatus != 'PWV'
                                             union
                                             select R.RecordID
                                                   ,C.CheckId
                                                   ,C.CheckNumber
                                                   ,C.DateCreated
                                                   ,- (C.Amount)
                                                   ,C.VoidReason
                                                   ,C.CheckStatus
                                                   ,C.ExternalCheckNumber
                                                   ,C.ExternalCheckCurrency
                                                   ,- (C.ExternalCheckAmount)
                                                   ,C.ExternalMethodOfPayment
                                                   ,C.ExternalCheckDate
                                                   ,C.CheckClearedDate
                                                   ,C.ExternalConversionRate
                                                   ,C.JobId
                                                   ,R.ParentAccountID
                                                   ,C.CashAccountId
                                                   ,R.RecordStatus
                                                   ,R.RecordType
                                                   ,R.EntityType
                                                   ,R.CreationDate
                                                   ,R.ProcessedDate
                                                   ,R.VoidDate
                                                   ,R.GroupID
                                                   ,R.Notes
                                                   ,R.LastUpdatedAt
                                                   ,R.LastUpdatedBy
                                                    --new columns
                                                   ,R2.RecordID
                                                   ,null
                                                   ,RD.ItemID
                                                   ,RD.ItemType
                                                   ,R2.ReferenceNumber
                                                   ,- (R2.Amount)
                                                   ,R2.GroupID
                                                   ,R2.CreationDate
                                                   ,R2.PaymentClass
                                                   ,R2.Adjustmentversion
                                                   ,R2.RiskGroupVendorMapID
                                                   ,CR.LineNumber
                                                   ,0.00
                                                   ,R.MethodOfPayment
                                                   ,'Y'
                                                   ,C.WriteOffReason
                                             from   Checks C
                                                    inner join Records R
                                                        on R.RecordType in ('PS', isnull(@PaymentReceived, ''), isnull(@WriteOff, ''))
                                                           and  R.ReferenceNumber = C.CheckId
                                                           and  C.CashAccountId in
                                                                    (
                                                                        select  CashAccountId
                                                                        from    #CashAccounts
                                                                    )
                                                           and  R.EntityType = isnull(@EntityType, R.EntityType)
                                                           and  isnull(R.MethodOfPayment, '') = isnull(isnull(@MethodOfPayment, R.MethodOfPayment), '')
                                                    inner join RecordDetails RD
                                                        on R.RecordID = RD.RecordID
                                                    inner join Records R2
                                                        on RD.ItemID = R2.RecordID
                                                           and  R2.RecordType in ('CA', 'INF')
                                                           and  isnull(R2.PaymentClass, '') = isnull(@PaymentClass, isnull(R2.PaymentClass, ''))
                                                           and  not (
                                                                        @UseProvidersTable = 'Y'
                                                                        and R2.ReferenceNumber not in
                                                                                (
                                                                                    select  ClaimId
                                                                                    from    Claims
                                                                                    where   ProviderId in
                                                                                                (
                                                                                                    select  ProviderID
                                                                                                    from    @Providers
                                                                                                )
                                                                                )
                                                                    )
                                                    inner join Claim_Details CD
                                                        on R2.ReferenceNumber = CD.ClaimID
                                                           and  R2.Adjustmentversion = CD.AdjustmentVersion
                                                           and  not exists
                                         (
                                             select 1
                                             from   RecordDetails RD2
                                             where  R2.RecordID = RD2.RecordID
                                                    and RD2.ItemID = CD.LineNumber
                                         )
                                                    inner join Claim_Results CR
                                                        on R2.ReferenceNumber = CR.ClaimId
                                                           and  R2.Adjustmentversion = CR.AdjustmentVersion
                                                           and  CD.LineNumber = CR.LineNumber
                                                    inner join #Vendors V
                                                        on R.ParentAccountID = V.VendorAccountID
                                                    --filter the non selected claims out
                                                    inner join #Groups G
                                                        on R2.GroupID = G.GroupID
                                             where  C.DateVoided
                                                    between @StartDate
                                                    and     @EndDate
                                                    and isnull(C.CheckNumber, '') = isnull(@CheckNumber, isnull(C.CheckNumber, ''))
                                                    and isnull(C.JobId, -1) = isnull(@JobId, isnull(C.JobId, -1))
                                                    and C.CheckStatus = isnull(@CheckStatus, C.CheckStatus)
                                                    and (C.CheckStatus != 'PWV')
                                             option (recompile)

                                             select @error = @@error
                                             if @error != 0
                                                 begin
                                                     select @ProcedureStep = 2
                                                     select @UserMsg = 'Check Register could not be created. Contact System Administrator.'
                                                     select @LogMsg
                                                         = 'Insert failed for checks that were paid. Error: ' + convert(varchar, @error) + ' occurred.'
                                                     raiserror(
                                                                  65500
                                                                 ,1
                                                                 ,1
                                                                 ,@ProductName
                                                                 ,@ProcedureName
                                                                 ,@ProcedureStep
                                                                 ,@UserMsg
                                                                 ,@LogMsg
                                                                 ,@SessionID
                                                                 ,-1
                                                                 ,@rowcount
                                                                 ,1
                                                              )
                                                     goto AppErrorExit
                                                 end
                                         end --- of "if @ShowVoidedChecks = 'Y'"
                                     else
                                         begin
                                             delete from #ResultSet
                                             where  RecordStatusCode = 'V'
                                         end

                                     if isnull(@EntityType, '') = ''
                                        or  @EntityType = 'CPT' --Capitation (2DL, @EIN is not null & @GroupID is not null)
                                         begin
                                             insert into    #ResultSet
                                                 (
                                                     RecordID
                                                    ,CheckID
                                                    ,CheckNumber
                                                    ,CheckDate
                                                    ,CheckAmount
                                                    ,CheckStatusCode
                                                    ,CheckVoidReason
                                                    ,ExternalCheckNumber
                                                    ,ExternalCheckCurrency
                                                    ,ExternalCheckAmount
                                                    ,ExternalConversionRate
                                                    ,ExternalMethodOfPaymentCode
                                                    ,ExternalCheckDate
                                                    ,CheckClearedDate
                                                    ,PaymentWizardJobId
                                                    ,ParentAccountID
                                                    ,CashAccountId
                                                    ,RecordStatusCode
                                                    ,RecordTypeCode
                                                    ,EntityTypeCode
                                                    ,CreationDate
                                                    ,ProcessedDate
                                                    ,VoidDate
                                                    ,CheckGroupID
                                                    ,Notes
                                                    ,LastUpdatedAt
                                                    ,LastUpdatedBy
                                                    --extra columns
                                                    ,FinancialRecordID
                                                    ,FinancialRecordDetailID
                                                    ,RecordDetailId
                                                    ,RecordDetailType
                                                    ,PaymentClassCode
                                                    ,ReferenceNumber
                                                    ,DetailPaidAmount
                                                    ,DetailGroupID
                                                    ,DetailCreationDate
                                                    ,AdjustmentVersion
                                                    ,RiskGroupVendorMapID
                                                    ,LineNumber
                                                    ,LinePaidAmount
                                                    ,MethodOfPayment
                                                    ,RateCoverageType
                                                    ,QualifierId
                                                 )
                                             select R.RecordID
                                                   ,C.CheckId
                                                   ,C.CheckNumber
                                                   ,C.DateCreated
                                                   ,C.Amount
                                                   ,C.CheckStatus
                                                   ,C.VoidReason
                                                   ,C.ExternalCheckNumber
                                                   ,C.ExternalCheckCurrency
                                                   ,C.ExternalCheckAmount
                                                   ,C.ExternalConversionRate
                                                   ,C.ExternalMethodOfPayment
                                                   ,C.ExternalCheckDate
                                                   ,C.CheckClearedDate
                                                   ,C.JobId
                                                   ,R.ParentAccountID
                                                   ,C.CashAccountId
                                                   ,R.RecordStatus
                                                   ,R.RecordType
                                                   ,R.EntityType
                                                   ,R.CreationDate
                                                   ,R.ProcessedDate
                                                   ,R.VoidDate
                                                   ,R.GroupID
                                                   ,R.Notes
                                                   ,R.LastUpdatedAt
                                                   ,R.LastUpdatedBy
                                                    --new columns
                                                   ,CR.CapitationRecordID
                                                   ,CR.CapitationRecordID
                                                   ,CR.CapitationRecordID
                                                   ,CR.RecordType
                                                   ,null
                                                   ,CR.ReferenceID
                                                   ,CR.Amount
                                                   ,CR.GroupID
                                                   ,CR.PostDate
                                                   ,null
                                                   ,CR.RiskGroupVendorMapID
                                                   ,isnull(CR.CapitationRateDetailID, CR.TermedRecordID)
                                                   ,CR.Amount
                                                   ,R.MethodOfPayment
                                                   ,CRD.RateCoverageType
                                                   ,CRD.QualifierId
                                             from   Checks C
                                                    inner join #CashAccounts CA
                                                        on C.CashAccountId = CA.CashAccountId
                                                    inner join Records R
                                                        on R.RecordType = 'PS'
                                                           and  R.ReferenceNumber = C.CheckId
                                                           and  isnull(R.MethodOfPayment, '') = isnull(isnull(@MethodOfPayment, R.MethodOfPayment), '')
                                                    inner join CapitationRecords CR
                                                        on R.RecordID = CR.PaymentRecordID
                                                           and  CR.RecordType = isnull(@RecordType, CR.RecordType)
                                                    left outer join CapitationRateDetails CRD
                                                        on CR.CapitationRateDetailID = CRD.CapitationRateDetailID
                                                    inner join #Vendors V
                                                        on R.ParentAccountID = V.VendorAccountID
                                                    --filter the non selected claims out
                                                    inner join #Groups G
                                                        on CR.GroupID = G.GroupID
                                             where  C.DateCreated
                                                    between @StartDate
                                                    and     @EndDate
                                                    and isnull(C.CheckNumber, '') = isnull(@CheckNumber, isnull(C.CheckNumber, ''))
                                                    and isnull(C.JobId, -1) = isnull(@JobId, isnull(C.JobId, -1))
                                                    and C.CheckStatus = isnull(@CheckStatus, C.CheckStatus)
                                                    and C.CheckStatus != case when @ShowPaymentWizardVoidedChecks = 'Y' then ''
                                                                              else 'PWV'
                                                                         end
                                             option (recompile)

                                             select @error = @@error
                                             if @error != 0
                                                 begin
                                                     select @ProcedureStep = 2
                                                     select @UserMsg = 'Check Register could not be created. Contact System Administrator.'
                                                     select @LogMsg
                                                         = 'Insert failed for checks that were paid. Error: ' + convert(varchar, @error) + ' occurred.'
                                                     raiserror(
                                                                  65500
                                                                 ,1
                                                                 ,1
                                                                 ,@ProductName
                                                                 ,@ProcedureName
                                                                 ,@ProcedureStep
                                                                 ,@UserMsg
                                                                 ,@LogMsg
                                                                 ,@SessionID
                                                                 ,-1
                                                                 ,@rowcount
                                                                 ,1
                                                              )
                                                     goto AppErrorExit
                                                 end

                                             if @ShowVoidedChecks = 'Y'
                                                 begin
                                                     --Voided capitation checks
                                                     insert into    #ResultSet
                                                         (
                                                             RecordID
                                                            ,CheckID
                                                            ,CheckNumber
                                                            ,CheckDate
                                                            ,CheckAmount
                                                            ,CheckStatusCode
                                                            ,CheckVoidReason
                                                            ,ExternalCheckNumber
                                                            ,ExternalCheckCurrency
                                                            ,ExternalCheckAmount
                                                            ,ExternalConversionRate
                                                            ,ExternalMethodOfPaymentCode
                                                            ,ExternalCheckDate
                                                            ,CheckClearedDate
                                                            ,PaymentWizardJobId
                                                            ,ParentAccountID
                                                            ,CashAccountId
                                                            ,RecordStatusCode
                                                            ,RecordTypeCode
                                                            ,EntityTypeCode
                                                            ,CreationDate
                                                            ,ProcessedDate
                                                            ,VoidDate
                                                            ,CheckGroupID
                                                            ,Notes
                                                            ,LastUpdatedAt
                                                            ,LastUpdatedBy
                                                            --extra columns
                                                            ,FinancialRecordID
                                                            ,FinancialRecordDetailID
                                                            ,RecordDetailId
                                                            ,RecordDetailType
                                                            ,PaymentClassCode
                                                            ,ReferenceNumber
                                                            ,DetailPaidAmount
                                                            ,DetailGroupID
                                                            ,DetailCreationDate
                                                            ,AdjustmentVersion
                                                            ,RiskGroupVendorMapID
                                                            ,LineNumber
                                                            ,LinePaidAmount
                                                            ,MethodOfPayment
                                                            ,RateCoverageType
                                                            ,QualifierId
                                                         )
                                                     select R.RecordID
                                                           ,C.CheckId
                                                           ,C.CheckNumber
                                                           ,C.DateCreated
                                                           ,C.Amount
                                                           ,C.CheckStatus
                                                           ,C.VoidReason
                                                           ,C.ExternalCheckNumber
                                                           ,C.ExternalCheckCurrency
                                                           ,C.ExternalCheckAmount
                                                           ,C.ExternalConversionRate
                                                           ,C.ExternalMethodOfPayment
                                                           ,C.ExternalCheckDate
                                                           ,C.CheckClearedDate
                                                           ,C.JobId
                                                           ,R.ParentAccountID
                                                           ,C.CashAccountId
                                                           ,R.RecordStatus
                                                           ,R.RecordType
                                                           ,R.EntityType
                                                           ,R.CreationDate
                                                           ,R.ProcessedDate
                                                           ,R.VoidDate
                                                           ,R.GroupID
                                                           ,R.Notes
                                                           ,R.LastUpdatedAt
                                                           ,R.LastUpdatedBy
                                                            --new columns
                                                           ,CR.CapitationRecordID
                                                           ,CR.CapitationRecordID
                                                           ,CR.CapitationRecordID
                                                           ,CR.RecordType
                                                           ,null
                                                           ,CR.ReferenceID
                                                           ,CR.Amount
                                                           ,CR.GroupID
                                                           ,CR.PostDate
                                                           ,null
                                                           ,CR.RiskGroupVendorMapID
                                                           ,isnull(CR.CapitationRateDetailID, CR.TermedRecordID)
                                                           ,CR.Amount
                                                           ,R.MethodOfPayment
                                                           ,CRD.RateCoverageType
                                                           ,CRD.QualifierId
                                                     from   Checks C
                                                            inner join #CashAccounts CA
                                                                on C.CashAccountId = CA.CashAccountId
                                                            inner join Records R
                                                                on R.RecordType = 'PS'
                                                                   and  R.ReferenceNumber = C.CheckId
                                                                   and  isnull(R.MethodOfPayment, '') = isnull(isnull(@MethodOfPayment, R.MethodOfPayment), '')
                                                            inner join VoidCapitationCheckDetails VCCD
                                                                on R.RecordID = VCCD.PaymentRecordID
                                                            inner join CapitationRecords CR
                                                                on VCCD.PaymentRecordID = CR.PaymentRecordID
                                                                   and  CR.RecordType = isnull(@RecordType, CR.RecordType)
                                                            left outer join CapitationRateDetails CRD
                                                                on CR.CapitationRateDetailID = CRD.CapitationRateDetailID
                                                            inner join #Vendors V
                                                                on R.ParentAccountID = V.VendorAccountID
                                                            --filter the non selected claims out
                                                            inner join #Groups G
                                                                on CR.GroupID = G.GroupID
                                                     where  C.DateCreated
                                                            between @StartDate
                                                            and     @EndDate
                                                            and isnull(C.CheckNumber, '') = isnull(@CheckNumber, isnull(C.CheckNumber, ''))
                                                            and isnull(C.JobId, -1) = isnull(@JobId, isnull(C.JobId, -1))
                                                            and C.CheckStatus = isnull(@CheckStatus, C.CheckStatus)
                                                            and C.CheckStatus != 'PWV'
                                                     option (recompile)

                                                     select @error = @@error

                                                     if @error != 0
                                                         begin
                                                             select @ProcedureStep = 2
                                                             select @UserMsg = 'Check Register could not be created. Contact System Administrator.'
                                                             select @LogMsg
                                                                 = 'Insert failed for checks that were paid. Error: ' + convert(varchar, @error) + ' occurred.'
                                                             raiserror(
                                                                          65500
                                                                         ,1
                                                                         ,1
                                                                         ,@ProductName
                                                                         ,@ProcedureName
                                                                         ,@ProcedureStep
                                                                         ,@UserMsg
                                                                         ,@LogMsg
                                                                         ,@SessionID
                                                                         ,-1
                                                                         ,@rowcount
                                                                         ,1
                                                                      )
                                                             goto AppErrorExit
                                                         end

                                                     --Voided capitation checks with negative amounts
                                                     insert into    #ResultSet
                                                         (
                                                             RecordID
                                                            ,CheckID
                                                            ,CheckNumber
                                                            ,CheckDate
                                                            ,CheckAmount
                                                            ,CheckVoidReason
                                                            ,CheckStatusCode
                                                            ,ExternalCheckNumber
                                                            ,ExternalCheckCurrency
                                                            ,ExternalCheckAmount
                                                            ,ExternalMethodOfPaymentCode
                                                            ,ExternalCheckDate
                                                            ,CheckClearedDate
                                                            ,ExternalConversionRate
                                                            ,PaymentWizardJobId
                                                            ,ParentAccountID
                                                            ,CashAccountId
                                                            ,RecordStatusCode
                                                            ,RecordTypeCode
                                                            ,EntityTypeCode
                                                            ,CreationDate
                                                            ,ProcessedDate
                                                            ,VoidDate
                                                            ,CheckGroupID
                                                            ,Notes
                                                            ,LastUpdatedAt
                                                            ,LastUpdatedBy
                                                            --extra columns
                                                            ,FinancialRecordID
                                                            ,FinancialRecordDetailID
                                                            ,RecordDetailId
                                                            ,RecordDetailType
                                                            ,ReferenceNumber
                                                            ,DetailPaidAmount
                                                            ,DetailGroupID
                                                            ,DetailCreationDate
                                                            ,PaymentClassCode
                                                            ,AdjustmentVersion
                                                            ,RiskGroupVendorMapID
                                                            ,LineNumber
                                                            ,LinePaidAmount
                                                            ,MethodOfPayment
                                                            ,VoidInsert
                                                            ,RateCoverageType
                                                            ,QualifierId
                                                         )
                                                     select R.RecordID
                                                           ,C.CheckId
                                                           ,C.CheckNumber
                                                           ,C.DateCreated
                                                           ,- (C.Amount)
                                                           ,C.VoidReason
                                                           ,C.CheckStatus
                                                           ,C.ExternalCheckNumber
                                                           ,C.ExternalCheckCurrency
                                                           ,- (C.ExternalCheckAmount)
                                                           ,C.ExternalMethodOfPayment
                                                           ,C.ExternalCheckDate
                                                           ,C.CheckClearedDate
                                                           ,C.ExternalConversionRate
                                                           ,C.JobId
                                                           ,R.ParentAccountID
                                                           ,C.CashAccountId
                                                           ,R.RecordStatus
                                                           ,R.RecordType
                                                           ,R.EntityType
                                                           ,R.CreationDate
                                                           ,R.ProcessedDate
                                                           ,R.VoidDate
                                                           ,R.GroupID
                                                           ,R.Notes
                                                           ,R.LastUpdatedAt
                                                           ,R.LastUpdatedBy
                                                            --new columns
                                                           ,CR.CapitationRecordID
                                                           ,CR.CapitationRecordID
                                                           ,CR.CapitationRecordID
                                                           ,CR.RecordType
                                                           ,CR.ReferenceID
                                                           ,- (CR.Amount)
                                                           ,CR.GroupID
                                                           ,CR.PostDate
                                                           ,null
                                                           ,null
                                                           ,CR.RiskGroupVendorMapID
                                                           ,isnull(CR.CapitationRateDetailID, CR.TermedRecordID)
                                                           ,- (CR.Amount)
                                                           ,R.MethodOfPayment
                                                           ,'Y'
                                                           ,CRD.RateCoverageType
                                                           ,CRD.QualifierId
                                                     from   Checks C
                                                            inner join #CashAccounts CA
                                                                on C.CashAccountId = CA.CashAccountId
                                                            inner join Records R
                                                                on R.RecordType = 'PS'
                                                                   and  R.ReferenceNumber = C.CheckId
                                                                   and  isnull(R.MethodOfPayment, '') = isnull(isnull(@MethodOfPayment, R.MethodOfPayment), '')
                                                            inner join VoidCapitationCheckDetails VCCD
                                                                on R.RecordID = VCCD.PaymentRecordID
                                                            inner join CapitationRecords CR
                                                                on VCCD.PaymentRecordID = CR.PaymentRecordID
                                                                   and  CR.RecordType = isnull(@RecordType, CR.RecordType)
                                                            left outer join CapitationRateDetails CRD
                                                                on CR.CapitationRateDetailID = CRD.CapitationRateDetailID
                                                            inner join #Vendors V
                                                                on R.ParentAccountID = V.VendorAccountID
                                                            --filter the non selected claims out
                                                            inner join #Groups G
                                                                on CR.GroupID = G.GroupID
                                                     where  C.DateVoided
                                                            between @StartDate
                                                            and     @EndDate
                                                            and isnull(C.CheckNumber, '') = isnull(@CheckNumber, isnull(C.CheckNumber, ''))
                                                            and isnull(C.JobId, -1) = isnull(@JobId, isnull(C.JobId, -1))
                                                            and C.CheckStatus = isnull(@CheckStatus, C.CheckStatus)
                                                            and C.CheckStatus != 'PWV'
                                                     option (recompile)

                                                     select @error = @@error
                                                     if @error != 0
                                                         begin
                                                             select @ProcedureStep = 2
                                                             select @UserMsg = 'Check Register could not be created. Contact System Administrator.'
                                                             select @LogMsg
                                                                 = 'Insert failed for checks that were paid. Error: ' + convert(varchar, @error) + ' occurred.'
                                                             raiserror(
                                                                          65500
                                                                         ,1
                                                                         ,1
                                                                         ,@ProductName
                                                                         ,@ProcedureName
                                                                         ,@ProcedureStep
                                                                         ,@UserMsg
                                                                         ,@LogMsg
                                                                         ,@SessionID
                                                                         ,-1
                                                                         ,@rowcount
                                                                         ,1
                                                                      )
                                                             goto AppErrorExit
                                                         end
                                                 end --- of "if @ShowVoidedChecks = 'Y'"
                                         end -- if isnull(@EntityType,'') = '' or @EntityType ='CPT' --Capitation

                                     if (
                                            isnull(@EntityType, '') = ''
                                            or  @EntityType = 'GCP'
                                        ) -- 2DL, @EIN is not null & @GroupID is not null 
                                         begin
                                             insert into    #ResultSet
                                                 (
                                                     RecordID
                                                    ,CheckID
                                                    ,CheckNumber
                                                    ,CheckDate
                                                    ,CheckAmount
                                                    ,CheckStatusCode
                                                    ,CheckVoidReason
                                                    ,ExternalCheckNumber
                                                    ,ExternalCheckCurrency
                                                    ,ExternalCheckAmount
                                                    ,ExternalConversionRate
                                                    ,ExternalMethodOfPaymentCode
                                                    ,ExternalCheckDate
                                                    ,CheckClearedDate
                                                    ,PaymentWizardJobId
                                                    ,ParentAccountID
                                                    ,CashAccountId
                                                    ,RecordStatusCode
                                                    ,RecordTypeCode
                                                    ,EntityTypeCode
                                                    ,CreationDate
                                                    ,ProcessedDate
                                                    ,VoidDate
                                                    ,CheckGroupID
                                                    ,Notes
                                                    ,LastUpdatedAt
                                                    ,LastUpdatedBy
                                                    --extra columns
                                                    ,FinancialRecordID
                                                    ,FinancialRecordDetailID
                                                    ,RecordDetailId
                                                    ,RecordDetailType
                                                    ,PaymentClassCode
                                                    ,ReferenceNumber
                                                    ,DetailPaidAmount
                                                    ,DetailGroupID
                                                    ,DetailCreationDate
                                                    ,AdjustmentVersion
                                                    ,RiskGroupVendorMapID
                                                    ,LineNumber
                                                    ,LinePaidAmount
                                                    ,MethodOfPayment
                                                    ,RateCoverageType
                                                    ,QualifierId
                                                 )
                                             select R.RecordID
                                                   ,C.CheckId
                                                   ,C.CheckNumber
                                                   ,C.DateCreated
                                                   ,C.Amount
                                                   ,C.CheckStatus
                                                   ,C.VoidReason
                                                   ,C.ExternalCheckNumber
                                                   ,C.ExternalCheckCurrency
                                                   ,C.ExternalCheckAmount
                                                   ,C.ExternalConversionRate
                                                   ,C.ExternalMethodOfPayment
                                                   ,C.ExternalCheckDate
                                                   ,C.CheckClearedDate
                                                   ,C.JobId
                                                   ,R.ParentAccountID
                                                   ,C.CashAccountId
                                                   ,R.RecordStatus
                                                   ,R.RecordType
                                                   ,R.EntityType
                                                   ,R.CreationDate
                                                   ,R.ProcessedDate
                                                   ,R.VoidDate
                                                   ,R.GroupID
                                                   ,R.Notes
                                                   ,R.LastUpdatedAt
                                                   ,R.LastUpdatedBy
                                                            --new columns
                                                   ,CR.GlobalCapitationRecordID
                                                   ,CR.GlobalCapitationRecordID
                                                   ,CR.GlobalCapitationRecordID
                                                   ,CR.RecordType
                                                   ,null
                                                   ,CR.ReferenceID
                                                   ,CR.Amount
                                                   ,CR.GroupID
                                                   ,CR.PostDate
                                                   ,null
                                                   ,null    -- CR.RiskGroupVendorMapID,
                                                   ,isnull(CR.CapitationRateDetailID, CR.TermedRecordID)
                                                   ,CR.Amount
                                                   ,R.MethodOfPayment
                                                   ,CRD.RateCoverageType
                                                   ,CRD.QualifierId
                                             from   Checks C
                                                    inner join #CashAccounts CA
                                                        on C.CashAccountId = CA.CashAccountId
                                                    inner join Records R
                                                        on R.RecordType = 'PS'
                                                           and  R.ReferenceNumber = C.CheckId
                                                           and  isnull(R.MethodOfPayment, '') = isnull(isnull(@MethodOfPayment, R.MethodOfPayment), '')
                                                    inner join GlobalCapitationRecords CR
                                                        on R.RecordID = CR.PaymentRecordID
                                                           and  CR.RecordType = isnull(@RecordType, CR.RecordType)
                                                    left outer join CapitationRateDetails CRD
                                                        on CR.CapitationRateDetailID = CRD.CapitationRateDetailID
                                                    inner join #Vendors V
                                                        on R.ParentAccountID = V.VendorAccountID
                                                    --filter the non selected claims out
                                                    inner join #Groups G
                                                        on CR.GroupID = G.GroupID
                                             where  C.DateCreated
                                                    between @StartDate
                                                    and     @EndDate
                                                    and isnull(C.CheckNumber, '') = isnull(@CheckNumber, isnull(C.CheckNumber, ''))
                                                    and isnull(C.JobId, -1) = isnull(@JobId, isnull(C.JobId, -1))
                                                    and C.CheckStatus = isnull(@CheckStatus, C.CheckStatus)
                                                    and C.CheckStatus != case when @ShowPaymentWizardVoidedChecks = 'Y' then ''
                                                                              else 'PWV'
                                                                         end
                                             option (recompile)

                                             select @error = @@error
                                             if @error != 0
                                                 begin
                                                     select @ProcedureStep = 2
                                                     select @UserMsg = 'Check Register could not be created. Contact System Administrator.'
                                                     select @LogMsg
                                                         = 'Insert failed for checks that were paid. Error: ' + convert(varchar, @error) + ' occurred.'
                                                     raiserror(
                                                                  65500
                                                                 ,1
                                                                 ,1
                                                                 ,@ProductName
                                                                 ,@ProcedureName
                                                                 ,@ProcedureStep
                                                                 ,@UserMsg
                                                                 ,@LogMsg
                                                                 ,@SessionID
                                                                 ,-1
                                                                 ,@rowcount
                                                                 ,1
                                                              )
                                                     goto AppErrorExit
                                                 end

                                             if @ShowVoidedChecks = 'Y'
                                                 begin
                                                     --Voided capitation checks
                                                     insert into    #ResultSet
                                                         (
                                                             RecordID
                                                            ,CheckID
                                                            ,CheckNumber
                                                            ,CheckDate
                                                            ,CheckAmount
                                                            ,CheckStatusCode
                                                            ,CheckVoidReason
                                                            ,ExternalCheckNumber
                                                            ,ExternalCheckCurrency
                                                            ,ExternalCheckAmount
                                                            ,ExternalConversionRate
                                                            ,ExternalMethodOfPaymentCode
                                                            ,ExternalCheckDate
                                                            ,CheckClearedDate
                                                            ,PaymentWizardJobId
                                                            ,ParentAccountID
                                                            ,CashAccountId
                                                            ,RecordStatusCode
                                                            ,RecordTypeCode
                                                            ,EntityTypeCode
                                                            ,CreationDate
                                                            ,ProcessedDate
                                                            ,VoidDate
                                                            ,CheckGroupID
                                                            ,Notes
                                                            ,LastUpdatedAt
                                                            ,LastUpdatedBy
                                                            --extra columns
                                                            ,FinancialRecordID
                                                            ,FinancialRecordDetailID
                                                            ,RecordDetailId
                                                            ,RecordDetailType
                                                            ,PaymentClassCode
                                                            ,ReferenceNumber
                                                            ,DetailPaidAmount
                                                            ,DetailGroupID
                                                            ,DetailCreationDate
                                                            ,AdjustmentVersion
                                                            ,RiskGroupVendorMapID
                                                            ,LineNumber
                                                            ,LinePaidAmount
                                                            ,MethodOfPayment
                                                            ,RateCoverageType
                                                            ,QualifierId
                                                         )
                                                     select R.RecordID
                                                           ,C.CheckId
                                                           ,C.CheckNumber
                                                           ,C.DateCreated
                                                           ,C.Amount
                                                           ,C.CheckStatus
                                                           ,C.VoidReason
                                                           ,C.ExternalCheckNumber
                                                           ,C.ExternalCheckCurrency
                                                           ,C.ExternalCheckAmount
                                                           ,C.ExternalConversionRate
                                                           ,C.ExternalMethodOfPayment
                                                           ,C.ExternalCheckDate
                                                           ,C.CheckClearedDate
                                                           ,C.JobId
                                                           ,R.ParentAccountID
                                                           ,C.CashAccountId
                                                           ,R.RecordStatus
                                                           ,R.RecordType
                                                           ,R.EntityType
                                                           ,R.CreationDate
                                                           ,R.ProcessedDate
                                                           ,R.VoidDate
                                                           ,R.GroupID
                                                           ,R.Notes
                                                           ,R.LastUpdatedAt
                                                           ,R.LastUpdatedBy
                                                                    --new columns
                                                           ,CR.GlobalCapitationRecordID
                                                           ,CR.GlobalCapitationRecordID
                                                           ,CR.GlobalCapitationRecordID
                                                           ,CR.RecordType
                                                           ,null
                                                           ,CR.ReferenceID
                                                           ,CR.Amount
                                                           ,CR.GroupID
                                                           ,CR.PostDate
                                                           ,null
                                                           ,null    -- CR.RiskGroupVendorMapID,
                                                           ,isnull(CR.CapitationRateDetailID, CR.TermedRecordID)
                                                           ,CR.Amount
                                                           ,R.MethodOfPayment
                                                           ,CRD.RateCoverageType
                                                           ,CRD.QualifierId
                                                     from   Checks C
                                                            inner join #CashAccounts CA
                                                                on C.CashAccountId = CA.CashAccountId
                                                            inner join Records R
                                                                on R.RecordType = 'PS'
                                                                   and  R.ReferenceNumber = C.CheckId
                                                                   and  isnull(R.MethodOfPayment, '') = isnull(isnull(@MethodOfPayment, R.MethodOfPayment), '')
                                                            inner join VoidCapitationCheckDetails VCCD
                                                                on R.RecordID = VCCD.PaymentRecordID
                                                            inner join GlobalCapitationRecords CR
                                                                on VCCD.PaymentRecordID = CR.PaymentRecordID
                                                                   and  CR.RecordType = isnull(@RecordType, CR.RecordType)
                                                            left outer join CapitationRateDetails CRD
                                                                on CR.CapitationRateDetailID = CRD.CapitationRateDetailID
                                                            inner join #Vendors V
                                                                on R.ParentAccountID = V.VendorAccountID
                                                            --filter the non selected claims out
                                                            inner join #Groups G
                                                                on CR.GroupID = G.GroupID
                                                     where  C.DateCreated
                                                            between @StartDate
                                                            and     @EndDate
                                                            and isnull(C.CheckNumber, '') = isnull(@CheckNumber, isnull(C.CheckNumber, ''))
                                                            and isnull(C.JobId, -1) = isnull(@JobId, isnull(C.JobId, -1))
                                                            and C.CheckStatus = isnull(@CheckStatus, C.CheckStatus)
                                                            and C.CheckStatus != 'PWV'
                                                     option (recompile)

                                                     select @error = @@error

                                                     if @error != 0
                                                         begin
                                                             select @ProcedureStep = 2
                                                             select @UserMsg = 'Check Register could not be created. Contact System Administrator.'
                                                             select @LogMsg
                                                                 = 'Insert failed for checks that were paid. Error: ' + convert(varchar, @error) + ' occurred.'
                                                             raiserror(
                                                                          65500
                                                                         ,1
                                                                         ,1
                                                                         ,@ProductName
                                                                         ,@ProcedureName
                                                                         ,@ProcedureStep
                                                                         ,@UserMsg
                                                                         ,@LogMsg
                                                                         ,@SessionID
                                                                         ,-1
                                                                         ,@rowcount
                                                                         ,1
                                                                      )
                                                             goto AppErrorExit
                                                         end

                                                     --Voided capitation checks with negative amounts
                                                     insert into    #ResultSet
                                                         (
                                                             RecordID
                                                            ,CheckID
                                                            ,CheckNumber
                                                            ,CheckDate
                                                            ,CheckAmount
                                                            ,CheckVoidReason
                                                            ,CheckStatusCode
                                                            ,ExternalCheckNumber
                                                            ,ExternalCheckCurrency
                                                            ,ExternalCheckAmount
                                                            ,ExternalMethodOfPaymentCode
                                                            ,ExternalCheckDate
                                                            ,CheckClearedDate
                                                            ,ExternalConversionRate
                                                            ,PaymentWizardJobId
                                                            ,ParentAccountID
                                                            ,CashAccountId
                                                            ,RecordStatusCode
                                                            ,RecordTypeCode
                                                            ,EntityTypeCode
                                                            ,CreationDate
                                                            ,ProcessedDate
                                                            ,VoidDate
                                                            ,CheckGroupID
                                                            ,Notes
                                                            ,LastUpdatedAt
                                                            ,LastUpdatedBy
                                                            --extra columns
                                                            ,FinancialRecordID
                                                            ,FinancialRecordDetailID
                                                            ,RecordDetailId
                                                            ,RecordDetailType
                                                            ,ReferenceNumber
                                                            ,DetailPaidAmount
                                                            ,DetailGroupID
                                                            ,DetailCreationDate
                                                            ,PaymentClassCode
                                                            ,AdjustmentVersion
                                                            ,RiskGroupVendorMapID
                                                            ,LineNumber
                                                            ,LinePaidAmount
                                                            ,MethodOfPayment
                                                            ,VoidInsert
                                                            ,RateCoverageType
                                                            ,QualifierId
                                                         )
                                                     select R.RecordID
                                                           ,C.CheckId
                                                           ,C.CheckNumber
                                                           ,C.DateCreated
                                                           ,- (C.Amount)
                                                           ,C.VoidReason
                                                           ,C.CheckStatus
                                                           ,C.ExternalCheckNumber
                                                           ,C.ExternalCheckCurrency
                                                           ,- (C.ExternalCheckAmount)
                                                           ,C.ExternalMethodOfPayment
                                                           ,C.ExternalCheckDate
                                                           ,C.CheckClearedDate
                                                           ,C.ExternalConversionRate
                                                           ,C.JobId
                                                           ,R.ParentAccountID
                                                           ,C.CashAccountId
                                                           ,R.RecordStatus
                                                           ,R.RecordType
                                                           ,R.EntityType
                                                           ,R.CreationDate
                                                           ,R.ProcessedDate
                                                           ,R.VoidDate
                                                           ,R.GroupID
                                                           ,R.Notes
                                                           ,R.LastUpdatedAt
                                                           ,R.LastUpdatedBy
                                                            --new columns
                                                           ,CR.GlobalCapitationRecordID
                                                           ,CR.GlobalCapitationRecordID
                                                           ,CR.GlobalCapitationRecordID
                                                           ,CR.RecordType
                                                           ,CR.ReferenceID
                                                           ,- (CR.Amount)
                                                           ,CR.GroupID
                                                           ,CR.PostDate
                                                           ,null
                                                           ,null
                                                           ,null
                                                           ,isnull(CR.CapitationRateDetailID, CR.TermedRecordID)
                                                           ,- (CR.Amount)
                                                           ,R.MethodOfPayment
                                                           ,'Y'
                                                           ,CRD.RateCoverageType
                                                           ,CRD.QualifierId
                                                     from   Checks C
                                                            inner join #CashAccounts CA
                                                                on C.CashAccountId = CA.CashAccountId
                                                            inner join Records R
                                                                on R.RecordType = 'PS'
                                                                   and  R.ReferenceNumber = C.CheckId
                                                                   and  isnull(R.MethodOfPayment, '') = isnull(isnull(@MethodOfPayment, R.MethodOfPayment), '')
                                                            inner join VoidGlobalCapitationCheckDetails VCCD
                                                                on R.RecordID = VCCD.PaymentRecordID
                                                            inner join GlobalCapitationRecords CR
                                                                on VCCD.PaymentRecordID = CR.PaymentRecordID
                                                                   and  CR.RecordType = isnull(@RecordType, CR.RecordType)
                                                            left outer join CapitationRateDetails CRD
                                                                on CR.CapitationRateDetailID = CRD.CapitationRateDetailID
                                                            inner join #Vendors V
                                                                on R.ParentAccountID = V.VendorAccountID
                                                            --filter the non selected claims out
                                                            inner join #Groups G
                                                                on CR.GroupID = G.GroupID
                                                     where  C.DateVoided
                                                            between @StartDate
                                                            and     @EndDate
                                                            and isnull(C.CheckNumber, '') = isnull(@CheckNumber, isnull(C.CheckNumber, ''))
                                                            and isnull(C.JobId, -1) = isnull(@JobId, isnull(C.JobId, -1))
                                                            and C.CheckStatus = isnull(@CheckStatus, C.CheckStatus)
                                                            and C.CheckStatus != 'PWV'
                                                     option (recompile)

                                                     select @error = @@error
                                                     if @error != 0
                                                         begin
                                                             select @ProcedureStep = 2
                                                             select @UserMsg = 'Check Register could not be created. Contact System Administrator.'
                                                             select @LogMsg
                                                                 = 'Insert failed for checks that were paid. Error: ' + convert(varchar, @error) + ' occurred.'
                                                             raiserror(
                                                                          65500
                                                                         ,1
                                                                         ,1
                                                                         ,@ProductName
                                                                         ,@ProcedureName
                                                                         ,@ProcedureStep
                                                                         ,@UserMsg
                                                                         ,@LogMsg
                                                                         ,@SessionID
                                                                         ,-1
                                                                         ,@rowcount
                                                                         ,1
                                                                      )
                                                             goto AppErrorExit
                                                         end
                                                 end --- of "if @ShowVoidedChecks = 'Y'"
                                         end -- if isnull(@EntityType,'') = '' or @EntityType ='GCP'

                                 end --end of using groups table to filter results

                             else
                                 begin -- else if @GroupID is null 
                                     insert into    #ResultSet
                                         (
                                             RecordID
                                            ,CheckID
                                            ,CheckNumber
                                            ,CheckDate
                                            ,CheckAmount
                                            ,CheckStatusCode
                                            ,CheckVoidReason
                                            ,ExternalCheckNumber
                                            ,ExternalCheckCurrency
                                            ,ExternalCheckAmount
                                            ,ExternalConversionRate
                                            ,ExternalMethodOfPaymentCode
                                            ,ExternalCheckDate
                                            ,CheckClearedDate
                                            ,PaymentWizardJobId
                                            ,ParentAccountID
                                            ,CashAccountId
                                            ,RecordStatusCode
                                            ,RecordTypeCode
                                            ,EntityTypeCode
                                            ,CreationDate
                                            ,ProcessedDate
                                            ,VoidDate
                                            ,CheckGroupID
                                            ,Notes
                                            ,LastUpdatedAt
                                            ,LastUpdatedBy
                                            --extra columns	
                                            ,FinancialRecordID
                                            ,FinancialRecordDetailID
                                            ,RecordDetailId
                                            ,RecordDetailType
                                            ,PaymentClassCode
                                            ,ReferenceNumber
                                            ,DetailPaidAmount
                                            ,DetailGroupID
                                            ,DetailCreationDate
                                            ,AdjustmentVersion
                                            ,RiskGroupVendorMapID
                                            ,LineNumber
                                            ,LinePaidAmount
                                            ,MethodOfPayment
                                            ,WriteOffReasonCode
                                         )
                                     select R.RecordID
                                           ,C.CheckId
                                           ,C.CheckNumber
                                           ,C.DateCreated
                                           ,case when R.RecordType = 'PR' then - (C.Amount)
                                                 else C.Amount
                                            end
                                           ,case when
                                                     (
                                                         @ShowVoidedChecks = 'Y'
                                                         and C.CheckStatus = 'VD'
                                                     ) then 'PRT'
                                                 else C.CheckStatus
                                            end
                                           ,case when
                                                     (
                                                         @ShowVoidedChecks = 'Y'
                                                         and C.CheckStatus = 'VD'
                                                     ) then null
                                                 else C.VoidReason
                                            end
                                           ,C.ExternalCheckNumber
                                           ,C.ExternalCheckCurrency
                                           ,case when R.RecordType = 'PR' then - (C.ExternalCheckAmount)
                                                 else C.ExternalCheckAmount
                                            end
                                           ,C.ExternalConversionRate
                                           ,C.ExternalMethodOfPayment
                                           ,C.ExternalCheckDate
                                           ,C.CheckClearedDate
                                           ,C.JobId
                                           ,R.ParentAccountID
                                           ,C.CashAccountId
                                           ,case when
                                                     (
                                                         @ShowVoidedChecks = 'Y'
                                                         and C.CheckStatus = 'VD'
                                                     ) then 'PRT'
                                                 else R.RecordStatus
                                            end
                                           ,R.RecordType
                                           ,R.EntityType
                                           ,R.CreationDate
                                           ,R.ProcessedDate
                                           ,case when
                                                     (
                                                         @ShowVoidedChecks = 'Y'
                                                         and C.CheckStatus = 'VD'
                                                     ) then null
                                                 else R.VoidDate
                                            end
                                           ,R.GroupID
                                           ,R.Notes
                                           ,R.LastUpdatedAt
                                           ,R.LastUpdatedBy
                                            --new columns
                                           ,R2.RecordID
                                           ,RD2.RecordDetailID
                                           ,RD.ItemID
                                           ,RD.ItemType
                                           ,R2.PaymentClass
                                           ,R2.ReferenceNumber
                                           ,R2.Amount
                                           ,R2.GroupID
                                           ,R2.CreationDate
                                           ,R2.Adjustmentversion
                                           ,R2.RiskGroupVendorMapID
                                           ,RD2.ItemID
                                           ,RD2.TotalAmount
                                           ,R.MethodOfPayment
                                           ,C.WriteOffReason
                                     from   Checks C
                                            inner join Records R
                                                on R.RecordType in ('PS', isnull(@PaymentReceived, ''), isnull(@WriteOff, ''))
                                                   and  R.ReferenceNumber = C.CheckId
                                                   and  C.CashAccountId in
                                                            (
                                                                select  CashAccountId
                                                                from    #CashAccounts
                                                            )
                                                   and  R.EntityType = isnull(@EntityType, R.EntityType)
                                                   and  isnull(R.MethodOfPayment, '') = isnull(isnull(@MethodOfPayment, R.MethodOfPayment), '')
                                            inner join RecordDetails RD
                                                on R.RecordID = RD.RecordID
                                            inner join Records R2
                                                on RD.ItemID = R2.RecordID
                                                   and  R2.RecordType = isnull(@RecordType, R2.RecordType)
                                                   and  isnull(R2.PaymentClass, '') = isnull(@PaymentClass, isnull(R2.PaymentClass, ''))
                                                   and  not (
                                                                @UseProvidersTable = 'Y'
                                                                and R2.ReferenceNumber not in
                                                                        (
                                                                            select  ClaimId
                                                                            from    Claims
                                                                            where   ProviderId in
                                                                                        (
                                                                                            select  ProviderID
                                                                                            from    @Providers
                                                                                        )
                                                                        )
                                                            )
                                            inner join RecordDetails RD2
                                                on R2.RecordID = RD2.RecordID
                                                   and  RD2.ItemType in ('CL', 'IP', 'AIP', 'AIA', 'IF', 'MPD', 'BPR', 'UVP', 'UVW', 'MP')
                                            inner join #Vendors V
                                                on R.ParentAccountID = V.VendorAccountID
                                     where  (
                                                (
                                                    R.RecordType = 'PS'
                                                    and C.DateCreated
                                            between @StartDate
                                            and     @EndDate
                                                )
                                                or
                                                    (
                                                        R.RecordType = 'PR'
                                                        and R.CreationDate
                                            between @StartDate
                                            and     @EndDate
                                                    )
                                                or
                                                    (
                                                        R.RecordType = 'WO'
                                                        and C.DateCreated
                                            between @StartDate
                                            and     @EndDate
                                                    )
                                            )
                                            and isnull(C.CheckNumber, '') = isnull(@CheckNumber, isnull(C.CheckNumber, ''))
                                            and isnull(C.JobId, -1) = isnull(@JobId, isnull(C.JobId, -1))
                                            and C.CheckStatus = isnull(@CheckStatus, C.CheckStatus)
                                            and C.CheckStatus != case when @ShowPaymentWizardVoidedChecks = 'Y' then ''
                                                                      else 'PWV'
                                                                 end
                                     union
                                     select R.RecordID
                                           ,C.CheckId
                                           ,C.CheckNumber
                                           ,C.DateCreated
                                           ,case when R.RecordType = 'PR' then - (C.Amount)
                                                 else C.Amount
                                            end
                                           ,case when
                                                     (
                                                         @ShowVoidedChecks = 'Y'
                                                         and C.CheckStatus = 'VD'
                                                     ) then 'PRT'
                                                 else C.CheckStatus
                                            end
                                           ,case when
                                                     (
                                                         @ShowVoidedChecks = 'Y'
                                                         and C.CheckStatus = 'VD'
                                                     ) then null
                                                 else C.VoidReason
                                            end
                                           ,C.ExternalCheckNumber
                                           ,C.ExternalCheckCurrency
                                           ,case when R.RecordType = 'PR' then - (C.ExternalCheckAmount)
                                                 else C.ExternalCheckAmount
                                            end
                                           ,C.ExternalConversionRate
                                           ,C.ExternalMethodOfPayment
                                           ,C.ExternalCheckDate
                                           ,C.CheckClearedDate
                                           ,C.JobId
                                           ,R.ParentAccountID
                                           ,C.CashAccountId
                                           ,case when
                                                     (
                                                         @ShowVoidedChecks = 'Y'
                                                         and C.CheckStatus = 'VD'
                                                     ) then 'PRT'
                                                 else R.RecordStatus
                                            end
                                           ,R.RecordType
                                           ,R.EntityType
                                           ,R.CreationDate
                                           ,R.ProcessedDate
                                           ,case when
                                                     (
                                                         @ShowVoidedChecks = 'Y'
                                                         and C.CheckStatus = 'VD'
                                                     ) then null
                                                 else R.VoidDate
                                            end
                                           ,R.GroupID
                                           ,R.Notes
                                           ,R.LastUpdatedAt
                                           ,R.LastUpdatedBy
                                            --new columns
                                           ,R2.RecordID
                                           ,null
                                           ,RD.ItemID
                                           ,RD.ItemType
                                           ,R2.PaymentClass
                                           ,R2.ReferenceNumber
                                           ,R2.Amount
                                           ,R2.GroupID
                                           ,R2.CreationDate
                                           ,R2.Adjustmentversion
                                           ,R2.RiskGroupVendorMapID
                                           ,CR.LineNumber
                                           ,0.00
                                           ,R.MethodOfPayment
                                           ,C.WriteOffReason
                                     from   Checks C
                                            inner join Records R
                                                on R.RecordType in ('PS', isnull(@PaymentReceived, ''), isnull(@WriteOff, ''))
                                                   and  R.ReferenceNumber = C.CheckId
                                                   and  C.CashAccountId in
                                                            (
                                                                select  CashAccountId
                                                                from    #CashAccounts
                                                            )
                                                   and  R.EntityType = isnull(@EntityType, R.EntityType)
                                                   and  isnull(R.MethodOfPayment, '') = isnull(isnull(@MethodOfPayment, R.MethodOfPayment), '')
                                            inner join RecordDetails RD
                                                on R.RecordID = RD.RecordID
                                            inner join Records R2
                                                on RD.ItemID = R2.RecordID
                                                   and  R2.RecordType in ('CA', 'INF')
                                                   and  isnull(R2.PaymentClass, '') = isnull(@PaymentClass, isnull(R2.PaymentClass, ''))
                                                   and  not (
                                                                @UseProvidersTable = 'Y'
                                                                and R2.ReferenceNumber not in
                                                                        (
                                                                            select  ClaimId
                                                                            from    Claims
                                                                            where   ProviderId in
                                                                                        (
                                                                                            select  ProviderID
                                                                                            from    @Providers
                                                                                        )
                                                                        )
                                                            )
                                            inner join Claim_Details CD
                                                on R2.ReferenceNumber = CD.ClaimID
                                                   and  R2.Adjustmentversion = CD.AdjustmentVersion
                                                   and  not exists
                                 (
                                     select 1
                                     from   RecordDetails RD2
                                     where  R2.RecordID = RD2.RecordID
                                            and RD2.ItemID = CD.LineNumber
                                 )
                                            inner join Claim_Results CR
                                                on R2.ReferenceNumber = CR.ClaimId
                                                   and  R2.Adjustmentversion = CR.AdjustmentVersion
                                                   and  CD.LineNumber = CR.LineNumber
                                            inner join #Vendors V
                                                on R.ParentAccountID = V.VendorAccountID
                                     where  (
                                                (
                                                    R.RecordType = 'PS'
                                                    and C.DateCreated
                                            between @StartDate
                                            and     @EndDate
                                                )
                                                or
                                                    (
                                                        R.RecordType = 'PR'
                                                        and R.CreationDate
                                            between @StartDate
                                            and     @EndDate
                                                    )
                                                or
                                                    (
                                                        R.RecordType = 'WO'
                                                        and C.DateCreated
                                            between @StartDate
                                            and     @EndDate
                                                    )
                                            )
                                            and isnull(C.CheckNumber, '') = isnull(@CheckNumber, isnull(C.CheckNumber, ''))
                                            and isnull(C.JobId, -1) = isnull(@JobId, isnull(C.JobId, -1))
                                            and C.CheckStatus = isnull(@CheckStatus, C.CheckStatus)
                                            and C.CheckStatus != case when @ShowPaymentWizardVoidedChecks = 'Y' then ''
                                                                      else 'PWV'
                                                                 end
                                     option (recompile)

                                     select @error = @@error
                                     if @error != 0
                                         begin
                                             select @ProcedureStep = 2
                                             select @UserMsg = 'Check Register could not be created. Contact System Administrator.'
                                             select @LogMsg = 'Insert failed for checks that were paid. Error: ' + convert(varchar, @error) + ' occurred.'
                                             raiserror(
                                                          65500
                                                         ,1
                                                         ,1
                                                         ,@ProductName
                                                         ,@ProcedureName
                                                         ,@ProcedureStep
                                                         ,@UserMsg
                                                         ,@LogMsg
                                                         ,@SessionID
                                                         ,-1
                                                         ,@rowcount
                                                         ,1
                                                      )
                                             goto AppErrorExit
                                         end

                                     if @ShowVoidedChecks = 'Y'
                                         begin

                                             insert into    #ResultSet
                                                 (
                                                     RecordID
                                                    ,CheckID
                                                    ,CheckNumber
                                                    ,CheckDate
                                                    ,CheckAmount
                                                    ,CheckVoidReason
                                                    ,CheckStatusCode
                                                    ,ExternalCheckNumber
                                                    ,ExternalCheckCurrency
                                                    ,ExternalCheckAmount
                                                    ,ExternalMethodOfPaymentCode
                                                    ,ExternalCheckDate
                                                    ,CheckClearedDate
                                                    ,ExternalConversionRate
                                                    ,PaymentWizardJobId
                                                    ,ParentAccountID
                                                    ,CashAccountId
                                                    ,RecordStatusCode
                                                    ,RecordTypeCode
                                                    ,EntityTypeCode
                                                    ,CreationDate
                                                    ,ProcessedDate
                                                    ,VoidDate
                                                    ,CheckGroupID
                                                    ,Notes
                                                    ,LastUpdatedAt
                                                    ,LastUpdatedBy
                                                    --extra columns
                                                    ,FinancialRecordID
                                                    ,FinancialRecordDetailID
                                                    ,RecordDetailId
                                                    ,RecordDetailType
                                                    ,ReferenceNumber
                                                    ,DetailPaidAmount
                                                    ,DetailGroupID
                                                    ,DetailCreationDate
                                                    ,PaymentClassCode
                                                    ,AdjustmentVersion
                                                    ,RiskGroupVendorMapID
                                                    ,LineNumber
                                                    ,LinePaidAmount
                                                    ,MethodOfPayment
                                                    ,VoidInsert
                                                    ,WriteOffReasonCode
                                                 )
                                             select R.RecordID
                                                   ,C.CheckId
                                                   ,C.CheckNumber
                                                   ,C.DateCreated
                                                   ,- (C.Amount)
                                                   ,C.VoidReason
                                                   ,C.CheckStatus
                                                   ,C.ExternalCheckNumber
                                                   ,C.ExternalCheckCurrency
                                                   ,- (C.ExternalCheckAmount)
                                                   ,C.ExternalMethodOfPayment
                                                   ,C.ExternalCheckDate
                                                   ,C.CheckClearedDate
                                                   ,C.ExternalConversionRate
                                                   ,C.JobId
                                                   ,R.ParentAccountID
                                                   ,C.CashAccountId
                                                   ,R.RecordStatus
                                                   ,R.RecordType
                                                   ,R.EntityType
                                                   ,R.CreationDate
                                                   ,R.ProcessedDate
                                                   ,R.VoidDate
                                                   ,R.GroupID
                                                   ,R.Notes
                                                   ,R.LastUpdatedAt
                                                   ,R.LastUpdatedBy
                                                    --new columns
                                                   ,R2.RecordID
                                                   ,RD2.RecordDetailID
                                                   ,RD.ItemID
                                                   ,RD.ItemType
                                                   ,R2.ReferenceNumber
                                                   ,- (R2.Amount)
                                                   ,R2.GroupID
                                                   ,R2.CreationDate
                                                   ,R2.PaymentClass
                                                   ,R2.Adjustmentversion
                                                   ,R2.RiskGroupVendorMapID
                                                   ,RD2.ItemID
                                                   ,- (RD2.TotalAmount)
                                                   ,R.MethodOfPayment
                                                   ,'Y'
                                                   ,C.WriteOffReason
                                             from   Checks C
                                                    inner join Records R
                                                        on R.RecordType in ('PS', isnull(@PaymentReceived, ''), isnull(@WriteOff, ''))
                                                           and  R.ReferenceNumber = C.CheckId
                                                           and  C.CashAccountId in
                                                                    (
                                                                        select  CashAccountId
                                                                        from    #CashAccounts
                                                                    )
                                                           and  R.EntityType = isnull(@EntityType, R.EntityType)
                                                           and  isnull(R.MethodOfPayment, '') = isnull(isnull(@MethodOfPayment, R.MethodOfPayment), '')
                                                    inner join RecordDetails RD
                                                        on R.RecordID = RD.RecordID
                                                    inner join Records R2
                                                        on RD.ItemID = R2.RecordID
                                                           and  R2.RecordType = isnull(@RecordType, R2.RecordType)
                                                           and  isnull(R2.PaymentClass, '') = isnull(@PaymentClass, isnull(R2.PaymentClass, ''))
                                                           and  not (
                                                                        @UseProvidersTable = 'Y'
                                                                        and R2.ReferenceNumber not in
                                                                                (
                                                                                    select  ClaimId
                                                                                    from    Claims
                                                                                    where   ProviderId in
                                                                                                (
                                                                                                    select  ProviderID
                                                                                                    from    @Providers
                                                                                                )
                                                                                )
                                                                    )
                                                    inner join RecordDetails RD2
                                                        on R2.RecordID = RD2.RecordID
                                                           and  RD2.ItemType in ('CL', 'IP', 'AIP', 'AIA', 'IF', 'MPD', 'BPR', 'UVP', 'UVW', 'MP')
                                                    inner join #Vendors V
                                                        on R.ParentAccountID = V.VendorAccountID
                                             where  C.DateVoided
                                                    between @StartDate
                                                    and     @EndDate
                                                    and isnull(C.CheckNumber, '') = isnull(@CheckNumber, isnull(C.CheckNumber, ''))
                                                    and isnull(C.JobId, -1) = isnull(@JobId, isnull(C.JobId, -1))
                                                    and C.CheckStatus = isnull(@CheckStatus, C.CheckStatus)
                                                    and C.CheckStatus != 'PWV'
                                             union
                                             select R.RecordID
                                                   ,C.CheckId
                                                   ,C.CheckNumber
                                                   ,C.DateCreated
                                                   ,- (C.Amount)
                                                   ,C.VoidReason
                                                   ,C.CheckStatus
                                                   ,C.ExternalCheckNumber
                                                   ,C.ExternalCheckCurrency
                                                   ,- (C.ExternalCheckAmount)
                                                   ,C.ExternalMethodOfPayment
                                                   ,C.ExternalCheckDate
                                                   ,C.CheckClearedDate
                                                   ,C.ExternalConversionRate
                                                   ,C.JobId
                                                   ,R.ParentAccountID
                                                   ,C.CashAccountId
                                                   ,R.RecordStatus
                                                   ,R.RecordType
                                                   ,R.EntityType
                                                   ,R.CreationDate
                                                   ,R.ProcessedDate
                                                   ,R.VoidDate
                                                   ,R.GroupID
                                                   ,R.Notes
                                                   ,R.LastUpdatedAt
                                                   ,R.LastUpdatedBy
                                                    --new columns
                                                   ,R2.RecordID
                                                   ,null
                                                   ,RD.ItemID
                                                   ,RD.ItemType
                                                   ,R2.ReferenceNumber
                                                   ,- (R2.Amount)
                                                   ,R2.GroupID
                                                   ,R2.CreationDate
                                                   ,R2.PaymentClass
                                                   ,R2.Adjustmentversion
                                                   ,R2.RiskGroupVendorMapID
                                                   ,CR.LineNumber
                                                   ,0.00
                                                   ,R.MethodOfPayment
                                                   ,'Y'
                                                   ,C.WriteOffReason
                                             from   Checks C
                                                    inner join Records R
                                                        on R.RecordType in ('PS', isnull(@PaymentReceived, ''), isnull(@WriteOff, ''))
                                                           and  R.ReferenceNumber = C.CheckId
                                                           and  C.CashAccountId in
                                                                    (
                                                                        select  CashAccountId
                                                                        from    #CashAccounts
                                                                    )
                                                           and  R.EntityType = isnull(@EntityType, R.EntityType)
                                                           and  isnull(R.MethodOfPayment, '') = isnull(isnull(@MethodOfPayment, R.MethodOfPayment), '')
                                                    inner join RecordDetails RD
                                                        on R.RecordID = RD.RecordID
                                                    inner join Records R2
                                                        on RD.ItemID = R2.RecordID
                                                           and  R2.RecordType in ('CA', 'INF')
                                                           and  isnull(R2.PaymentClass, '') = isnull(@PaymentClass, isnull(R2.PaymentClass, ''))
                                                           and  not (
                                                                        @UseProvidersTable = 'Y'
                                                                        and R2.ReferenceNumber not in
                                                                                (
                                                                                    select  ClaimId
                                                                                    from    Claims
                                                                                    where   ProviderId in
                                                                                                (
                                                                                                    select  ProviderID
                                                                                                    from    @Providers
                                                                                                )
                                                                                )
                                                                    )
                                                    inner join Claim_Details CD
                                                        on R2.ReferenceNumber = CD.ClaimID
                                                           and  R2.Adjustmentversion = CD.AdjustmentVersion
                                                           and  not exists
                                         (
                                             select 1
                                             from   RecordDetails RD2
                                             where  R2.RecordID = RD2.RecordID
                                                    and RD2.ItemID = CD.LineNumber
                                         )
                                                    inner join Claim_Results CR
                                                        on R2.ReferenceNumber = CR.ClaimId
                                                           and  R2.Adjustmentversion = CR.AdjustmentVersion
                                                           and  CD.LineNumber = CR.LineNumber
                                                    inner join #Vendors V
                                                        on R.ParentAccountID = V.VendorAccountID
                                             where  C.DateVoided
                                                    between @StartDate
                                                    and     @EndDate
                                                    and isnull(C.CheckNumber, '') = isnull(@CheckNumber, isnull(C.CheckNumber, ''))
                                                    and isnull(C.JobId, -1) = isnull(@JobId, isnull(C.JobId, -1))
                                                    and C.CheckStatus = isnull(@CheckStatus, C.CheckStatus)
                                                    and (C.CheckStatus != 'PWV')
                                             option (recompile)

                                             select @error = @@error
                                             if @error != 0
                                                 begin
                                                     select @ProcedureStep = 2
                                                     select @UserMsg = 'Check Register could not be created. Contact System Administrator.'
                                                     select @LogMsg
                                                         = 'Insert failed for checks that were paid. Error: ' + convert(varchar, @error) + ' occurred.'
                                                     raiserror(
                                                                  65500
                                                                 ,1
                                                                 ,1
                                                                 ,@ProductName
                                                                 ,@ProcedureName
                                                                 ,@ProcedureStep
                                                                 ,@UserMsg
                                                                 ,@LogMsg
                                                                 ,@SessionID
                                                                 ,-1
                                                                 ,@rowcount
                                                                 ,1
                                                              )
                                                     goto AppErrorExit
                                                 end
                                         end --- of "if @ShowVoidedChecks = 'Y'"
                                     else
                                         begin
                                             delete from #ResultSet
                                             where  RecordStatusCode = 'V'
                                         end


                                     if isnull(@EntityType, '') = ''
                                        or  @EntityType = 'CPT' --Capitation (2DL, @EIN is not null & @GroupID is null)
                                         begin
                                             --Capitation
                                             insert into    #ResultSet
                                                 (
                                                     RecordID
                                                    ,CheckID
                                                    ,CheckNumber
                                                    ,CheckDate
                                                    ,CheckAmount
                                                    ,CheckStatusCode
                                                    ,CheckVoidReason
                                                    ,ExternalCheckNumber
                                                    ,ExternalCheckCurrency
                                                    ,ExternalCheckAmount
                                                    ,ExternalConversionRate
                                                    ,ExternalMethodOfPaymentCode
                                                    ,ExternalCheckDate
                                                    ,CheckClearedDate
                                                    ,PaymentWizardJobId
                                                    ,ParentAccountID
                                                    ,CashAccountId
                                                    ,RecordStatusCode
                                                    ,RecordTypeCode
                                                    ,EntityTypeCode
                                                    ,CreationDate
                                                    ,ProcessedDate
                                                    ,VoidDate
                                                    ,CheckGroupID
                                                    ,Notes
                                                    ,LastUpdatedAt
                                                    ,LastUpdatedBy
                                                    --extra columns	
                                                    ,FinancialRecordID
                                                    ,FinancialRecordDetailID
                                                    ,RecordDetailId
                                                    ,RecordDetailType
                                                    ,PaymentClassCode
                                                    ,ReferenceNumber
                                                    ,DetailPaidAmount
                                                    ,DetailGroupID
                                                    ,DetailCreationDate
                                                    ,AdjustmentVersion
                                                    ,RiskGroupVendorMapID
                                                    ,LineNumber
                                                    ,LinePaidAmount
                                                    ,MethodOfPayment
                                                    ,RateCoverageType
                                                    ,QualifierId
                                                 )
                                             select R.RecordID
                                                   ,C.CheckId
                                                   ,C.CheckNumber
                                                   ,C.DateCreated
                                                   ,C.Amount
                                                   ,C.CheckStatus
                                                   ,C.VoidReason
                                                   ,C.ExternalCheckNumber
                                                   ,C.ExternalCheckCurrency
                                                   ,C.ExternalCheckAmount
                                                   ,C.ExternalConversionRate
                                                   ,C.ExternalMethodOfPayment
                                                   ,C.ExternalCheckDate
                                                   ,C.CheckClearedDate
                                                   ,C.JobId
                                                   ,R.ParentAccountID
                                                   ,C.CashAccountId
                                                   ,R.RecordStatus
                                                   ,R.RecordType
                                                   ,R.EntityType
                                                   ,R.CreationDate
                                                   ,R.ProcessedDate
                                                   ,R.VoidDate
                                                   ,R.GroupID
                                                   ,R.Notes
                                                   ,R.LastUpdatedAt
                                                   ,R.LastUpdatedBy
                                                    --new columns
                                                   ,CR.CapitationRecordID
                                                   ,CR.CapitationRecordID
                                                   ,CR.CapitationRecordID
                                                   ,CR.RecordType
                                                   ,null
                                                   ,CR.ReferenceID
                                                   ,CR.Amount
                                                   ,CR.GroupID
                                                   ,CR.PostDate
                                                   ,null
                                                   ,CR.RiskGroupVendorMapID
                                                   ,isnull(CR.CapitationRateDetailID, CR.TermedRecordID)
                                                   ,CR.Amount
                                                   ,R.MethodOfPayment
                                                   ,CRD.RateCoverageType
                                                   ,CRD.QualifierId
                                             from   Checks C
                                                    inner join #CashAccounts CA
                                                        on C.CashAccountId = CA.CashAccountId
                                                    inner join Records R
                                                        on R.RecordType = 'PS'
                                                           and  R.ReferenceNumber = C.CheckId
                                                           and  isnull(R.MethodOfPayment, '') = isnull(isnull(@MethodOfPayment, R.MethodOfPayment), '')
                                                    inner join CapitationRecords CR
                                                        on R.RecordID = CR.PaymentRecordID
                                                           and  CR.RecordType = isnull(@RecordType, CR.RecordType)
                                                    left outer join CapitationRateDetails CRD
                                                        on CR.CapitationRateDetailID = CRD.CapitationRateDetailID
                                                    inner join #Vendors V
                                                        on R.ParentAccountID = V.VendorAccountID
                                             where  C.DateCreated
                                                    between @StartDate
                                                    and     @EndDate
                                                    and isnull(C.CheckNumber, '') = isnull(@CheckNumber, isnull(C.CheckNumber, ''))
                                                    and isnull(C.JobId, -1) = isnull(@JobId, isnull(C.JobId, -1))
                                                    and C.CheckStatus = isnull(@CheckStatus, C.CheckStatus)
                                                    and C.CheckStatus != case when @ShowPaymentWizardVoidedChecks = 'Y' then ''
                                                                              else 'PWV'
                                                                         end
                                             option (recompile)

                                             select @error = @@error

                                             if @error != 0
                                                 begin
                                                     select @ProcedureStep = 2
                                                     select @UserMsg = 'Check Register could not be created. Contact System Administrator.'
                                                     select @LogMsg
                                                         = 'Insert failed for checks that were paid. Error: ' + convert(varchar, @error) + ' occurred.'
                                                     raiserror(
                                                                  65500
                                                                 ,1
                                                                 ,1
                                                                 ,@ProductName
                                                                 ,@ProcedureName
                                                                 ,@ProcedureStep
                                                                 ,@UserMsg
                                                                 ,@LogMsg
                                                                 ,@SessionID
                                                                 ,-1
                                                                 ,@rowcount
                                                                 ,1
                                                              )
                                                     goto AppErrorExit
                                                 end

                                             if @ShowVoidedChecks = 'Y'
                                                 begin
                                                     --Voided capitation checks
                                                     insert into    #ResultSet
                                                         (
                                                             RecordID
                                                            ,CheckID
                                                            ,CheckNumber
                                                            ,CheckDate
                                                            ,CheckAmount
                                                            ,CheckStatusCode
                                                            ,CheckVoidReason
                                                            ,ExternalCheckNumber
                                                            ,ExternalCheckCurrency
                                                            ,ExternalCheckAmount
                                                            ,ExternalConversionRate
                                                            ,ExternalMethodOfPaymentCode
                                                            ,ExternalCheckDate
                                                            ,CheckClearedDate
                                                            ,PaymentWizardJobId
                                                            ,ParentAccountID
                                                            ,CashAccountId
                                                            ,RecordStatusCode
                                                            ,RecordTypeCode
                                                            ,EntityTypeCode
                                                            ,CreationDate
                                                            ,ProcessedDate
                                                            ,VoidDate
                                                            ,CheckGroupID
                                                            ,Notes
                                                            ,LastUpdatedAt
                                                            ,LastUpdatedBy
                                                            --extra columns	
                                                            ,FinancialRecordID
                                                            ,FinancialRecordDetailID
                                                            ,RecordDetailId
                                                            ,RecordDetailType
                                                            ,PaymentClassCode
                                                            ,ReferenceNumber
                                                            ,DetailPaidAmount
                                                            ,DetailGroupID
                                                            ,DetailCreationDate
                                                            ,AdjustmentVersion
                                                            ,RiskGroupVendorMapID
                                                            ,LineNumber
                                                            ,LinePaidAmount
                                                            ,MethodOfPayment
                                                            ,RateCoverageType
                                                            ,QualifierId
                                                         )
                                                     select R.RecordID
                                                           ,C.CheckId
                                                           ,C.CheckNumber
                                                           ,C.DateCreated
                                                           ,C.Amount
                                                           ,C.CheckStatus
                                                           ,C.VoidReason
                                                           ,C.ExternalCheckNumber
                                                           ,C.ExternalCheckCurrency
                                                           ,C.ExternalCheckAmount
                                                           ,C.ExternalConversionRate
                                                           ,C.ExternalMethodOfPayment
                                                           ,C.ExternalCheckDate
                                                           ,C.CheckClearedDate
                                                           ,C.JobId
                                                           ,R.ParentAccountID
                                                           ,C.CashAccountId
                                                           ,R.RecordStatus
                                                           ,R.RecordType
                                                           ,R.EntityType
                                                           ,R.CreationDate
                                                           ,R.ProcessedDate
                                                           ,R.VoidDate
                                                           ,R.GroupID
                                                           ,R.Notes
                                                           ,R.LastUpdatedAt
                                                           ,R.LastUpdatedBy
                                                            --new columns
                                                           ,CR.CapitationRecordID
                                                           ,CR.CapitationRecordID
                                                           ,CR.CapitationRecordID
                                                           ,CR.RecordType
                                                           ,null
                                                           ,CR.ReferenceID
                                                           ,CR.Amount
                                                           ,CR.GroupID
                                                           ,CR.PostDate
                                                           ,null
                                                           ,CR.RiskGroupVendorMapID
                                                           ,isnull(CR.CapitationRateDetailID, CR.TermedRecordID)
                                                           ,CR.Amount
                                                           ,R.MethodOfPayment
                                                           ,CRD.RateCoverageType
                                                           ,CRD.QualifierId
                                                     from   Checks C
                                                            inner join #CashAccounts CA
                                                                on C.CashAccountId = CA.CashAccountId
                                                            inner join Records R
                                                                on R.RecordType = 'PS'
                                                                   and  R.ReferenceNumber = C.CheckId
                                                                   and  isnull(R.MethodOfPayment, '') = isnull(isnull(@MethodOfPayment, R.MethodOfPayment), '')
                                                            inner join VoidCapitationCheckDetails VCCD
                                                                on R.RecordID = VCCD.PaymentRecordID
                                                            inner join CapitationRecords CR
                                                                on VCCD.CapitationRecordID = CR.CapitationRecordID
                                                                   and  CR.RecordType = isnull(@RecordType, CR.RecordType)
                                                            left outer join CapitationRateDetails CRD
                                                                on CR.CapitationRateDetailID = CRD.CapitationRateDetailID
                                                            inner join #Vendors V
                                                                on R.ParentAccountID = V.VendorAccountID
                                                     where  C.DateCreated
                                                            between @StartDate
                                                            and     @EndDate
                                                            and isnull(C.CheckNumber, '') = isnull(@CheckNumber, isnull(C.CheckNumber, ''))
                                                            and isnull(C.JobId, -1) = isnull(@JobId, isnull(C.JobId, -1))
                                                            and C.CheckStatus = isnull(@CheckStatus, C.CheckStatus)
                                                            and C.CheckStatus != 'PWV'
                                                     option (recompile)

                                                     select @error = @@error

                                                     if @error != 0
                                                         begin
                                                             select @ProcedureStep = 2
                                                             select @UserMsg = 'Check Register could not be created. Contact System Administrator.'
                                                             select @LogMsg
                                                                 = 'Insert failed for checks that were paid. Error: ' + convert(varchar, @error) + ' occurred.'
                                                             raiserror(
                                                                          65500
                                                                         ,1
                                                                         ,1
                                                                         ,@ProductName
                                                                         ,@ProcedureName
                                                                         ,@ProcedureStep
                                                                         ,@UserMsg
                                                                         ,@LogMsg
                                                                         ,@SessionID
                                                                         ,-1
                                                                         ,@rowcount
                                                                         ,1
                                                                      )
                                                             goto AppErrorExit
                                                         end

                                                     --Voided capitation checks with negative amounts
                                                     insert into    #ResultSet
                                                         (
                                                             RecordID
                                                            ,CheckID
                                                            ,CheckNumber
                                                            ,CheckDate
                                                            ,CheckAmount
                                                            ,CheckVoidReason
                                                            ,CheckStatusCode
                                                            ,ExternalCheckNumber
                                                            ,ExternalCheckCurrency
                                                            ,ExternalCheckAmount
                                                            ,ExternalMethodOfPaymentCode
                                                            ,ExternalCheckDate
                                                            ,CheckClearedDate
                                                            ,ExternalConversionRate
                                                            ,PaymentWizardJobId
                                                            ,ParentAccountID
                                                            ,CashAccountId
                                                            ,RecordStatusCode
                                                            ,RecordTypeCode
                                                            ,EntityTypeCode
                                                            ,CreationDate
                                                            ,ProcessedDate
                                                            ,VoidDate
                                                            ,CheckGroupID
                                                            ,Notes
                                                            ,LastUpdatedAt
                                                            ,LastUpdatedBy
                                                            --extra columns
                                                            ,FinancialRecordID
                                                            ,FinancialRecordDetailID
                                                            ,RecordDetailId
                                                            ,RecordDetailType
                                                            ,ReferenceNumber
                                                            ,DetailPaidAmount
                                                            ,DetailGroupID
                                                            ,DetailCreationDate
                                                            ,PaymentClassCode
                                                            ,AdjustmentVersion
                                                            ,RiskGroupVendorMapID
                                                            ,LineNumber
                                                            ,LinePaidAmount
                                                            ,MethodOfPayment
                                                            ,VoidInsert
                                                            ,RateCoverageType
                                                            ,QualifierId
                                                         )
                                                     select R.RecordID
                                                           ,C.CheckId
                                                           ,C.CheckNumber
                                                           ,C.DateCreated
                                                           ,- (C.Amount)
                                                           ,C.VoidReason
                                                           ,C.CheckStatus
                                                           ,C.ExternalCheckNumber
                                                           ,C.ExternalCheckCurrency
                                                           ,- (C.ExternalCheckAmount)
                                                           ,C.ExternalMethodOfPayment
                                                           ,C.ExternalCheckDate
                                                           ,C.CheckClearedDate
                                                           ,C.ExternalConversionRate
                                                           ,C.JobId
                                                           ,R.ParentAccountID
                                                           ,C.CashAccountId
                                                           ,R.RecordStatus
                                                           ,R.RecordType
                                                           ,R.EntityType
                                                           ,R.CreationDate
                                                           ,R.ProcessedDate
                                                           ,R.VoidDate
                                                           ,R.GroupID
                                                           ,R.Notes
                                                           ,R.LastUpdatedAt
                                                           ,R.LastUpdatedBy
                                                            --new columns
                                                           ,CR.CapitationRecordID
                                                           ,CR.CapitationRecordID
                                                           ,CR.CapitationRecordID
                                                           ,CR.RecordType
                                                           ,CR.ReferenceID
                                                           ,- (CR.Amount)
                                                           ,CR.GroupID
                                                           ,CR.PostDate
                                                           ,null
                                                           ,null
                                                           ,CR.RiskGroupVendorMapID
                                                           ,isnull(CR.CapitationRateDetailID, CR.TermedRecordID)
                                                           ,- (CR.Amount)
                                                           ,R.MethodOfPayment
                                                           ,'Y'
                                                           ,CRD.RateCoverageType
                                                           ,CRD.QualifierId
                                                     from   Checks C
                                                            inner join #CashAccounts CA
                                                                on C.CashAccountId = CA.CashAccountId
                                                            inner join Records R
                                                                on R.RecordType = 'PS'
                                                                   and  R.ReferenceNumber = C.CheckId
                                                                   and  isnull(R.MethodOfPayment, '') = isnull(isnull(@MethodOfPayment, R.MethodOfPayment), '')
                                                            inner join VoidCapitationCheckDetails VCCD
                                                                on R.RecordID = VCCD.PaymentRecordID
                                                            inner join CapitationRecords CR
                                                                on VCCD.CapitationRecordID = CR.CapitationRecordID
                                                                   and  CR.RecordType = isnull(@RecordType, CR.RecordType)
                                                            left outer join CapitationRateDetails CRD
                                                                on CR.CapitationRateDetailID = CRD.CapitationRateDetailID
                                                            inner join #Vendors V
                                                                on R.ParentAccountID = V.VendorAccountID
                                                     where  C.DateVoided
                                                            between @StartDate
                                                            and     @EndDate
                                                            and isnull(C.CheckNumber, '') = isnull(@CheckNumber, isnull(C.CheckNumber, ''))
                                                            and isnull(C.JobId, -1) = isnull(@JobId, isnull(C.JobId, -1))
                                                            and C.CheckStatus = isnull(@CheckStatus, C.CheckStatus)
                                                            and C.CheckStatus != 'PWV'
                                                     option (recompile)

                                                     select @error = @@error
                                                     if @error != 0
                                                         begin
                                                             select @ProcedureStep = 2
                                                             select @UserMsg = 'Check Register could not be created. Contact System Administrator.'
                                                             select @LogMsg
                                                                 = 'Insert failed for checks that were paid. Error: ' + convert(varchar, @error) + ' occurred.'
                                                             raiserror(
                                                                          65500
                                                                         ,1
                                                                         ,1
                                                                         ,@ProductName
                                                                         ,@ProcedureName
                                                                         ,@ProcedureStep
                                                                         ,@UserMsg
                                                                         ,@LogMsg
                                                                         ,@SessionID
                                                                         ,-1
                                                                         ,@rowcount
                                                                         ,1
                                                                      )
                                                             goto AppErrorExit
                                                         end

                                                 end --- of "if @ShowVoidedChecks = 'Y'"
                                         end -- if isnull(@EntityType,'') = '' or @EntityType ='CPT' --Capitation

                                     if (
                                            isnull(@EntityType, '') = ''
                                            or  @EntityType = 'GCP'
                                        ) -- 2DL, @EIN is not null & @GroupID is null  
                                         begin
                                             --Capitation
                                             insert into    #ResultSet
                                                 (
                                                     RecordID
                                                    ,CheckID
                                                    ,CheckNumber
                                                    ,CheckDate
                                                    ,CheckAmount
                                                    ,CheckStatusCode
                                                    ,CheckVoidReason
                                                    ,ExternalCheckNumber
                                                    ,ExternalCheckCurrency
                                                    ,ExternalCheckAmount
                                                    ,ExternalConversionRate
                                                    ,ExternalMethodOfPaymentCode
                                                    ,ExternalCheckDate
                                                    ,CheckClearedDate
                                                    ,PaymentWizardJobId
                                                    ,ParentAccountID
                                                    ,CashAccountId
                                                    ,RecordStatusCode
                                                    ,RecordTypeCode
                                                    ,EntityTypeCode
                                                    ,CreationDate
                                                    ,ProcessedDate
                                                    ,VoidDate
                                                    ,CheckGroupID
                                                    ,Notes
                                                    ,LastUpdatedAt
                                                    ,LastUpdatedBy
                                                    --extra columns	
                                                    ,FinancialRecordID
                                                    ,FinancialRecordDetailID
                                                    ,RecordDetailId
                                                    ,RecordDetailType
                                                    ,PaymentClassCode
                                                    ,ReferenceNumber
                                                    ,DetailPaidAmount
                                                    ,DetailGroupID
                                                    ,DetailCreationDate
                                                    ,AdjustmentVersion
                                                    ,RiskGroupVendorMapID
                                                    ,LineNumber
                                                    ,LinePaidAmount
                                                    ,MethodOfPayment
                                                    ,RateCoverageType
                                                    ,QualifierId
                                                 )
                                             select R.RecordID
                                                   ,C.CheckId
                                                   ,C.CheckNumber
                                                   ,C.DateCreated
                                                   ,C.Amount
                                                   ,C.CheckStatus
                                                   ,C.VoidReason
                                                   ,C.ExternalCheckNumber
                                                   ,C.ExternalCheckCurrency
                                                   ,C.ExternalCheckAmount
                                                   ,C.ExternalConversionRate
                                                   ,C.ExternalMethodOfPayment
                                                   ,C.ExternalCheckDate
                                                   ,C.CheckClearedDate
                                                   ,C.JobId
                                                   ,R.ParentAccountID
                                                   ,C.CashAccountId
                                                   ,R.RecordStatus
                                                   ,R.RecordType
                                                   ,R.EntityType
                                                   ,R.CreationDate
                                                   ,R.ProcessedDate
                                                   ,R.VoidDate
                                                   ,R.GroupID
                                                   ,R.Notes
                                                   ,R.LastUpdatedAt
                                                   ,R.LastUpdatedBy
                                                    --new columns
                                                   ,CR.GlobalCapitationRecordID
                                                   ,CR.GlobalCapitationRecordID
                                                   ,CR.GlobalCapitationRecordID
                                                   ,CR.RecordType
                                                   ,null
                                                   ,CR.ReferenceID
                                                   ,CR.Amount
                                                   ,CR.GroupID
                                                   ,CR.PostDate
                                                   ,null
                                                   ,null
                                                   ,isnull(CR.CapitationRateDetailID, CR.TermedRecordID)
                                                   ,CR.Amount
                                                   ,R.MethodOfPayment
                                                   ,CRD.RateCoverageType
                                                   ,CRD.QualifierId
                                             from   Checks C
                                                    inner join #CashAccounts CA
                                                        on C.CashAccountId = CA.CashAccountId
                                                    inner join Records R
                                                        on R.RecordType = 'PS'
                                                           and  R.ReferenceNumber = C.CheckId
                                                           and  isnull(R.MethodOfPayment, '') = isnull(isnull(@MethodOfPayment, R.MethodOfPayment), '')
                                                    inner join GlobalCapitationRecords CR
                                                        on R.RecordID = CR.PaymentRecordID
                                                           and  CR.RecordType = isnull(@RecordType, CR.RecordType)
                                                    left outer join CapitationRateDetails CRD
                                                        on CR.CapitationRateDetailID = CRD.CapitationRateDetailID
                                                    inner join #Vendors V
                                                        on R.ParentAccountID = V.VendorAccountID
                                             where  C.DateCreated
                                                    between @StartDate
                                                    and     @EndDate
                                                    and isnull(C.CheckNumber, '') = isnull(@CheckNumber, isnull(C.CheckNumber, ''))
                                                    and isnull(C.JobId, -1) = isnull(@JobId, isnull(C.JobId, -1))
                                                    and C.CheckStatus = isnull(@CheckStatus, C.CheckStatus)
                                                    and C.CheckStatus != case when @ShowPaymentWizardVoidedChecks = 'Y' then ''
                                                                              else 'PWV'
                                                                         end
                                             option (recompile)

                                             select @error = @@error
                                             if @error != 0
                                                 begin
                                                     select @ProcedureStep = 2
                                                     select @UserMsg = 'Check Register could not be created. Contact System Administrator.'
                                                     select @LogMsg
                                                         = 'Insert failed for checks that were paid. Error: ' + convert(varchar, @error) + ' occurred.'
                                                     raiserror(
                                                                  65500
                                                                 ,1
                                                                 ,1
                                                                 ,@ProductName
                                                                 ,@ProcedureName
                                                                 ,@ProcedureStep
                                                                 ,@UserMsg
                                                                 ,@LogMsg
                                                                 ,@SessionID
                                                                 ,-1
                                                                 ,@rowcount
                                                                 ,1
                                                              )
                                                     goto AppErrorExit
                                                 end

                                             if @ShowVoidedChecks = 'Y'
                                                 begin
                                                     --Voided capitation checks
                                                     insert into    #ResultSet
                                                         (
                                                             RecordID
                                                            ,CheckID
                                                            ,CheckNumber
                                                            ,CheckDate
                                                            ,CheckAmount
                                                            ,CheckStatusCode
                                                            ,CheckVoidReason
                                                            ,ExternalCheckNumber
                                                            ,ExternalCheckCurrency
                                                            ,ExternalCheckAmount
                                                            ,ExternalConversionRate
                                                            ,ExternalMethodOfPaymentCode
                                                            ,ExternalCheckDate
                                                            ,CheckClearedDate
                                                            ,PaymentWizardJobId
                                                            ,ParentAccountID
                                                            ,CashAccountId
                                                            ,RecordStatusCode
                                                            ,RecordTypeCode
                                                            ,EntityTypeCode
                                                            ,CreationDate
                                                            ,ProcessedDate
                                                            ,VoidDate
                                                            ,CheckGroupID
                                                            ,Notes
                                                            ,LastUpdatedAt
                                                            ,LastUpdatedBy
                                                            --extra columns	
                                                            ,FinancialRecordID
                                                            ,FinancialRecordDetailID
                                                            ,RecordDetailId
                                                            ,RecordDetailType
                                                            ,PaymentClassCode
                                                            ,ReferenceNumber
                                                            ,DetailPaidAmount
                                                            ,DetailGroupID
                                                            ,DetailCreationDate
                                                            ,AdjustmentVersion
                                                            ,RiskGroupVendorMapID
                                                            ,LineNumber
                                                            ,LinePaidAmount
                                                            ,MethodOfPayment
                                                            ,RateCoverageType
                                                            ,QualifierId
                                                         )
                                                     select R.RecordID
                                                           ,C.CheckId
                                                           ,C.CheckNumber
                                                           ,C.DateCreated
                                                           ,C.Amount
                                                           ,C.CheckStatus
                                                           ,C.VoidReason
                                                           ,C.ExternalCheckNumber
                                                           ,C.ExternalCheckCurrency
                                                           ,C.ExternalCheckAmount
                                                           ,C.ExternalConversionRate
                                                           ,C.ExternalMethodOfPayment
                                                           ,C.ExternalCheckDate
                                                           ,C.CheckClearedDate
                                                           ,C.JobId
                                                           ,R.ParentAccountID
                                                           ,C.CashAccountId
                                                           ,R.RecordStatus
                                                           ,R.RecordType
                                                           ,R.EntityType
                                                           ,R.CreationDate
                                                           ,R.ProcessedDate
                                                           ,R.VoidDate
                                                           ,R.GroupID
                                                           ,R.Notes
                                                           ,R.LastUpdatedAt
                                                           ,R.LastUpdatedBy
                                                            --new columns
                                                           ,CR.GlobalCapitationRecordID
                                                           ,CR.GlobalCapitationRecordID
                                                           ,CR.GlobalCapitationRecordID
                                                           ,CR.RecordType
                                                           ,null
                                                           ,CR.ReferenceID
                                                           ,CR.Amount
                                                           ,CR.GroupID
                                                           ,CR.PostDate
                                                           ,null
                                                           ,null
                                                           ,isnull(CR.CapitationRateDetailID, CR.TermedRecordID)
                                                           ,CR.Amount
                                                           ,R.MethodOfPayment
                                                           ,CRD.RateCoverageType
                                                           ,CRD.QualifierId
                                                     from   Checks C
                                                            inner join #CashAccounts CA
                                                                on C.CashAccountId = CA.CashAccountId
                                                            inner join Records R
                                                                on R.RecordType = 'PS'
                                                                   and  R.ReferenceNumber = C.CheckId
                                                                   and  isnull(R.MethodOfPayment, '') = isnull(isnull(@MethodOfPayment, R.MethodOfPayment), '')
                                                            inner join VoidGlobalCapitationCheckDetails VCCD
                                                                on R.RecordID = VCCD.PaymentRecordID
                                                            inner join GlobalCapitationRecords CR
                                                                on VCCD.GlobalCapitationRecordID = CR.GlobalCapitationRecordID
                                                                   and  CR.RecordType = isnull(@RecordType, CR.RecordType)
                                                            left outer join CapitationRateDetails CRD
                                                                on CR.CapitationRateDetailID = CRD.CapitationRateDetailID
                                                            inner join #Vendors V
                                                                on R.ParentAccountID = V.VendorAccountID
                                                     where  C.DateCreated
                                                            between @StartDate
                                                            and     @EndDate
                                                            and isnull(C.CheckNumber, '') = isnull(@CheckNumber, isnull(C.CheckNumber, ''))
                                                            and isnull(C.JobId, -1) = isnull(@JobId, isnull(C.JobId, -1))
                                                            and C.CheckStatus = isnull(@CheckStatus, C.CheckStatus)
                                                            and C.CheckStatus != 'PWV'
                                                     option (recompile)

                                                     select @error = @@error
                                                     if @error != 0
                                                         begin
                                                             select @ProcedureStep = 2
                                                             select @UserMsg = 'Check Register could not be created. Contact System Administrator.'
                                                             select @LogMsg
                                                                 = 'Insert failed for checks that were paid. Error: ' + convert(varchar, @error) + ' occurred.'
                                                             raiserror(
                                                                          65500
                                                                         ,1
                                                                         ,1
                                                                         ,@ProductName
                                                                         ,@ProcedureName
                                                                         ,@ProcedureStep
                                                                         ,@UserMsg
                                                                         ,@LogMsg
                                                                         ,@SessionID
                                                                         ,-1
                                                                         ,@rowcount
                                                                         ,1
                                                                      )
                                                             goto AppErrorExit
                                                         end

                                                     --Voided capitation checks with negative amounts
                                                     insert into    #ResultSet
                                                         (
                                                             RecordID
                                                            ,CheckID
                                                            ,CheckNumber
                                                            ,CheckDate
                                                            ,CheckAmount
                                                            ,CheckVoidReason
                                                            ,CheckStatusCode
                                                            ,ExternalCheckNumber
                                                            ,ExternalCheckCurrency
                                                            ,ExternalCheckAmount
                                                            ,ExternalMethodOfPaymentCode
                                                            ,ExternalCheckDate
                                                            ,CheckClearedDate
                                                            ,ExternalConversionRate
                                                            ,PaymentWizardJobId
                                                            ,ParentAccountID
                                                            ,CashAccountId
                                                            ,RecordStatusCode
                                                            ,RecordTypeCode
                                                            ,EntityTypeCode
                                                            ,CreationDate
                                                            ,ProcessedDate
                                                            ,VoidDate
                                                            ,CheckGroupID
                                                            ,Notes
                                                            ,LastUpdatedAt
                                                            ,LastUpdatedBy
                                                            --extra columns
                                                            ,FinancialRecordID
                                                            ,FinancialRecordDetailID
                                                            ,RecordDetailId
                                                            ,RecordDetailType
                                                            ,ReferenceNumber
                                                            ,DetailPaidAmount
                                                            ,DetailGroupID
                                                            ,DetailCreationDate
                                                            ,PaymentClassCode
                                                            ,AdjustmentVersion
                                                            ,RiskGroupVendorMapID
                                                            ,LineNumber
                                                            ,LinePaidAmount
                                                            ,MethodOfPayment
                                                            ,VoidInsert
                                                            ,RateCoverageType
                                                            ,QualifierId
                                                         )
                                                     select R.RecordID
                                                           ,C.CheckId
                                                           ,C.CheckNumber
                                                           ,C.DateCreated
                                                           ,- (C.Amount)
                                                           ,C.VoidReason
                                                           ,C.CheckStatus
                                                           ,C.ExternalCheckNumber
                                                           ,C.ExternalCheckCurrency
                                                           ,- (C.ExternalCheckAmount)
                                                           ,C.ExternalMethodOfPayment
                                                           ,C.ExternalCheckDate
                                                           ,C.CheckClearedDate
                                                           ,C.ExternalConversionRate
                                                           ,C.JobId
                                                           ,R.ParentAccountID
                                                           ,C.CashAccountId
                                                           ,R.RecordStatus
                                                           ,R.RecordType
                                                           ,R.EntityType
                                                           ,R.CreationDate
                                                           ,R.ProcessedDate
                                                           ,R.VoidDate
                                                           ,R.GroupID
                                                           ,R.Notes
                                                           ,R.LastUpdatedAt
                                                           ,R.LastUpdatedBy
                                                            --new columns
                                                           ,CR.GlobalCapitationRecordID
                                                           ,CR.GlobalCapitationRecordID
                                                           ,CR.GlobalCapitationRecordID
                                                           ,CR.RecordType
                                                           ,CR.ReferenceID
                                                           ,- (CR.Amount)
                                                           ,CR.GroupID
                                                           ,CR.PostDate
                                                           ,null
                                                           ,null
                                                           ,null
                                                           ,isnull(CR.CapitationRateDetailID, CR.TermedRecordID)
                                                           ,- (CR.Amount)
                                                           ,R.MethodOfPayment
                                                           ,'Y'
                                                           ,CRD.RateCoverageType
                                                           ,CRD.QualifierId
                                                     from   Checks C
                                                            inner join #CashAccounts CA
                                                                on C.CashAccountId = CA.CashAccountId
                                                            inner join Records R
                                                                on R.RecordType = 'PS'
                                                                   and  R.ReferenceNumber = C.CheckId
                                                                   and  isnull(R.MethodOfPayment, '') = isnull(isnull(@MethodOfPayment, R.MethodOfPayment), '')
                                                            inner join VoidGlobalCapitationCheckDetails VCCD
                                                                on R.RecordID = VCCD.PaymentRecordID
                                                            inner join GlobalCapitationRecords CR
                                                                on VCCD.GlobalCapitationRecordID = CR.GlobalCapitationRecordID
                                                                   and  CR.RecordType = isnull(@RecordType, CR.RecordType)
                                                            left outer join CapitationRateDetails CRD
                                                                on CR.CapitationRateDetailID = CRD.CapitationRateDetailID
                                                            inner join #Vendors V
                                                                on R.ParentAccountID = V.VendorAccountID
                                                     where  C.DateVoided
                                                            between @StartDate
                                                            and     @EndDate
                                                            and isnull(C.CheckNumber, '') = isnull(@CheckNumber, isnull(C.CheckNumber, ''))
                                                            and isnull(C.JobId, -1) = isnull(@JobId, isnull(C.JobId, -1))
                                                            and C.CheckStatus = isnull(@CheckStatus, C.CheckStatus)
                                                            and C.CheckStatus != 'PWV'
                                                     option (recompile)

                                                     select @error = @@error
                                                     if @error != 0
                                                         begin
                                                             select @ProcedureStep = 2
                                                             select @UserMsg = 'Check Register could not be created. Contact System Administrator.'
                                                             select @LogMsg
                                                                 = 'Insert failed for checks that were paid. Error: ' + convert(varchar, @error) + ' occurred.'
                                                             raiserror(
                                                                          65500
                                                                         ,1
                                                                         ,1
                                                                         ,@ProductName
                                                                         ,@ProcedureName
                                                                         ,@ProcedureStep
                                                                         ,@UserMsg
                                                                         ,@LogMsg
                                                                         ,@SessionID
                                                                         ,-1
                                                                         ,@rowcount
                                                                         ,1
                                                                      )
                                                             goto AppErrorExit
                                                         end

                                                 end --- of "if @ShowVoidedChecks = 'Y'"
                                         end -- if isnull(@EntityType,'') = '' or @EntityType ='GCP'

                                 end --end of non-group usage
                         end --end of if EIN is sent	

                     else --if EIN is not sent 
                         begin -- @EIN is null
                             if exists
                                 (
                                     select 1
                                     from   #Groups
                                 ) -- @GroupID is not null or @GroupLOB is not null
                                 begin
                                     insert into    #ResultSet
                                         (
                                             RecordID
                                            ,CheckID
                                            ,CheckNumber
                                            ,CheckDate
                                            ,CheckAmount
                                            ,CheckStatusCode
                                            ,CheckVoidReason
                                            ,ExternalCheckNumber
                                            ,ExternalCheckCurrency
                                            ,ExternalCheckAmount
                                            ,ExternalConversionRate
                                            ,ExternalMethodOfPaymentCode
                                            ,ExternalCheckDate
                                            ,CheckClearedDate
                                            ,PaymentWizardJobId
                                            ,ParentAccountID
                                            ,CashAccountId
                                            ,RecordStatusCode
                                            ,RecordTypeCode
                                            ,EntityTypeCode
                                            ,CreationDate
                                            ,ProcessedDate
                                            ,VoidDate
                                            ,CheckGroupID
                                            ,Notes
                                            ,LastUpdatedAt
                                            ,LastUpdatedBy
                                            --extra columns
                                            ,FinancialRecordID
                                            ,FinancialRecordDetailID
                                            ,RecordDetailId
                                            ,RecordDetailType
                                            ,PaymentClassCode
                                            ,ReferenceNumber
                                            ,DetailPaidAmount
                                            ,DetailGroupID
                                            ,DetailCreationDate
                                            ,AdjustmentVersion
                                            ,RiskGroupVendorMapID
                                            ,LineNumber
                                            ,LinePaidAmount
                                            ,MethodOfPayment
                                            ,WriteOffReasonCode
                                         )
                                     select R.RecordID
                                           ,C.CheckId
                                           ,C.CheckNumber
                                           ,C.DateCreated
                                           ,case when R.RecordType = 'PR' then - (C.Amount)
                                                 else C.Amount
                                            end
                                           ,case when
                                                     (
                                                         @ShowVoidedChecks = 'Y'
                                                         and C.CheckStatus = 'VD'
                                                     ) then 'PRT'
                                                 else C.CheckStatus
                                            end
                                           ,case when
                                                     (
                                                         @ShowVoidedChecks = 'Y'
                                                         and C.CheckStatus = 'VD'
                                                     ) then null
                                                 else C.VoidReason
                                            end
                                           ,C.ExternalCheckNumber
                                           ,C.ExternalCheckCurrency
                                           ,case when R.RecordType = 'PR' then - (C.ExternalCheckAmount)
                                                 else C.ExternalCheckAmount
                                            end
                                           ,C.ExternalConversionRate
                                           ,C.ExternalMethodOfPayment
                                           ,C.ExternalCheckDate
                                           ,C.CheckClearedDate
                                           ,C.JobId
                                           ,R.ParentAccountID
                                           ,C.CashAccountId
                                           ,case when
                                                     (
                                                         @ShowVoidedChecks = 'Y'
                                                         and C.CheckStatus = 'VD'
                                                     ) then 'PRT'
                                                 else R.RecordStatus
                                            end
                                           ,R.RecordType
                                           ,R.EntityType
                                           ,R.CreationDate
                                           ,R.ProcessedDate
                                           ,case when
                                                     (
                                                         @ShowVoidedChecks = 'Y'
                                                         and C.CheckStatus = 'VD'
                                                     ) then null
                                                 else R.VoidDate
                                            end
                                           ,R.GroupID
                                           ,R.Notes
                                           ,R.LastUpdatedAt
                                           ,R.LastUpdatedBy
                                            --new columns
                                           ,R2.RecordID
                                           ,RD2.RecordDetailID
                                           ,RD.ItemID
                                           ,RD.ItemType
                                           ,R2.PaymentClass
                                           ,R2.ReferenceNumber
                                           ,R2.Amount
                                           ,R2.GroupID
                                           ,R2.CreationDate
                                           ,R2.Adjustmentversion
                                           ,R2.RiskGroupVendorMapID
                                           ,RD2.ItemID
                                           ,RD2.TotalAmount
                                           ,R.MethodOfPayment
                                           ,C.WriteOffReason
                                     from   Checks C
                                            inner join Records R
                                                on R.RecordType in ('PS', isnull(@PaymentReceived, ''), isnull(@WriteOff, ''))
                                                   and  R.ReferenceNumber = C.CheckId
                                                   and  C.CashAccountId in
                                                            (
                                                                select  CashAccountId
                                                                from    #CashAccounts
                                                            )
                                                   and  R.EntityType = isnull(@EntityType, R.EntityType)
                                                   and  isnull(R.MethodOfPayment, '') = isnull(isnull(@MethodOfPayment, R.MethodOfPayment), '')
                                            inner join RecordDetails RD
                                                on R.RecordID = RD.RecordID
                                            inner join Records R2
                                                on RD.ItemID = R2.RecordID
                                                   and  R2.RecordType = isnull(@RecordType, R2.RecordType)
                                                   and  isnull(R2.PaymentClass, '') = isnull(@PaymentClass, isnull(R2.PaymentClass, ''))
                                                   and  not (
                                                                @UseProvidersTable = 'Y'
                                                                and R2.ReferenceNumber not in
                                                                        (
                                                                            select  ClaimId
                                                                            from    Claims
                                                                            where   ProviderId in
                                                                                        (
                                                                                            select  ProviderID
                                                                                            from    @Providers
                                                                                        )
                                                                        )
                                                            )
                                            inner join EntityAccountMap EAM
                                                on EAM.AccountID = R.ParentAccountID
                                                   and  EAM.EntityType = 'VDR'
                                            inner join Vendors V
                                                on EAM.EntityID = V.VendorId
                                                   and  isnull(V.VendorClass, '') = isnull(isnull(@VendorClass, V.VendorClass), '')
                                                   and  isnull(V.VendorSubclass, '') = isnull(isnull(@VendorSubClass, V.VendorSubclass), '')
                                            inner join RecordDetails RD2
                                                on R2.RecordID = RD2.RecordID
                                                   and  RD2.ItemType in ('CL', 'CPM', 'RTM', 'CFD', 'IP', 'AIP', 'AIA', 'IF', 'MPD', 'BPR', 'UVP', 'UVW', 'MP')
                                            --filter the non selected claims out
                                            inner join #Groups G
                                                on R2.GroupID = G.GroupID
                                     where  (
                                                (
                                                    R.RecordType = 'PS'
                                                    and C.DateCreated
                                            between @StartDate
                                            and     @EndDate
                                                )
                                                or
                                                    (
                                                        R.RecordType = 'PR'
                                                        and R.CreationDate
                                            between @StartDate
                                            and     @EndDate
                                                    )
                                                or
                                                    (
                                                        R.RecordType = 'WO'
                                                        and C.DateCreated
                                            between @StartDate
                                            and     @EndDate
                                                    )
                                            )
                                            and isnull(C.CheckNumber, '') = isnull(@CheckNumber, isnull(C.CheckNumber, ''))
                                            and isnull(C.JobId, -1) = isnull(@JobId, isnull(C.JobId, -1))
                                            and C.CheckStatus = isnull(@CheckStatus, C.CheckStatus)
                                            and C.CheckStatus != case when @ShowPaymentWizardVoidedChecks = 'Y' then ''
                                                                      else 'PWV'
                                                                 end
                                     union
                                     select R.RecordID
                                           ,C.CheckId
                                           ,C.CheckNumber
                                           ,C.DateCreated
                                           ,case when R.RecordType = 'PR' then - (C.Amount)
                                                 else C.Amount
                                            end
                                           ,case when
                                                     (
                                                         @ShowVoidedChecks = 'Y'
                                                         and C.CheckStatus = 'VD'
                                                     ) then 'PRT'
                                                 else C.CheckStatus
                                            end
                                           ,case when
                                                     (
                                                         @ShowVoidedChecks = 'Y'
                                                         and C.CheckStatus = 'VD'
                                                     ) then null
                                                 else C.VoidReason
                                            end
                                           ,C.ExternalCheckNumber
                                           ,C.ExternalCheckCurrency
                                           ,case when R.RecordType = 'PR' then - (C.ExternalCheckAmount)
                                                 else C.ExternalCheckAmount
                                            end
                                           ,C.ExternalConversionRate
                                           ,C.ExternalMethodOfPayment
                                           ,C.ExternalCheckDate
                                           ,C.CheckClearedDate
                                           ,C.JobId
                                           ,R.ParentAccountID
                                           ,C.CashAccountId
                                           ,case when
                                                     (
                                                         @ShowVoidedChecks = 'Y'
                                                         and C.CheckStatus = 'VD'
                                                     ) then 'PRT'
                                                 else R.RecordStatus
                                            end
                                           ,R.RecordType
                                           ,R.EntityType
                                           ,R.CreationDate
                                           ,R.ProcessedDate
                                           ,case when
                                                     (
                                                         @ShowVoidedChecks = 'Y'
                                                         and C.CheckStatus = 'VD'
                                                     ) then null
                                                 else R.VoidDate
                                            end
                                           ,R.GroupID
                                           ,R.Notes
                                           ,R.LastUpdatedAt
                                           ,R.LastUpdatedBy
                                            --new columns
                                           ,R2.RecordID
                                           ,null
                                           ,RD.ItemID
                                           ,RD.ItemType
                                           ,R2.PaymentClass
                                           ,R2.ReferenceNumber
                                           ,R2.Amount
                                           ,R2.GroupID
                                           ,R2.CreationDate
                                           ,R2.Adjustmentversion
                                           ,R2.RiskGroupVendorMapID
                                           ,CR.LineNumber
                                           ,0.00
                                           ,R.MethodOfPayment
                                           ,C.WriteOffReason
                                     from   Checks C
                                            inner join Records R
                                                on R.RecordType in ('PS', isnull(@PaymentReceived, ''), isnull(@WriteOff, ''))
                                                   and  R.ReferenceNumber = C.CheckId
                                                   and  C.CashAccountId in
                                                            (
                                                                select  CashAccountId
                                                                from    #CashAccounts
                                                            )
                                                   and  R.EntityType = isnull(@EntityType, R.EntityType)
                                                   and  isnull(R.MethodOfPayment, '') = isnull(isnull(@MethodOfPayment, R.MethodOfPayment), '')
                                            inner join RecordDetails RD
                                                on R.RecordID = RD.RecordID
                                            inner join Records R2
                                                on RD.ItemID = R2.RecordID
                                                   and  R2.RecordType in ('CA', 'INF')
                                                   and  isnull(R2.PaymentClass, '') = isnull(@PaymentClass, isnull(R2.PaymentClass, ''))
                                                   and  not (
                                                                @UseProvidersTable = 'Y'
                                                                and R2.ReferenceNumber not in
                                                                        (
                                                                            select  ClaimId
                                                                            from    Claims
                                                                            where   ProviderId in
                                                                                        (
                                                                                            select  ProviderID
                                                                                            from    @Providers
                                                                                        )
                                                                        )
                                                            )
                                            inner join Claim_Details CD
                                                on R2.ReferenceNumber = CD.ClaimID
                                                   and  R2.Adjustmentversion = CD.AdjustmentVersion
                                                   and  not exists
                                 (
                                     select 1
                                     from   RecordDetails RD2
                                     where  R2.RecordID = RD2.RecordID
                                            and RD2.ItemID = CD.LineNumber
                                 )
                                            inner join Claim_Results CR
                                                on R2.ReferenceNumber = CR.ClaimId
                                                   and  R2.Adjustmentversion = CR.AdjustmentVersion
                                                   and  CD.LineNumber = CR.LineNumber
                                            inner join EntityAccountMap EAM
                                                on EAM.AccountID = R.ParentAccountID
                                                   and  EAM.EntityType = 'VDR'
                                            inner join Vendors V
                                                on EAM.EntityID = V.VendorId
                                                   and  isnull(V.VendorClass, '') = isnull(isnull(@VendorClass, V.VendorClass), '')
                                                   and  isnull(V.VendorSubclass, '') = isnull(isnull(@VendorSubClass, V.VendorSubclass), '')
                                            --filter the non selected claims out
                                            inner join #Groups G
                                                on R2.GroupID = G.GroupID
                                     where  (
                                                (
                                                    R.RecordType = 'PS'
                                                    and C.DateCreated
                                            between @StartDate
                                            and     @EndDate
                                                )
                                                or
                                                    (
                                                        R.RecordType = 'PR'
                                                        and R.CreationDate
                                            between @StartDate
                                            and     @EndDate
                                                    )
                                                or
                                                    (
                                                        R.RecordType = 'WO'
                                                        and C.DateCreated
                                            between @StartDate
                                            and     @EndDate
                                                    )
                                            )
                                            and isnull(C.CheckNumber, '') = isnull(@CheckNumber, isnull(C.CheckNumber, ''))
                                            and isnull(C.JobId, -1) = isnull(@JobId, isnull(C.JobId, -1))
                                            and C.CheckStatus = isnull(@CheckStatus, C.CheckStatus)
                                            and C.CheckStatus != case when @ShowPaymentWizardVoidedChecks = 'Y' then ''
                                                                      else 'PWV'
                                                                 end
                                     option (recompile)

                                     select @error = @@error
                                     if @error != 0
                                         begin
                                             select @ProcedureStep = 2
                                             select @UserMsg = 'Check Register could not be created. Contact System Administrator.'
                                             select @LogMsg = 'Insert failed for checks that were paid. Error: ' + convert(varchar, @error) + ' occurred.'
                                             raiserror(
                                                          65500
                                                         ,1
                                                         ,1
                                                         ,@ProductName
                                                         ,@ProcedureName
                                                         ,@ProcedureStep
                                                         ,@UserMsg
                                                         ,@LogMsg
                                                         ,@SessionID
                                                         ,-1
                                                         ,@rowcount
                                                         ,1
                                                      )
                                             goto AppErrorExit
                                         end

                                     if @ShowVoidedChecks = 'Y'
                                         begin

                                             insert into    #ResultSet
                                                 (
                                                     RecordID
                                                    ,CheckID
                                                    ,CheckNumber
                                                    ,CheckDate
                                                    ,CheckAmount
                                                    ,CheckVoidReason
                                                    ,CheckStatusCode
                                                    ,ExternalCheckNumber
                                                    ,ExternalCheckCurrency
                                                    ,ExternalCheckAmount
                                                    ,ExternalMethodOfPaymentCode
                                                    ,ExternalCheckDate
                                                    ,CheckClearedDate
                                                    ,ExternalConversionRate
                                                    ,PaymentWizardJobId
                                                    ,ParentAccountID
                                                    ,CashAccountId
                                                    ,RecordStatusCode
                                                    ,RecordTypeCode
                                                    ,EntityTypeCode
                                                    ,CreationDate
                                                    ,ProcessedDate
                                                    ,VoidDate
                                                    ,CheckGroupID
                                                    ,Notes
                                                    ,LastUpdatedAt
                                                    ,LastUpdatedBy
                                                    --extra columns
                                                    ,FinancialRecordID
                                                    ,FinancialRecordDetailID
                                                    ,RecordDetailId
                                                    ,RecordDetailType
                                                    ,ReferenceNumber
                                                    ,DetailPaidAmount
                                                    ,DetailGroupID
                                                    ,DetailCreationDate
                                                    ,PaymentClassCode
                                                    ,AdjustmentVersion
                                                    ,RiskGroupVendorMapID
                                                    ,LineNumber
                                                    ,LinePaidAmount
                                                    ,MethodOfPayment
                                                    ,VoidInsert
                                                    ,WriteOffReasonCode
                                                 )
                                             select R.RecordID
                                                   ,C.CheckId
                                                   ,C.CheckNumber
                                                   ,C.DateCreated
                                                   ,- (C.Amount)
                                                   ,C.VoidReason
                                                   ,C.CheckStatus
                                                   ,C.ExternalCheckNumber
                                                   ,C.ExternalCheckCurrency
                                                   ,- (C.ExternalCheckAmount)
                                                   ,C.ExternalMethodOfPayment
                                                   ,C.ExternalCheckDate
                                                   ,C.CheckClearedDate
                                                   ,C.ExternalConversionRate
                                                   ,C.JobId
                                                   ,R.ParentAccountID
                                                   ,C.CashAccountId
                                                   ,R.RecordStatus
                                                   ,R.RecordType
                                                   ,R.EntityType
                                                   ,R.CreationDate
                                                   ,R.ProcessedDate
                                                   ,R.VoidDate
                                                   ,R.GroupID
                                                   ,R.Notes
                                                   ,R.LastUpdatedAt
                                                   ,R.LastUpdatedBy
                                                    --new columns
                                                   ,R2.RecordID
                                                   ,RD2.RecordDetailID
                                                   ,RD.ItemID
                                                   ,RD.ItemType
                                                   ,R2.ReferenceNumber
                                                   ,- (R2.Amount)
                                                   ,R2.GroupID
                                                   ,R2.CreationDate
                                                   ,R2.PaymentClass
                                                   ,R2.Adjustmentversion
                                                   ,R2.RiskGroupVendorMapID
                                                   ,RD2.ItemID
                                                   ,- (RD2.TotalAmount)
                                                   ,R.MethodOfPayment
                                                   ,'Y'
                                                   ,C.WriteOffReason
                                             from   Checks C
                                                    inner join Records R
                                                        on R.RecordType in ('PS', isnull(@PaymentReceived, ''), isnull(@WriteOff, ''))
                                                           and  R.ReferenceNumber = C.CheckId
                                                           and  C.CashAccountId in
                                                                    (
                                                                        select  CashAccountId
                                                                        from    #CashAccounts
                                                                    )
                                                           and  R.EntityType = isnull(@EntityType, R.EntityType)
                                                           and  isnull(R.MethodOfPayment, '') = isnull(isnull(@MethodOfPayment, R.MethodOfPayment), '')
                                                    inner join RecordDetails RD
                                                        on R.RecordID = RD.RecordID
                                                    inner join Records R2
                                                        on RD.ItemID = R2.RecordID
                                                           and  R2.RecordType = isnull(@RecordType, R2.RecordType)
                                                           and  isnull(R2.PaymentClass, '') = isnull(@PaymentClass, isnull(R2.PaymentClass, ''))
                                                           and  not (
                                                                        @UseProvidersTable = 'Y'
                                                                        and R2.ReferenceNumber not in
                                                                                (
                                                                                    select  ClaimId
                                                                                    from    Claims
                                                                                    where   ProviderId in
                                                                                                (
                                                                                                    select  ProviderID
                                                                                                    from    @Providers
                                                                                                )
                                                                                )
                                                                    )
                                                    inner join RecordDetails RD2
                                                        on R2.RecordID = RD2.RecordID
                                                           and  RD2.ItemType in ('CL', 'IP', 'AIP', 'AIA', 'IF', 'MPD', 'BPR', 'UVP', 'UVW', 'MP')
                                                    --filter the non selected claims out
                                                    inner join #Groups G
                                                        on R2.GroupID = G.GroupID
                                                    inner join EntityAccountMap EAM
                                                        on EAM.AccountID = R.ParentAccountID
                                                           and  EAM.EntityType = 'VDR'
                                                    inner join Vendors V
                                                        on EAM.EntityID = V.VendorId
                                                           and  isnull(V.VendorClass, '') = isnull(isnull(@VendorClass, V.VendorClass), '')
                                                           and  isnull(V.VendorSubclass, '') = isnull(isnull(@VendorSubClass, V.VendorSubclass), '')
                                             where  C.DateVoided
                                                    between @StartDate
                                                    and     @EndDate
                                                    and isnull(C.CheckNumber, '') = isnull(@CheckNumber, isnull(C.CheckNumber, ''))
                                                    and isnull(C.JobId, -1) = isnull(@JobId, isnull(C.JobId, -1))
                                                    and C.CheckStatus = isnull(@CheckStatus, C.CheckStatus)
                                                    and (C.CheckStatus != 'PWV')
                                             union
                                             select R.RecordID
                                                   ,C.CheckId
                                                   ,C.CheckNumber
                                                   ,C.DateCreated
                                                   ,- (C.Amount)
                                                   ,C.VoidReason
                                                   ,C.CheckStatus
                                                   ,C.ExternalCheckNumber
                                                   ,C.ExternalCheckCurrency
                                                   ,- (C.ExternalCheckAmount)
                                                   ,C.ExternalMethodOfPayment
                                                   ,C.ExternalCheckDate
                                                   ,C.CheckClearedDate
                                                   ,C.ExternalConversionRate
                                                   ,C.JobId
                                                   ,R.ParentAccountID
                                                   ,C.CashAccountId
                                                   ,R.RecordStatus
                                                   ,R.RecordType
                                                   ,R.EntityType
                                                   ,R.CreationDate
                                                   ,R.ProcessedDate
                                                   ,R.VoidDate
                                                   ,R.GroupID
                                                   ,R.Notes
                                                   ,R.LastUpdatedAt
                                                   ,R.LastUpdatedBy
                                                    --new columns
                                                   ,R2.RecordID
                                                   ,null
                                                   ,RD.ItemID
                                                   ,RD.ItemType
                                                   ,R2.ReferenceNumber
                                                   ,- (R2.Amount)
                                                   ,R2.GroupID
                                                   ,R2.CreationDate
                                                   ,R2.PaymentClass
                                                   ,R2.Adjustmentversion
                                                   ,R2.RiskGroupVendorMapID
                                                   ,CR.LineNumber
                                                   ,0.00
                                                   ,R.MethodOfPayment
                                                   ,'Y'
                                                   ,C.WriteOffReason
                                             from   Checks C
                                                    inner join Records R
                                                        on R.RecordType in ('PS', isnull(@PaymentReceived, ''), isnull(@WriteOff, ''))
                                                           and  R.ReferenceNumber = C.CheckId
                                                           and  C.CashAccountId in
                                                                    (
                                                                        select  CashAccountId
                                                                        from    #CashAccounts
                                                                    )
                                                           and  R.EntityType = isnull(@EntityType, R.EntityType)
                                                           and  isnull(R.MethodOfPayment, '') = isnull(isnull(@MethodOfPayment, R.MethodOfPayment), '')
                                                    inner join RecordDetails RD
                                                        on R.RecordID = RD.RecordID
                                                    inner join Records R2
                                                        on RD.ItemID = R2.RecordID
                                                           and  R2.RecordType in ('CA', 'INF')
                                                           and  isnull(R2.PaymentClass, '') = isnull(@PaymentClass, isnull(R2.PaymentClass, ''))
                                                           and  not (
                                                                        @UseProvidersTable = 'Y'
                                                                        and R2.ReferenceNumber not in
                                                                                (
                                                                                    select  ClaimId
                                                                                    from    Claims
                                                                                    where   ProviderId in
                                                                                                (
                                                                                                    select  ProviderID
                                                                                                    from    @Providers
                                                                                                )
                                                                                )
                                                                    )
                                                    inner join Claim_Details CD
                                                        on R2.ReferenceNumber = CD.ClaimID
                                                           and  R2.Adjustmentversion = CD.AdjustmentVersion
                                                           and  not exists
                                         (
                                             select 1
                                             from   RecordDetails RD2
                                             where  R2.RecordID = RD2.RecordID
                                                    and RD2.ItemID = CD.LineNumber
                                         )
                                                    inner join Claim_Results CR
                                                        on R2.ReferenceNumber = CR.ClaimId
                                                           and  R2.Adjustmentversion = CR.AdjustmentVersion
                                                           and  CD.LineNumber = CR.LineNumber
                                                    --filter the non selected claims out
                                                    inner join #Groups G
                                                        on R2.GroupID = G.GroupID
                                                    inner join EntityAccountMap EAM
                                                        on EAM.AccountID = R.ParentAccountID
                                                           and  EAM.EntityType = 'VDR'
                                                    inner join Vendors V
                                                        on EAM.EntityID = V.VendorId
                                                           and  isnull(V.VendorClass, '') = isnull(isnull(@VendorClass, V.VendorClass), '')
                                                           and  isnull(V.VendorSubclass, '') = isnull(isnull(@VendorSubClass, V.VendorSubclass), '')
                                             where  C.DateVoided
                                                    between @StartDate
                                                    and     @EndDate
                                                    and isnull(C.CheckNumber, '') = isnull(@CheckNumber, isnull(C.CheckNumber, ''))
                                                    and isnull(C.JobId, -1) = isnull(@JobId, isnull(C.JobId, -1))
                                                    and C.CheckStatus = isnull(@CheckStatus, C.CheckStatus)
                                                    and (C.CheckStatus != 'PWV')
                                             option (recompile)

                                             select @error = @@error
                                             if @error != 0
                                                 begin
                                                     select @ProcedureStep = 2
                                                     select @UserMsg = 'Check Register could not be created. Contact System Administrator.'
                                                     select @LogMsg
                                                         = 'Insert failed for checks that were paid. Error: ' + convert(varchar, @error) + ' occurred.'
                                                     raiserror(
                                                                  65500
                                                                 ,1
                                                                 ,1
                                                                 ,@ProductName
                                                                 ,@ProcedureName
                                                                 ,@ProcedureStep
                                                                 ,@UserMsg
                                                                 ,@LogMsg
                                                                 ,@SessionID
                                                                 ,-1
                                                                 ,@rowcount
                                                                 ,1
                                                              )
                                                     goto AppErrorExit
                                                 end

                                         end --- of "if @ShowVoidedChecks = 'Y'"
                                     else
                                         begin
                                             delete from #ResultSet
                                             where  RecordStatusCode = 'V'
                                         end

                                     if isnull(@EntityType, '') = ''
                                        or  @EntityType = 'CPT' --Capitation (2DL, @EIN is null & @GroupID is not null)
                                         begin
                                             insert into    #ResultSet
                                                 (
                                                     RecordID
                                                    ,CheckID
                                                    ,CheckNumber
                                                    ,CheckDate
                                                    ,CheckAmount
                                                    ,CheckStatusCode
                                                    ,CheckVoidReason
                                                    ,ExternalCheckNumber
                                                    ,ExternalCheckCurrency
                                                    ,ExternalCheckAmount
                                                    ,ExternalConversionRate
                                                    ,ExternalMethodOfPaymentCode
                                                    ,ExternalCheckDate
                                                    ,CheckClearedDate
                                                    ,PaymentWizardJobId
                                                    ,ParentAccountID
                                                    ,CashAccountId
                                                    ,RecordStatusCode
                                                    ,RecordTypeCode
                                                    ,EntityTypeCode
                                                    ,CreationDate
                                                    ,ProcessedDate
                                                    ,VoidDate
                                                    ,CheckGroupID
                                                    ,Notes
                                                    ,LastUpdatedAt
                                                    ,LastUpdatedBy
                                                    --extra columns
                                                    ,FinancialRecordID
                                                    ,FinancialRecordDetailID
                                                    ,RecordDetailId
                                                    ,RecordDetailType
                                                    ,PaymentClassCode
                                                    ,ReferenceNumber
                                                    ,DetailPaidAmount
                                                    ,DetailGroupID
                                                    ,DetailCreationDate
                                                    ,AdjustmentVersion
                                                    ,RiskGroupVendorMapID
                                                    ,LineNumber
                                                    ,LinePaidAmount
                                                    ,MethodOfPayment
                                                    ,RateCoverageType
                                                    ,QualifierId
                                                 )
                                             select R.RecordID
                                                   ,C.CheckId
                                                   ,C.CheckNumber
                                                   ,C.DateCreated
                                                   ,C.Amount
                                                   ,C.CheckStatus
                                                   ,C.VoidReason
                                                   ,C.ExternalCheckNumber
                                                   ,C.ExternalCheckCurrency
                                                   ,C.ExternalCheckAmount
                                                   ,C.ExternalConversionRate
                                                   ,C.ExternalMethodOfPayment
                                                   ,C.ExternalCheckDate
                                                   ,C.CheckClearedDate
                                                   ,C.JobId
                                                   ,R.ParentAccountID
                                                   ,C.CashAccountId
                                                   ,R.RecordStatus
                                                   ,R.RecordType
                                                   ,R.EntityType
                                                   ,R.CreationDate
                                                   ,R.ProcessedDate
                                                   ,R.VoidDate
                                                   ,R.GroupID
                                                   ,R.Notes
                                                   ,R.LastUpdatedAt
                                                   ,R.LastUpdatedBy
                                                    --new columns
                                                   ,CR.CapitationRecordID
                                                   ,CR.CapitationRecordID
                                                   ,CR.CapitationRecordID
                                                   ,CR.RecordType
                                                   ,null
                                                   ,CR.ReferenceID
                                                   ,CR.Amount
                                                   ,CR.GroupID
                                                   ,CR.PostDate
                                                   ,null
                                                   ,CR.RiskGroupVendorMapID
                                                   ,isnull(CR.CapitationRateDetailID, CR.TermedRecordID)
                                                   ,CR.Amount
                                                   ,R.MethodOfPayment
                                                   ,CRD.RateCoverageType
                                                   ,CRD.QualifierId
                                             from   Checks C
                                                    inner join #CashAccounts CA
                                                        on C.CashAccountId = CA.CashAccountId
                                                    inner join Records R
                                                        on R.RecordType = 'PS'
                                                           and  R.ReferenceNumber = C.CheckId
                                                           and  isnull(R.MethodOfPayment, '') = isnull(isnull(@MethodOfPayment, R.MethodOfPayment), '')
                                                    inner join CapitationRecords CR
                                                        on R.RecordID = CR.PaymentRecordID
                                                           and  CR.RecordType = isnull(@RecordType, CR.RecordType)
                                                    left outer join CapitationRateDetails CRD
                                                        on CR.CapitationRateDetailID = CRD.CapitationRateDetailID
                                                    inner join EntityAccountMap EAM
                                                        on EAM.AccountID = R.ParentAccountID
                                                           and  EAM.EntityType = 'VDR'
                                                    inner join Vendors V
                                                        on EAM.EntityID = V.VendorId
                                                           and  isnull(V.VendorClass, '') = isnull(isnull(@VendorClass, V.VendorClass), '')
                                                           and  isnull(V.VendorSubclass, '') = isnull(isnull(@VendorSubClass, V.VendorSubclass), '')
                                                    --filter the non selected claims out
                                                    inner join #Groups G
                                                        on CR.GroupID = G.GroupID
                                             where  C.DateCreated
                                                    between @StartDate
                                                    and     @EndDate
                                                    and isnull(C.CheckNumber, '') = isnull(@CheckNumber, isnull(C.CheckNumber, ''))
                                                    and isnull(C.JobId, -1) = isnull(@JobId, isnull(C.JobId, -1))
                                                    and C.CheckStatus = isnull(@CheckStatus, C.CheckStatus)
                                                    and C.CheckStatus != case when @ShowPaymentWizardVoidedChecks = 'Y' then ''
                                                                              else 'PWV'
                                                                         end
                                             option (recompile)


                                             if @ShowVoidedChecks = 'Y'
                                                 begin
                                                     --Voided capitation checks
                                                     insert into    #ResultSet
                                                         (
                                                             RecordID
                                                            ,CheckID
                                                            ,CheckNumber
                                                            ,CheckDate
                                                            ,CheckAmount
                                                            ,CheckStatusCode
                                                            ,CheckVoidReason
                                                            ,ExternalCheckNumber
                                                            ,ExternalCheckCurrency
                                                            ,ExternalCheckAmount
                                                            ,ExternalConversionRate
                                                            ,ExternalMethodOfPaymentCode
                                                            ,ExternalCheckDate
                                                            ,CheckClearedDate
                                                            ,PaymentWizardJobId
                                                            ,ParentAccountID
                                                            ,CashAccountId
                                                            ,RecordStatusCode
                                                            ,RecordTypeCode
                                                            ,EntityTypeCode
                                                            ,CreationDate
                                                            ,ProcessedDate
                                                            ,VoidDate
                                                            ,CheckGroupID
                                                            ,Notes
                                                            ,LastUpdatedAt
                                                            ,LastUpdatedBy
                                                            --extra columns
                                                            ,FinancialRecordID
                                                            ,FinancialRecordDetailID
                                                            ,RecordDetailId
                                                            ,RecordDetailType
                                                            ,PaymentClassCode
                                                            ,ReferenceNumber
                                                            ,DetailPaidAmount
                                                            ,DetailGroupID
                                                            ,DetailCreationDate
                                                            ,AdjustmentVersion
                                                            ,RiskGroupVendorMapID
                                                            ,LineNumber
                                                            ,LinePaidAmount
                                                            ,MethodOfPayment
                                                            ,RateCoverageType
                                                            ,QualifierId
                                                         )
                                                     select R.RecordID
                                                           ,C.CheckId
                                                           ,C.CheckNumber
                                                           ,C.DateCreated
                                                           ,C.Amount
                                                           ,C.CheckStatus
                                                           ,C.VoidReason
                                                           ,C.ExternalCheckNumber
                                                           ,C.ExternalCheckCurrency
                                                           ,C.ExternalCheckAmount
                                                           ,C.ExternalConversionRate
                                                           ,C.ExternalMethodOfPayment
                                                           ,C.ExternalCheckDate
                                                           ,C.CheckClearedDate
                                                           ,C.JobId
                                                           ,R.ParentAccountID
                                                           ,C.CashAccountId
                                                           ,R.RecordStatus
                                                           ,R.RecordType
                                                           ,R.EntityType
                                                           ,R.CreationDate
                                                           ,R.ProcessedDate
                                                           ,R.VoidDate
                                                           ,R.GroupID
                                                           ,R.Notes
                                                           ,R.LastUpdatedAt
                                                           ,R.LastUpdatedBy
                                                            --new columns
                                                           ,CR.CapitationRecordID
                                                           ,CR.CapitationRecordID
                                                           ,CR.CapitationRecordID
                                                           ,CR.RecordType
                                                           ,null
                                                           ,CR.ReferenceID
                                                           ,CR.Amount
                                                           ,CR.GroupID
                                                           ,CR.PostDate
                                                           ,null
                                                           ,CR.RiskGroupVendorMapID
                                                           ,isnull(CR.CapitationRateDetailID, CR.TermedRecordID)
                                                           ,CR.Amount
                                                           ,R.MethodOfPayment
                                                           ,CRD.RateCoverageType
                                                           ,CRD.QualifierId
                                                     from   Checks C
                                                            inner join #CashAccounts CA
                                                                on C.CashAccountId = CA.CashAccountId
                                                            inner join Records R
                                                                on R.RecordType = 'PS'
                                                                   and  R.ReferenceNumber = C.CheckId
                                                                   and  isnull(R.MethodOfPayment, '') = isnull(isnull(@MethodOfPayment, R.MethodOfPayment), '')
                                                            inner join VoidCapitationCheckDetails VCCD
                                                                on R.RecordID = VCCD.PaymentRecordID
                                                            inner join CapitationRecords CR
                                                                on VCCD.CapitationRecordID = CR.CapitationRecordID
                                                                   and  CR.RecordType = isnull(@RecordType, CR.RecordType)
                                                            left outer join CapitationRateDetails CRD
                                                                on CR.CapitationRateDetailID = CRD.CapitationRateDetailID
                                                            inner join EntityAccountMap EAM
                                                                on EAM.AccountID = R.ParentAccountID
                                                                   and  EAM.EntityType = 'VDR'
                                                            inner join Vendors V
                                                                on EAM.EntityID = V.VendorId
                                                                   and  isnull(V.VendorClass, '') = isnull(isnull(@VendorClass, V.VendorClass), '')
                                                                   and  isnull(V.VendorSubclass, '') = isnull(isnull(@VendorSubClass, V.VendorSubclass), '')
                                                            --filter the non selected claims out
                                                            inner join #Groups G
                                                                on CR.GroupID = G.GroupID
                                                     where  C.DateCreated
                                                            between @StartDate
                                                            and     @EndDate
                                                            and isnull(C.CheckNumber, '') = isnull(@CheckNumber, isnull(C.CheckNumber, ''))
                                                            and isnull(C.JobId, -1) = isnull(@JobId, isnull(C.JobId, -1))
                                                            and C.CheckStatus = isnull(@CheckStatus, C.CheckStatus)
                                                            and C.CheckStatus != 'PWV'
                                                     option (recompile)


                                                     --Voided capitation checks with negative amounts
                                                     insert into    #ResultSet
                                                         (
                                                             RecordID
                                                            ,CheckID
                                                            ,CheckNumber
                                                            ,CheckDate
                                                            ,CheckAmount
                                                            ,CheckVoidReason
                                                            ,CheckStatusCode
                                                            ,ExternalCheckNumber
                                                            ,ExternalCheckCurrency
                                                            ,ExternalCheckAmount
                                                            ,ExternalMethodOfPaymentCode
                                                            ,ExternalCheckDate
                                                            ,CheckClearedDate
                                                            ,ExternalConversionRate
                                                            ,PaymentWizardJobId
                                                            ,ParentAccountID
                                                            ,CashAccountId
                                                            ,RecordStatusCode
                                                            ,RecordTypeCode
                                                            ,EntityTypeCode
                                                            ,CreationDate
                                                            ,ProcessedDate
                                                            ,VoidDate
                                                            ,CheckGroupID
                                                            ,Notes
                                                            ,LastUpdatedAt
                                                            ,LastUpdatedBy
                                                            --extra columns
                                                            ,FinancialRecordID
                                                            ,FinancialRecordDetailID
                                                            ,RecordDetailId
                                                            ,RecordDetailType
                                                            ,ReferenceNumber
                                                            ,DetailPaidAmount
                                                            ,DetailGroupID
                                                            ,DetailCreationDate
                                                            ,PaymentClassCode
                                                            ,AdjustmentVersion
                                                            ,RiskGroupVendorMapID
                                                            ,LineNumber
                                                            ,LinePaidAmount
                                                            ,MethodOfPayment
                                                            ,VoidInsert
                                                            ,RateCoverageType
                                                            ,QualifierId
                                                         )
                                                     select R.RecordID
                                                           ,C.CheckId
                                                           ,C.CheckNumber
                                                           ,C.DateCreated
                                                           ,- (C.Amount)
                                                           ,C.VoidReason
                                                           ,C.CheckStatus
                                                           ,C.ExternalCheckNumber
                                                           ,C.ExternalCheckCurrency
                                                           ,- (C.ExternalCheckAmount)
                                                           ,C.ExternalMethodOfPayment
                                                           ,C.ExternalCheckDate
                                                           ,C.CheckClearedDate
                                                           ,C.ExternalConversionRate
                                                           ,C.JobId
                                                           ,R.ParentAccountID
                                                           ,C.CashAccountId
                                                           ,R.RecordStatus
                                                           ,R.RecordType
                                                           ,R.EntityType
                                                           ,R.CreationDate
                                                           ,R.ProcessedDate
                                                           ,R.VoidDate
                                                           ,R.GroupID
                                                           ,R.Notes
                                                           ,R.LastUpdatedAt
                                                           ,R.LastUpdatedBy
                                                            --new columns
                                                           ,CR.CapitationRecordID
                                                           ,CR.CapitationRecordID
                                                           ,CR.CapitationRecordID
                                                           ,CR.RecordType
                                                           ,CR.ReferenceID
                                                           ,- (CR.Amount)
                                                           ,CR.GroupID
                                                           ,CR.PostDate
                                                           ,null
                                                           ,null
                                                           ,CR.RiskGroupVendorMapID
                                                           ,isnull(CR.CapitationRateDetailID, CR.TermedRecordID)
                                                           ,- (CR.Amount)
                                                           ,R.MethodOfPayment
                                                           ,'Y'
                                                           ,CRD.RateCoverageType
                                                           ,CRD.QualifierId
                                                     from   Checks C
                                                            inner join #CashAccounts CA
                                                                on C.CashAccountID = CA.CashAccountId
                                                            inner join Records R
                                                                on R.RecordType = 'PS'
                                                                   and  R.ReferenceNumber = C.CheckId
                                                                   and  isnull(R.MethodOfPayment, '') = isnull(isnull(@MethodOfPayment, R.MethodOfPayment), '')
                                                            inner join VoidCapitationCheckDetails VCCD
                                                                on R.RecordID = VCCD.PaymentRecordID
                                                            inner join CapitationRecords CR
                                                                on VCCD.CapitationRecordID = CR.CapitationRecordID
                                                                   and  CR.RecordType = isnull(@RecordType, CR.RecordType)
                                                            left outer join CapitationRateDetails CRD
                                                                on CR.CapitationRateDetailID = CRD.CapitationRateDetailID
                                                            --filter the non selected claims out
                                                            inner join #Groups G
                                                                on CR.GroupID = G.GroupID
                                                            inner join EntityAccountMap EAM
                                                                on EAM.AccountID = R.ParentAccountID
                                                                   and  EAM.EntityType = 'VDR'
                                                            inner join Vendors V
                                                                on EAM.EntityID = V.VendorId
                                                                   and  isnull(V.VendorClass, '') = isnull(isnull(@VendorClass, V.VendorClass), '')
                                                                   and  isnull(V.VendorSubclass, '') = isnull(isnull(@VendorSubClass, V.VendorSubclass), '')
                                                     where  C.DateVoided
                                                            between @StartDate
                                                            and     @EndDate
                                                            and isnull(C.CheckNumber, '') = isnull(@CheckNumber, isnull(C.CheckNumber, ''))
                                                            and isnull(C.JobId, -1) = isnull(@JobId, isnull(C.JobId, -1))
                                                            and C.CheckStatus = isnull(@CheckStatus, C.CheckStatus)
                                                            and C.CheckStatus != 'PWV'
                                                     option (recompile)

                                                     select @error = @@error
                                                     if @error != 0
                                                         begin
                                                             select @ProcedureStep = 2
                                                             select @UserMsg = 'Check Register could not be created. Contact System Administrator.'
                                                             select @LogMsg
                                                                 = 'Insert failed for checks that were paid. Error: ' + convert(varchar, @error) + ' occurred.'
                                                             raiserror(
                                                                          65500
                                                                         ,1
                                                                         ,1
                                                                         ,@ProductName
                                                                         ,@ProcedureName
                                                                         ,@ProcedureStep
                                                                         ,@UserMsg
                                                                         ,@LogMsg
                                                                         ,@SessionID
                                                                         ,-1
                                                                         ,@rowcount
                                                                         ,1
                                                                      )
                                                             goto AppErrorExit
                                                         end
                                                 end --- of "if @ShowVoidedChecks = 'Y'"
                                         end -- if isnull(@EntityType,'') = '' or @EntityType ='CPT' --Capitation

                                     if (
                                            isnull(@EntityType, '') = ''
                                            or  @EntityType = 'GCP'
                                        ) -- 2DL, @EIN is null & @GroupID is not null  
                                         begin
                                             insert into    #ResultSet
                                                 (
                                                     RecordID
                                                    ,CheckID
                                                    ,CheckNumber
                                                    ,CheckDate
                                                    ,CheckAmount
                                                    ,CheckStatusCode
                                                    ,CheckVoidReason
                                                    ,ExternalCheckNumber
                                                    ,ExternalCheckCurrency
                                                    ,ExternalCheckAmount
                                                    ,ExternalConversionRate
                                                    ,ExternalMethodOfPaymentCode
                                                    ,ExternalCheckDate
                                                    ,CheckClearedDate
                                                    ,PaymentWizardJobId
                                                    ,ParentAccountID
                                                    ,CashAccountId
                                                    ,RecordStatusCode
                                                    ,RecordTypeCode
                                                    ,EntityTypeCode
                                                    ,CreationDate
                                                    ,ProcessedDate
                                                    ,VoidDate
                                                    ,CheckGroupID
                                                    ,Notes
                                                    ,LastUpdatedAt
                                                    ,LastUpdatedBy
                                                    --extra columns
                                                    ,FinancialRecordID
                                                    ,FinancialRecordDetailID
                                                    ,RecordDetailId
                                                    ,RecordDetailType
                                                    ,PaymentClassCode
                                                    ,ReferenceNumber
                                                    ,DetailPaidAmount
                                                    ,DetailGroupID
                                                    ,DetailCreationDate
                                                    ,AdjustmentVersion
                                                    ,RiskGroupVendorMapID
                                                    ,LineNumber
                                                    ,LinePaidAmount
                                                    ,MethodOfPayment
                                                    ,RateCoverageType
                                                    ,QualifierId
                                                 )
                                             select R.RecordID
                                                   ,C.CheckId
                                                   ,C.CheckNumber
                                                   ,C.DateCreated
                                                   ,C.Amount
                                                   ,C.CheckStatus
                                                   ,C.VoidReason
                                                   ,C.ExternalCheckNumber
                                                   ,C.ExternalCheckCurrency
                                                   ,C.ExternalCheckAmount
                                                   ,C.ExternalConversionRate
                                                   ,C.ExternalMethodOfPayment
                                                   ,C.ExternalCheckDate
                                                   ,C.CheckClearedDate
                                                   ,C.JobId
                                                   ,R.ParentAccountID
                                                   ,C.CashAccountId
                                                   ,R.RecordStatus
                                                   ,R.RecordType
                                                   ,R.EntityType
                                                   ,R.CreationDate
                                                   ,R.ProcessedDate
                                                   ,R.VoidDate
                                                   ,R.GroupID
                                                   ,R.Notes
                                                   ,R.LastUpdatedAt
                                                   ,R.LastUpdatedBy
                                                    --new columns
                                                   ,CR.GlobalCapitationRecordID
                                                   ,CR.GlobalCapitationRecordID
                                                   ,CR.GlobalCapitationRecordID
                                                   ,CR.RecordType
                                                   ,null
                                                   ,CR.ReferenceID
                                                   ,CR.Amount
                                                   ,CR.GroupID
                                                   ,CR.PostDate
                                                   ,null
                                                   ,null
                                                   ,isnull(CR.CapitationRateDetailID, CR.TermedRecordID)
                                                   ,CR.Amount
                                                   ,R.MethodOfPayment
                                                   ,CRD.RateCoverageType
                                                   ,CRD.QualifierId
                                             from   Checks C
                                                    inner join #CashAccounts CA
                                                        on C.CashAccountId = CA.CashAccountId
                                                    inner join Records R
                                                        on R.RecordType = 'PS'
                                                           and  R.ReferenceNumber = C.CheckId
                                                           and  isnull(R.MethodOfPayment, '') = isnull(isnull(@MethodOfPayment, R.MethodOfPayment), '')
                                                    inner join GlobalCapitationRecords CR
                                                        on R.RecordID = CR.PaymentRecordID
                                                           and  CR.RecordType = isnull(@RecordType, CR.RecordType)
                                                    left outer join CapitationRateDetails CRD
                                                        on CR.CapitationRateDetailID = CRD.CapitationRateDetailID
                                                    inner join EntityAccountMap EAM
                                                        on EAM.AccountID = R.ParentAccountID
                                                           and  EAM.EntityType = 'VDR'
                                                    inner join Vendors V
                                                        on EAM.EntityID = V.VendorId
                                                           and  isnull(V.VendorClass, '') = isnull(isnull(@VendorClass, V.VendorClass), '')
                                                           and  isnull(V.VendorSubclass, '') = isnull(isnull(@VendorSubClass, V.VendorSubclass), '')
                                                    --filter the non selected claims out
                                                    inner join #Groups G
                                                        on CR.GroupID = G.GroupID
                                             where  C.DateCreated
                                                    between @StartDate
                                                    and     @EndDate
                                                    and isnull(C.CheckNumber, '') = isnull(@CheckNumber, isnull(C.CheckNumber, ''))
                                                    and isnull(C.JobId, -1) = isnull(@JobId, isnull(C.JobId, -1))
                                                    and C.CheckStatus = isnull(@CheckStatus, C.CheckStatus)
                                                    and C.CheckStatus != case when @ShowPaymentWizardVoidedChecks = 'Y' then ''
                                                                              else 'PWV'
                                                                         end
                                             option (recompile)


                                             if @ShowVoidedChecks = 'Y'
                                                 begin
                                                     --Voided capitation checks
                                                     insert into    #ResultSet
                                                         (
                                                             RecordID
                                                            ,CheckID
                                                            ,CheckNumber
                                                            ,CheckDate
                                                            ,CheckAmount
                                                            ,CheckStatusCode
                                                            ,CheckVoidReason
                                                            ,ExternalCheckNumber
                                                            ,ExternalCheckCurrency
                                                            ,ExternalCheckAmount
                                                            ,ExternalConversionRate
                                                            ,ExternalMethodOfPaymentCode
                                                            ,ExternalCheckDate
                                                            ,CheckClearedDate
                                                            ,PaymentWizardJobId
                                                            ,ParentAccountID
                                                            ,CashAccountId
                                                            ,RecordStatusCode
                                                            ,RecordTypeCode
                                                            ,EntityTypeCode
                                                            ,CreationDate
                                                            ,ProcessedDate
                                                            ,VoidDate
                                                            ,CheckGroupID
                                                            ,Notes
                                                            ,LastUpdatedAt
                                                            ,LastUpdatedBy
                                                            --extra columns
                                                            ,FinancialRecordID
                                                            ,FinancialRecordDetailID
                                                            ,RecordDetailId
                                                            ,RecordDetailType
                                                            ,PaymentClassCode
                                                            ,ReferenceNumber
                                                            ,DetailPaidAmount
                                                            ,DetailGroupID
                                                            ,DetailCreationDate
                                                            ,AdjustmentVersion
                                                            ,RiskGroupVendorMapID
                                                            ,LineNumber
                                                            ,LinePaidAmount
                                                            ,MethodOfPayment
                                                            ,RateCoverageType
                                                            ,QualifierId
                                                         )
                                                     select R.RecordID
                                                           ,C.CheckId
                                                           ,C.CheckNumber
                                                           ,C.DateCreated
                                                           ,C.Amount
                                                           ,C.CheckStatus
                                                           ,C.VoidReason
                                                           ,C.ExternalCheckNumber
                                                           ,C.ExternalCheckCurrency
                                                           ,C.ExternalCheckAmount
                                                           ,C.ExternalConversionRate
                                                           ,C.ExternalMethodOfPayment
                                                           ,C.ExternalCheckDate
                                                           ,C.CheckClearedDate
                                                           ,C.JobId
                                                           ,R.ParentAccountID
                                                           ,C.CashAccountId
                                                           ,R.RecordStatus
                                                           ,R.RecordType
                                                           ,R.EntityType
                                                           ,R.CreationDate
                                                           ,R.ProcessedDate
                                                           ,R.VoidDate
                                                           ,R.GroupID
                                                           ,R.Notes
                                                           ,R.LastUpdatedAt
                                                           ,R.LastUpdatedBy
                                                            --new columns
                                                           ,CR.GlobalCapitationRecordID
                                                           ,CR.GlobalCapitationRecordID
                                                           ,CR.GlobalCapitationRecordID
                                                           ,CR.RecordType
                                                           ,null
                                                           ,CR.ReferenceID
                                                           ,CR.Amount
                                                           ,CR.GroupID
                                                           ,CR.PostDate
                                                           ,null
                                                           ,null
                                                           ,isnull(CR.CapitationRateDetailID, CR.TermedRecordID)
                                                           ,CR.Amount
                                                           ,R.MethodOfPayment
                                                           ,CRD.RateCoverageType
                                                           ,CRD.QualifierId
                                                     from   Checks C
                                                            inner join #CashAccounts CA
                                                                on C.CashAccountId = CA.CashAccountId
                                                            inner join Records R
                                                                on R.RecordType = 'PS'
                                                                   and  R.ReferenceNumber = C.CheckId
                                                                   and  isnull(R.MethodOfPayment, '') = isnull(isnull(@MethodOfPayment, R.MethodOfPayment), '')
                                                            inner join VoidGlobalCapitationCheckDetails VCCD
                                                                on R.RecordID = VCCD.PaymentRecordID
                                                            inner join GlobalCapitationRecords CR
                                                                on VCCD.GlobalCapitationRecordID = CR.GlobalCapitationRecordID
                                                                   and  CR.RecordType = isnull(@RecordType, CR.RecordType)
                                                            left outer join CapitationRateDetails CRD
                                                                on CR.CapitationRateDetailID = CRD.CapitationRateDetailID
                                                            inner join EntityAccountMap EAM
                                                                on EAM.AccountID = R.ParentAccountID
                                                                   and  EAM.EntityType = 'VDR'
                                                            inner join Vendors V
                                                                on EAM.EntityID = V.VendorId
                                                                   and  isnull(V.VendorClass, '') = isnull(isnull(@VendorClass, V.VendorClass), '')
                                                                   and  isnull(V.VendorSubclass, '') = isnull(isnull(@VendorSubClass, V.VendorSubclass), '')
                                                            --filter the non selected claims out
                                                            inner join #Groups G
                                                                on CR.GroupID = G.GroupID
                                                     where  C.DateCreated
                                                            between @StartDate
                                                            and     @EndDate
                                                            and isnull(C.CheckNumber, '') = isnull(@CheckNumber, isnull(C.CheckNumber, ''))
                                                            and isnull(C.JobId, -1) = isnull(@JobId, isnull(C.JobId, -1))
                                                            and C.CheckStatus = isnull(@CheckStatus, C.CheckStatus)
                                                            and C.CheckStatus != 'PWV'
                                                     option (recompile)


                                                     --Voided capitation checks with negative amounts
                                                     insert into    #ResultSet
                                                         (
                                                             RecordID
                                                            ,CheckID
                                                            ,CheckNumber
                                                            ,CheckDate
                                                            ,CheckAmount
                                                            ,CheckVoidReason
                                                            ,CheckStatusCode
                                                            ,ExternalCheckNumber
                                                            ,ExternalCheckCurrency
                                                            ,ExternalCheckAmount
                                                            ,ExternalMethodOfPaymentCode
                                                            ,ExternalCheckDate
                                                            ,CheckClearedDate
                                                            ,ExternalConversionRate
                                                            ,PaymentWizardJobId
                                                            ,ParentAccountID
                                                            ,CashAccountId
                                                            ,RecordStatusCode
                                                            ,RecordTypeCode
                                                            ,EntityTypeCode
                                                            ,CreationDate
                                                            ,ProcessedDate
                                                            ,VoidDate
                                                            ,CheckGroupID
                                                            ,Notes
                                                            ,LastUpdatedAt
                                                            ,LastUpdatedBy
                                                            --extra columns
                                                            ,FinancialRecordID
                                                            ,FinancialRecordDetailID
                                                            ,RecordDetailId
                                                            ,RecordDetailType
                                                            ,ReferenceNumber
                                                            ,DetailPaidAmount
                                                            ,DetailGroupID
                                                            ,DetailCreationDate
                                                            ,PaymentClassCode
                                                            ,AdjustmentVersion
                                                            ,RiskGroupVendorMapID
                                                            ,LineNumber
                                                            ,LinePaidAmount
                                                            ,MethodOfPayment
                                                            ,VoidInsert
                                                            ,RateCoverageType
                                                            ,QualifierId
                                                         )
                                                     select R.RecordID
                                                           ,C.CheckId
                                                           ,C.CheckNumber
                                                           ,C.DateCreated
                                                           ,- (C.Amount)
                                                           ,C.VoidReason
                                                           ,C.CheckStatus
                                                           ,C.ExternalCheckNumber
                                                           ,C.ExternalCheckCurrency
                                                           ,- (C.ExternalCheckAmount)
                                                           ,C.ExternalMethodOfPayment
                                                           ,C.ExternalCheckDate
                                                           ,C.CheckClearedDate
                                                           ,C.ExternalConversionRate
                                                           ,C.JobId
                                                           ,R.ParentAccountID
                                                           ,C.CashAccountId
                                                           ,R.RecordStatus
                                                           ,R.RecordType
                                                           ,R.EntityType
                                                           ,R.CreationDate
                                                           ,R.ProcessedDate
                                                           ,R.VoidDate
                                                           ,R.GroupID
                                                           ,R.Notes
                                                           ,R.LastUpdatedAt
                                                           ,R.LastUpdatedBy
                                                            --new columns
                                                           ,CR.GlobalCapitationRecordID
                                                           ,CR.GlobalCapitationRecordID
                                                           ,CR.GlobalCapitationRecordID
                                                           ,CR.RecordType
                                                           ,CR.ReferenceID
                                                           ,- (CR.Amount)
                                                           ,CR.GroupID
                                                           ,CR.PostDate
                                                           ,null
                                                           ,null
                                                           ,null
                                                           ,isnull(CR.CapitationRateDetailID, CR.TermedRecordID)
                                                           ,- (CR.Amount)
                                                           ,R.MethodOfPayment
                                                           ,'Y'
                                                           ,CRD.RateCoverageType
                                                           ,CRD.QualifierId
                                                     from   Checks C
                                                            inner join #CashAccounts CA
                                                                on C.CashAccountId = CA.CashAccountId
                                                            inner join Records R
                                                                on R.RecordType = 'PS'
                                                                   and  R.ReferenceNumber = C.CheckId
                                                                   and  isnull(R.MethodOfPayment, '') = isnull(isnull(@MethodOfPayment, R.MethodOfPayment), '')
                                                            inner join VoidGlobalCapitationCheckDetails VCCD
                                                                on R.RecordID = VCCD.PaymentRecordID
                                                            inner join GlobalCapitationRecords CR
                                                                on VCCD.GlobalCapitationRecordID = CR.GlobalCapitationRecordID
                                                                   and  CR.RecordType = isnull(@RecordType, CR.RecordType)
                                                            left outer join CapitationRateDetails CRD
                                                                on CR.CapitationRateDetailID = CRD.CapitationRateDetailID
                                                            --filter the non selected claims out
                                                            inner join #Groups G
                                                                on CR.GroupID = G.GroupID
                                                            inner join EntityAccountMap EAM
                                                                on EAM.AccountID = R.ParentAccountID
                                                                   and  EAM.EntityType = 'VDR'
                                                            inner join Vendors V
                                                                on EAM.EntityID = V.VendorId
                                                                   and  isnull(V.VendorClass, '') = isnull(isnull(@VendorClass, V.VendorClass), '')
                                                                   and  isnull(V.VendorSubclass, '') = isnull(isnull(@VendorSubClass, V.VendorSubclass), '')
                                                     where  C.DateVoided
                                                            between @StartDate
                                                            and     @EndDate
                                                            and isnull(C.CheckNumber, '') = isnull(@CheckNumber, isnull(C.CheckNumber, ''))
                                                            and isnull(C.JobId, -1) = isnull(@JobId, isnull(C.JobId, -1))
                                                            and C.CheckStatus = isnull(@CheckStatus, C.CheckStatus)
                                                            and C.CheckStatus != 'PWV'
                                                     option (recompile)

                                                     select @error = @@error
                                                     if @error != 0
                                                         begin
                                                             select @ProcedureStep = 2
                                                             select @UserMsg = 'Check Register could not be created. Contact System Administrator.'
                                                             select @LogMsg
                                                                 = 'Insert failed for checks that were paid. Error: ' + convert(varchar, @error) + ' occurred.'
                                                             raiserror(
                                                                          65500
                                                                         ,1
                                                                         ,1
                                                                         ,@ProductName
                                                                         ,@ProcedureName
                                                                         ,@ProcedureStep
                                                                         ,@UserMsg
                                                                         ,@LogMsg
                                                                         ,@SessionID
                                                                         ,-1
                                                                         ,@rowcount
                                                                         ,1
                                                                      )
                                                             goto AppErrorExit
                                                         end
                                                 end --- of "if @ShowVoidedChecks = 'Y'"
                                         end -- if isnull(@EntityType,'') = '' or @EntityType ='GCP'

                                 end --end of using groups table to filter results

                             else
                                 begin -- else if @GroupID is null 
                                     insert into    #ResultSet
                                         (
                                             RecordID
                                            ,CheckID
                                            ,CheckNumber
                                            ,CheckDate
                                            ,CheckAmount
                                            ,CheckStatusCode
                                            ,CheckVoidReason
                                            ,ExternalCheckNumber
                                            ,ExternalCheckCurrency
                                            ,ExternalCheckAmount
                                            ,ExternalConversionRate
                                            ,ExternalMethodOfPaymentCode
                                            ,ExternalCheckDate
                                            ,CheckClearedDate
                                            ,PaymentWizardJobId
                                            ,ParentAccountID
                                            ,CashAccountId
                                            ,RecordStatusCode
                                            ,RecordTypeCode
                                            ,EntityTypeCode
                                            ,CreationDate
                                            ,ProcessedDate
                                            ,VoidDate
                                            ,CheckGroupID
                                            ,Notes
                                            ,LastUpdatedAt
                                            ,LastUpdatedBy
                                            --extra columns
                                            ,FinancialRecordID
                                            ,FinancialRecordDetailID
                                            ,RecordDetailId
                                            ,RecordDetailType
                                            ,PaymentClassCode
                                            ,ReferenceNumber
                                            ,DetailPaidAmount
                                            ,DetailGroupID
                                            ,DetailCreationDate
                                            ,AdjustmentVersion
                                            ,RiskGroupVendorMapID
                                            ,LineNumber
                                            ,LinePaidAmount
                                            ,MethodOfPayment
                                            ,WriteOffReasonCode
                                         )
                                     select R.RecordID
                                           ,C.CheckId
                                           ,C.CheckNumber
                                           ,C.DateCreated
                                           ,case when R.RecordType = 'PR' then - (C.Amount)
                                                 else C.Amount
                                            end
                                           ,case when
                                                     (
                                                         @ShowVoidedChecks = 'Y'
                                                         and C.CheckStatus = 'VD'
                                                     ) then 'PRT'
                                                 else C.CheckStatus
                                            end
                                           ,case when
                                                     (
                                                         @ShowVoidedChecks = 'Y'
                                                         and C.CheckStatus = 'VD'
                                                     ) then null
                                                 else C.VoidReason
                                            end
                                           ,C.ExternalCheckNumber
                                           ,C.ExternalCheckCurrency
                                           ,case when R.RecordType = 'PR' then - (C.ExternalCheckAmount)
                                                 else C.ExternalCheckAmount
                                            end
                                           ,C.ExternalConversionRate
                                           ,C.ExternalMethodOfPayment
                                           ,C.ExternalCheckDate
                                           ,C.CheckClearedDate
                                           ,C.JobId
                                           ,R.ParentAccountID
                                           ,C.CashAccountId
                                           ,case when
                                                     (
                                                         @ShowVoidedChecks = 'Y'
                                                         and C.CheckStatus = 'VD'
                                                     ) then 'PRT'
                                                 else R.RecordStatus
                                            end
                                           ,R.RecordType
                                           ,R.EntityType
                                           ,R.CreationDate
                                           ,R.ProcessedDate
                                           ,case when
                                                     (
                                                         @ShowVoidedChecks = 'Y'
                                                         and C.CheckStatus = 'VD'
                                                     ) then null
                                                 else R.VoidDate
                                            end
                                           ,R.GroupID
                                           ,R.Notes
                                           ,R.LastUpdatedAt
                                           ,R.LastUpdatedBy
                                            --new columns
                                           ,R2.RecordID
                                           ,RD2.RecordDetailID
                                           ,RD.ItemID
                                           ,RD.ItemType
                                           ,R2.PaymentClass
                                           ,R2.ReferenceNumber
                                           ,R2.Amount
                                           ,R2.GroupID
                                           ,R2.CreationDate
                                           ,R2.Adjustmentversion
                                           ,R2.RiskGroupVendorMapID
                                           ,RD2.ItemID
                                           ,RD2.TotalAmount
                                           ,R.MethodOfPayment
                                           ,C.WriteOffReason
                                     from   Checks C
                                            inner join Records R
                                                on R.RecordType in ('PS', isnull(@PaymentReceived, ''), isnull(@WriteOff, ''))
                                                   and  R.ReferenceNumber = C.CheckId
                                                   and  C.CashAccountId in
                                                            (
                                                                select  CashAccountId
                                                                from    #CashAccounts
                                                            )
                                                   and  R.EntityType = isnull(@EntityType, R.EntityType)
                                                   and  isnull(R.MethodOfPayment, '') = isnull(isnull(@MethodOfPayment, R.MethodOfPayment), '')
                                            inner join RecordDetails RD
                                                on R.RecordID = RD.RecordID
                                            inner join Records R2
                                                on RD.ItemID = R2.RecordID
                                                   and  R2.RecordType = isnull(@RecordType, R2.RecordType)
                                                   and  isnull(R2.PaymentClass, '') = isnull(@PaymentClass, isnull(R2.PaymentClass, ''))
                                                   and  not (
                                                                @UseProvidersTable = 'Y'
                                                                and R2.ReferenceNumber not in
                                                                        (
                                                                            select  ClaimId
                                                                            from    Claims
                                                                            where   ProviderId in
                                                                                        (
                                                                                            select  ProviderID
                                                                                            from    @Providers
                                                                                        )
                                                                        )
                                                            )
                                            inner join RecordDetails RD2
                                                on R2.RecordID = RD2.RecordID
                                                   and  RD2.ItemType in ('CL', 'IP', 'AIP', 'AIA', 'IF', 'MPD', 'BPR', 'UVP', 'UVW', 'MP')
                                            inner join EntityAccountMap EAM
                                                on EAM.AccountID = R.ParentAccountID
                                                   and  EAM.EntityType = 'VDR'
                                            inner join Vendors V
                                                on EAM.EntityID = V.VendorId
                                                   and  isnull(V.VendorClass, '') = isnull(isnull(@VendorClass, V.VendorClass), '')
                                                   and  isnull(V.VendorSubclass, '') = isnull(isnull(@VendorSubClass, V.VendorSubclass), '')
                                     where  (
                                                (
                                                    R.RecordType = 'PS'
                                                    and C.DateCreated
                                            between @StartDate
                                            and     @EndDate
                                                )
                                                or
                                                    (
                                                        R.RecordType = 'PR'
                                                        and R.CreationDate
                                            between @StartDate
                                            and     @EndDate
                                                    )
                                                or
                                                    (
                                                        R.RecordType = 'WO'
                                                        and C.DateCreated
                                            between @StartDate
                                            and     @EndDate
                                                    )
                                            )
                                            and isnull(C.CheckNumber, '') = isnull(@CheckNumber, isnull(C.CheckNumber, ''))
                                            and isnull(C.JobId, -1) = isnull(@JobId, isnull(C.JobId, -1))
                                            and C.CheckStatus = isnull(@CheckStatus, C.CheckStatus)
                                            and C.CheckStatus != case when @ShowPaymentWizardVoidedChecks = 'Y' then ''
                                                                      else 'PWV'
                                                                 end
                                     union
                                     select R.RecordID
                                           ,C.CheckId
                                           ,C.CheckNumber
                                           ,C.DateCreated
                                           ,case when R.RecordType = 'PR' then - (C.Amount)
                                                 else C.Amount
                                            end
                                           ,case when
                                                     (
                                                         @ShowVoidedChecks = 'Y'
                                                         and C.CheckStatus = 'VD'
                                                     ) then 'PRT'
                                                 else C.CheckStatus
                                            end
                                           ,case when
                                                     (
                                                         @ShowVoidedChecks = 'Y'
                                                         and C.CheckStatus = 'VD'
                                                     ) then null
                                                 else C.VoidReason
                                            end
                                           ,C.ExternalCheckNumber
                                           ,C.ExternalCheckCurrency
                                           ,case when R.RecordType = 'PR' then - (C.ExternalCheckAmount)
                                                 else C.ExternalCheckAmount
                                            end
                                           ,C.ExternalConversionRate
                                           ,C.ExternalMethodOfPayment
                                           ,C.ExternalCheckDate
                                           ,C.CheckClearedDate
                                           ,C.JobId
                                           ,R.ParentAccountID
                                           ,C.CashAccountId
                                           ,case when
                                                     (
                                                         @ShowVoidedChecks = 'Y'
                                                         and C.CheckStatus = 'VD'
                                                     ) then 'PRT'
                                                 else R.RecordStatus
                                            end
                                           ,R.RecordType
                                           ,R.EntityType
                                           ,R.CreationDate
                                           ,R.ProcessedDate
                                           ,case when
                                                     (
                                                         @ShowVoidedChecks = 'Y'
                                                         and C.CheckStatus = 'VD'
                                                     ) then null
                                                 else R.VoidDate
                                            end
                                           ,R.GroupID
                                           ,R.Notes
                                           ,R.LastUpdatedAt
                                           ,R.LastUpdatedBy
                                            --new columns
                                           ,R2.RecordID
                                           ,null
                                           ,RD.ItemID
                                           ,RD.ItemType
                                           ,R2.PaymentClass
                                           ,R2.ReferenceNumber
                                           ,R2.Amount
                                           ,R2.GroupID
                                           ,R2.CreationDate
                                           ,R2.Adjustmentversion
                                           ,R2.RiskGroupVendorMapID
                                           ,CR.LineNumber
                                           ,0.00
                                           ,R.MethodOfPayment
                                           ,C.WriteOffReason
                                     from   Checks C
                                            inner join Records R
                                                on R.RecordType in ('PS', isnull(@PaymentReceived, ''), isnull(@WriteOff, ''))
                                                   and  R.ReferenceNumber = C.CheckId
                                                   and  C.CashAccountId in
                                                            (
                                                                select  CashAccountId
                                                                from    #CashAccounts
                                                            )
                                                   and  R.EntityType = isnull(@EntityType, R.EntityType)
                                                   and  isnull(R.MethodOfPayment, '') = isnull(isnull(@MethodOfPayment, R.MethodOfPayment), '')
                                            inner join RecordDetails RD
                                                on R.RecordID = RD.RecordID
                                            inner join Records R2
                                                on RD.ItemID = R2.RecordID
                                                   and  R2.RecordType in ('CA', 'INF')
                                                   and  isnull(R2.PaymentClass, '') = isnull(@PaymentClass, isnull(R2.PaymentClass, ''))
                                                   and  not (
                                                                @UseProvidersTable = 'Y'
                                                                and R2.ReferenceNumber not in
                                                                        (
                                                                            select  ClaimId
                                                                            from    Claims
                                                                            where   ProviderId in
                                                                                        (
                                                                                            select  ProviderID
                                                                                            from    @Providers
                                                                                        )
                                                                        )
                                                            )
                                            inner join Claim_Details CD
                                                on R2.ReferenceNumber = CD.ClaimID
                                                   and  R2.Adjustmentversion = CD.AdjustmentVersion
                                                   and  not exists
                                 (
                                     select 1
                                     from   RecordDetails RD2
                                     where  R2.RecordID = RD2.RecordID
                                            and RD2.ItemID = CD.LineNumber
                                 )
                                            inner join Claim_Results CR
                                                on R2.ReferenceNumber = CR.ClaimId
                                                   and  R2.Adjustmentversion = CR.AdjustmentVersion
                                                   and  CD.LineNumber = CR.LineNumber
                                            inner join EntityAccountMap EAM
                                                on EAM.AccountID = R.ParentAccountID
                                                   and  EAM.EntityType = 'VDR'
                                            inner join Vendors V
                                                on EAM.EntityID = V.VendorId
                                                   and  isnull(V.VendorClass, '') = isnull(isnull(@VendorClass, V.VendorClass), '')
                                                   and  isnull(V.VendorSubclass, '') = isnull(isnull(@VendorSubClass, V.VendorSubclass), '')
                                     where  (
                                                (
                                                    R.RecordType = 'PS'
                                                    and C.DateCreated
                                            between @StartDate
                                            and     @EndDate
                                                )
                                                or
                                                    (
                                                        R.RecordType = 'PR'
                                                        and R.CreationDate
                                            between @StartDate
                                            and     @EndDate
                                                    )
                                                or
                                                    (
                                                        R.RecordType = 'WO'
                                                        and C.DateCreated
                                            between @StartDate
                                            and     @EndDate
                                                    )
                                            )
                                            and isnull(C.CheckNumber, '') = isnull(@CheckNumber, isnull(C.CheckNumber, ''))
                                            and isnull(C.JobId, -1) = isnull(@JobId, isnull(C.JobId, -1))
                                            and C.CheckStatus = isnull(@CheckStatus, C.CheckStatus)
                                            and C.CheckStatus != case when @ShowPaymentWizardVoidedChecks = 'Y' then ''
                                                                      else 'PWV'
                                                                 end
                                     option (recompile)

                                     select @error = @@error
                                     if @error != 0
                                         begin
                                             select @ProcedureStep = 2
                                             select @UserMsg = 'Check Register could not be created. Contact System Administrator.'
                                             select @LogMsg = 'Insert failed for checks that were paid. Error: ' + convert(varchar, @error) + ' occurred.'
                                             raiserror(
                                                          65500
                                                         ,1
                                                         ,1
                                                         ,@ProductName
                                                         ,@ProcedureName
                                                         ,@ProcedureStep
                                                         ,@UserMsg
                                                         ,@LogMsg
                                                         ,@SessionID
                                                         ,-1
                                                         ,@rowcount
                                                         ,1
                                                      )
                                             goto AppErrorExit
                                         end

                                     if @ShowVoidedChecks = 'Y'
                                         begin

                                             insert into    #ResultSet
                                                 (
                                                     RecordID
                                                    ,CheckID
                                                    ,CheckNumber
                                                    ,CheckDate
                                                    ,CheckAmount
                                                    ,CheckVoidReason
                                                    ,CheckStatusCode
                                                    ,ExternalCheckNumber
                                                    ,ExternalCheckCurrency
                                                    ,ExternalCheckAmount
                                                    ,ExternalMethodOfPaymentCode
                                                    ,ExternalCheckDate
                                                    ,CheckClearedDate
                                                    ,ExternalConversionRate
                                                    ,PaymentWizardJobId
                                                    ,ParentAccountID
                                                    ,CashAccountId
                                                    ,RecordStatusCode
                                                    ,RecordTypeCode
                                                    ,EntityTypeCode
                                                    ,CreationDate
                                                    ,ProcessedDate
                                                    ,VoidDate
                                                    ,CheckGroupID
                                                    ,Notes
                                                    ,LastUpdatedAt
                                                    ,LastUpdatedBy
                                                    --extra columns
                                                    ,FinancialRecordID
                                                    ,FinancialRecordDetailID
                                                    ,RecordDetailId
                                                    ,RecordDetailType
                                                    ,ReferenceNumber
                                                    ,DetailPaidAmount
                                                    ,DetailGroupID
                                                    ,DetailCreationDate
                                                    ,PaymentClassCode
                                                    ,AdjustmentVersion
                                                    ,RiskGroupVendorMapID
                                                    ,LineNumber
                                                    ,LinePaidAmount
                                                    ,MethodOfPayment
                                                    ,VoidInsert
                                                    ,WriteOffReasonCode
                                                 )
                                             select R.RecordID
                                                   ,C.CheckId
                                                   ,C.CheckNumber
                                                   ,C.DateCreated
                                                   ,- (C.Amount)
                                                   ,C.VoidReason
                                                   ,C.CheckStatus
                                                   ,C.ExternalCheckNumber
                                                   ,C.ExternalCheckCurrency
                                                   ,- (C.ExternalCheckAmount)
                                                   ,C.ExternalMethodOfPayment
                                                   ,C.ExternalCheckDate
                                                   ,C.CheckClearedDate
                                                   ,C.ExternalConversionRate
                                                   ,C.JobId
                                                   ,R.ParentAccountID
                                                   ,C.CashAccountId
                                                   ,R.RecordStatus
                                                   ,R.RecordType
                                                   ,R.EntityType
                                                   ,R.CreationDate
                                                   ,R.ProcessedDate
                                                   ,R.VoidDate
                                                   ,R.GroupID
                                                   ,R.Notes
                                                   ,R.LastUpdatedAt
                                                   ,R.LastUpdatedBy
                                                    --new columns
                                                   ,R2.RecordID
                                                   ,RD2.RecordDetailID
                                                   ,RD.ItemID
                                                   ,RD.ItemType
                                                   ,R2.ReferenceNumber
                                                   ,- (R2.Amount)
                                                   ,R2.GroupID
                                                   ,R2.CreationDate
                                                   ,R2.PaymentClass
                                                   ,R2.Adjustmentversion
                                                   ,R2.RiskGroupVendorMapID
                                                   ,RD2.ItemID
                                                   ,- (RD2.TotalAmount)
                                                   ,R.MethodOfPayment
                                                   ,'Y'
                                                   ,C.WriteOffReason
                                             from   Checks C
                                                    inner join Records R
                                                        on R.RecordType in ('PS', isnull(@PaymentReceived, ''), isnull(@WriteOff, ''))
                                                           and  R.ReferenceNumber = C.CheckId
                                                           and  C.CashAccountId in
                                                                    (
                                                                        select  CashAccountId
                                                                        from    #CashAccounts
                                                                    )
                                                           and  R.EntityType = isnull(@EntityType, R.EntityType)
                                                           and  isnull(R.MethodOfPayment, '') = isnull(isnull(@MethodOfPayment, R.MethodOfPayment), '')
                                                    inner join RecordDetails RD
                                                        on R.RecordID = RD.RecordID
                                                    inner join Records R2
                                                        on RD.ItemID = R2.RecordID
                                                           and  R2.RecordType = isnull(@RecordType, R2.RecordType)
                                                           and  isnull(R2.PaymentClass, '') = isnull(@PaymentClass, isnull(R2.PaymentClass, ''))
                                                           and  not (
                                                                        @UseProvidersTable = 'Y'
                                                                        and R2.ReferenceNumber not in
                                                                                (
                                                                                    select  ClaimId
                                                                                    from    Claims
                                                                                    where   ProviderId in
                                                                                                (
                                                                                                    select  ProviderID
                                                                                                    from    @Providers
                                                                                                )
                                                                                )
                                                                    )
                                                    inner join RecordDetails RD2
                                                        on R2.RecordID = RD2.RecordID
                                                           and  RD2.ItemType in ('CL', 'IP', 'AIP', 'AIA', 'IF', 'MPD', 'BPR', 'UVP', 'UVW', 'MP')
                                                    inner join EntityAccountMap EAM
                                                        on EAM.AccountID = R.ParentAccountID
                                                           and  EAM.EntityType = 'VDR'
                                                    inner join Vendors V
                                                        on EAM.EntityID = V.VendorId
                                                           and  isnull(V.VendorClass, '') = isnull(isnull(@VendorClass, V.VendorClass), '')
                                                           and  isnull(V.VendorSubclass, '') = isnull(isnull(@VendorSubClass, V.VendorSubclass), '')
                                             where  C.DateVoided
                                                    between @StartDate
                                                    and     @EndDate
                                                    and isnull(C.CheckNumber, '') = isnull(@CheckNumber, isnull(C.CheckNumber, ''))
                                                    and isnull(C.JobId, -1) = isnull(@JobId, isnull(C.JobId, -1))
                                                    and C.CheckStatus = isnull(@CheckStatus, C.CheckStatus)
                                                    and (C.CheckStatus != 'PWV')
                                             union
                                             select R.RecordID
                                                   ,C.CheckId
                                                   ,C.CheckNumber
                                                   ,C.DateCreated
                                                   ,- (C.Amount)
                                                   ,C.VoidReason
                                                   ,C.CheckStatus
                                                   ,C.ExternalCheckNumber
                                                   ,C.ExternalCheckCurrency
                                                   ,- (C.ExternalCheckAmount)
                                                   ,C.ExternalMethodOfPayment
                                                   ,C.ExternalCheckDate
                                                   ,C.CheckClearedDate
                                                   ,C.ExternalConversionRate
                                                   ,C.JobId
                                                   ,R.ParentAccountID
                                                   ,C.CashAccountId
                                                   ,R.RecordStatus
                                                   ,R.RecordType
                                                   ,R.EntityType
                                                   ,R.CreationDate
                                                   ,R.ProcessedDate
                                                   ,R.VoidDate
                                                   ,R.GroupID
                                                   ,R.Notes
                                                   ,R.LastUpdatedAt
                                                   ,R.LastUpdatedBy
                                                    --new columns
                                                   ,R2.RecordID
                                                   ,null
                                                   ,RD.ItemID
                                                   ,RD.ItemType
                                                   ,R2.ReferenceNumber
                                                   ,- (R2.Amount)
                                                   ,R2.GroupID
                                                   ,R2.CreationDate
                                                   ,R2.PaymentClass
                                                   ,R2.Adjustmentversion
                                                   ,R2.RiskGroupVendorMapID
                                                   ,CR.LineNumber
                                                   ,0.00
                                                   ,R.MethodOfPayment
                                                   ,'Y'
                                                   ,C.WriteOffReason
                                             from   Checks C
                                                    inner join Records R
                                                        on R.RecordType in ('PS', isnull(@PaymentReceived, ''), isnull(@WriteOff, ''))
                                                           and  R.ReferenceNumber = C.CheckId
                                                           and  C.CashAccountId in
                                                                    (
                                                                        select  CashAccountId
                                                                        from    #CashAccounts
                                                                    )
                                                           and  R.EntityType = isnull(@EntityType, R.EntityType)
                                                           and  isnull(R.MethodOfPayment, '') = isnull(isnull(@MethodOfPayment, R.MethodOfPayment), '')
                                                    inner join RecordDetails RD
                                                        on R.RecordID = RD.RecordID
                                                    inner join Records R2
                                                        on RD.ItemID = R2.RecordID
                                                           and  R2.RecordType in ('CA', 'INF')
                                                           and  isnull(R2.PaymentClass, '') = isnull(@PaymentClass, isnull(R2.PaymentClass, ''))
                                                           and  not (
                                                                        @UseProvidersTable = 'Y'
                                                                        and R2.ReferenceNumber not in
                                                                                (
                                                                                    select  ClaimId
                                                                                    from    Claims
                                                                                    where   ProviderId in
                                                                                                (
                                                                                                    select  ProviderID
                                                                                                    from    @Providers
                                                                                                )
                                                                                )
                                                                    )
                                                    inner join Claim_Details CD
                                                        on R2.ReferenceNumber = CD.ClaimID
                                                           and  R2.Adjustmentversion = CD.AdjustmentVersion
                                                           and  not exists
                                         (
                                             select 1
                                             from   RecordDetails RD2
                                             where  R2.RecordID = RD2.RecordID
                                                    and RD2.ItemID = CD.LineNumber
                                         )
                                                    inner join Claim_Results CR
                                                        on R2.ReferenceNumber = CR.ClaimId
                                                           and  R2.Adjustmentversion = CR.AdjustmentVersion
                                                           and  CD.LineNumber = CR.LineNumber
                                                    inner join EntityAccountMap EAM
                                                        on EAM.AccountID = R.ParentAccountID
                                                           and  EAM.EntityType = 'VDR'
                                                    inner join Vendors V
                                                        on EAM.EntityID = V.VendorId
                                                           and  isnull(V.VendorClass, '') = isnull(isnull(@VendorClass, V.VendorClass), '')
                                                           and  isnull(V.VendorSubclass, '') = isnull(isnull(@VendorSubClass, V.VendorSubclass), '')
                                             where  C.DateVoided
                                                    between @StartDate
                                                    and     @EndDate
                                                    and isnull(C.CheckNumber, '') = isnull(@CheckNumber, isnull(C.CheckNumber, ''))
                                                    and isnull(C.JobId, -1) = isnull(@JobId, isnull(C.JobId, -1))
                                                    and C.CheckStatus = isnull(@CheckStatus, C.CheckStatus)
                                                    and (C.CheckStatus != 'PWV')
                                             option (recompile)

                                             select @error = @@error
                                             if @error != 0
                                                 begin
                                                     select @ProcedureStep = 2
                                                     select @UserMsg = 'Check Register could not be created. Contact System Administrator.'
                                                     select @LogMsg
                                                         = 'Insert failed for checks that were paid. Error: ' + convert(varchar, @error) + ' occurred.'
                                                     raiserror(
                                                                  65500
                                                                 ,1
                                                                 ,1
                                                                 ,@ProductName
                                                                 ,@ProcedureName
                                                                 ,@ProcedureStep
                                                                 ,@UserMsg
                                                                 ,@LogMsg
                                                                 ,@SessionID
                                                                 ,-1
                                                                 ,@rowcount
                                                                 ,1
                                                              )
                                                     goto AppErrorExit
                                                 end
                                         end --- of "if @ShowVoidedChecks = 'Y'"
                                     else
                                         begin
                                             delete from #ResultSet
                                             where  RecordStatusCode = 'V'
                                         end


                                     if isnull(@EntityType, '') = ''
                                        or  @EntityType = 'CPT' --Capitation (2DL, @EIN is null & @GroupID is null)
                                         begin
                                             insert into    #ResultSet
                                                 (
                                                     RecordID
                                                    ,CheckID
                                                    ,CheckNumber
                                                    ,CheckDate
                                                    ,CheckAmount
                                                    ,CheckStatusCode
                                                    ,CheckVoidReason
                                                    ,ExternalCheckNumber
                                                    ,ExternalCheckCurrency
                                                    ,ExternalCheckAmount
                                                    ,ExternalConversionRate
                                                    ,ExternalMethodOfPaymentCode
                                                    ,ExternalCheckDate
                                                    ,CheckClearedDate
                                                    ,PaymentWizardJobId
                                                    ,ParentAccountID
                                                    ,CashAccountId
                                                    ,RecordStatusCode
                                                    ,RecordTypeCode
                                                    ,EntityTypeCode
                                                    ,CreationDate
                                                    ,ProcessedDate
                                                    ,VoidDate
                                                    ,CheckGroupID
                                                    ,Notes
                                                    ,LastUpdatedAt
                                                    ,LastUpdatedBy
                                                    --extra columns
                                                    ,FinancialRecordID
                                                    ,FinancialRecordDetailID
                                                    ,RecordDetailId
                                                    ,RecordDetailType
                                                    ,PaymentClassCode
                                                    ,ReferenceNumber
                                                    ,DetailPaidAmount
                                                    ,DetailGroupID
                                                    ,DetailCreationDate
                                                    ,AdjustmentVersion
                                                    ,RiskGroupVendorMapID
                                                    ,LineNumber
                                                    ,LinePaidAmount
                                                    ,MethodOfPayment
                                                    ,RateCoverageType
                                                    ,QualifierId
                                                 )
                                             select R.RecordID
                                                   ,C.CheckId
                                                   ,C.CheckNumber
                                                   ,C.DateCreated
                                                   ,C.Amount
                                                   ,C.CheckStatus
                                                   ,C.VoidReason
                                                   ,C.ExternalCheckNumber
                                                   ,C.ExternalCheckCurrency
                                                   ,C.ExternalCheckAmount
                                                   ,C.ExternalConversionRate
                                                   ,C.ExternalMethodOfPayment
                                                   ,C.ExternalCheckDate
                                                   ,C.CheckClearedDate
                                                   ,C.JobId
                                                   ,R.ParentAccountID
                                                   ,C.CashAccountId
                                                   ,R.RecordStatus
                                                   ,R.RecordType
                                                   ,R.EntityType
                                                   ,R.CreationDate
                                                   ,R.ProcessedDate
                                                   ,R.VoidDate
                                                   ,R.GroupID
                                                   ,R.Notes
                                                   ,R.LastUpdatedAt
                                                   ,R.LastUpdatedBy
                                                    --new columns
                                                   ,CR.CapitationRecordID
                                                   ,CR.CapitationRecordID
                                                   ,CR.CapitationRecordID
                                                   ,CR.RecordType
                                                   ,null
                                                   ,CR.ReferenceID
                                                   ,CR.Amount
                                                   ,CR.GroupID
                                                   ,CR.PostDate
                                                   ,null
                                                   ,CR.RiskGroupVendorMapID
                                                   ,isnull(CR.CapitationRateDetailID, CR.TermedRecordID)
                                                   ,CR.Amount
                                                   ,R.MethodOfPayment
                                                   ,CRD.RateCoverageType
                                                   ,CRD.QualifierId
                                             from   Checks C
                                                    inner join #CashAccounts CA
                                                        on C.CashAccountId = CA.CashAccountId
                                                    inner join Records R
                                                        on R.RecordType = 'PS'
                                                           and  R.ReferenceNumber = C.CheckId
                                                           and  isnull(R.MethodOfPayment, '') = isnull(isnull(@MethodOfPayment, R.MethodOfPayment), '')
                                                    inner join CapitationRecords CR
                                                        on R.RecordID = CR.PaymentRecordID
                                                           and  CR.RecordType = isnull(@RecordType, CR.RecordType)
                                                    left outer join CapitationRateDetails CRD
                                                        on CR.CapitationRateDetailID = CRD.CapitationRateDetailID
                                                    inner join EntityAccountMap EAM
                                                        on EAM.AccountID = R.ParentAccountID
                                                           and  EAM.EntityType = 'VDR'
                                                    inner join Vendors V
                                                        on EAM.EntityID = V.VendorId
                                                           and  isnull(V.VendorClass, '') = isnull(isnull(@VendorClass, V.VendorClass), '')
                                                           and  isnull(V.VendorSubclass, '') = isnull(isnull(@VendorSubClass, V.VendorSubclass), '')
                                             where  C.DateCreated
                                                    between @StartDate
                                                    and     @EndDate
                                                    and isnull(C.CheckNumber, '') = isnull(@CheckNumber, isnull(C.CheckNumber, ''))
                                                    and isnull(C.JobId, -1) = isnull(@JobId, isnull(C.JobId, -1))
                                                    and C.CheckStatus = isnull(@CheckStatus, C.CheckStatus)
                                                    and C.CashAccountId in
                                                            (
                                                                select  CashAccountId
                                                                from    #CashAccounts
                                                            )
                                                    and C.CheckStatus != case when @ShowPaymentWizardVoidedChecks = 'Y' then ''
                                                                              else 'PWV'
                                                                         end
                                             option (recompile)

                                             select @error = @@error
                                             if @error != 0
                                                 begin
                                                     select @ProcedureStep = 2
                                                     select @UserMsg = 'Check Register could not be created. Contact System Administrator.'
                                                     select @LogMsg
                                                         = 'Insert failed for checks that were paid. Error: ' + convert(varchar, @error) + ' occurred.'
                                                     raiserror(
                                                                  65500
                                                                 ,1
                                                                 ,1
                                                                 ,@ProductName
                                                                 ,@ProcedureName
                                                                 ,@ProcedureStep
                                                                 ,@UserMsg
                                                                 ,@LogMsg
                                                                 ,@SessionID
                                                                 ,-1
                                                                 ,@rowcount
                                                                 ,1
                                                              )
                                                     goto AppErrorExit
                                                 end

                                             if @ShowVoidedChecks = 'Y'
                                                 begin

                                                     --Voided capitation checks
                                                     insert into    #ResultSet
                                                         (
                                                             RecordID
                                                            ,CheckID
                                                            ,CheckNumber
                                                            ,CheckDate
                                                            ,CheckAmount
                                                            ,CheckStatusCode
                                                            ,CheckVoidReason
                                                            ,ExternalCheckNumber
                                                            ,ExternalCheckCurrency
                                                            ,ExternalCheckAmount
                                                            ,ExternalConversionRate
                                                            ,ExternalMethodOfPaymentCode
                                                            ,ExternalCheckDate
                                                            ,CheckClearedDate
                                                            ,PaymentWizardJobId
                                                            ,ParentAccountID
                                                            ,CashAccountId
                                                            ,RecordStatusCode
                                                            ,RecordTypeCode
                                                            ,EntityTypeCode
                                                            ,CreationDate
                                                            ,ProcessedDate
                                                            ,VoidDate
                                                            ,CheckGroupID
                                                            ,Notes
                                                            ,LastUpdatedAt
                                                            ,LastUpdatedBy
                                                            --extra columns
                                                            ,FinancialRecordID
                                                            ,FinancialRecordDetailID
                                                            ,RecordDetailId
                                                            ,RecordDetailType
                                                            ,PaymentClassCode
                                                            ,ReferenceNumber
                                                            ,DetailPaidAmount
                                                            ,DetailGroupID
                                                            ,DetailCreationDate
                                                            ,AdjustmentVersion
                                                            ,RiskGroupVendorMapID
                                                            ,LineNumber
                                                            ,LinePaidAmount
                                                            ,MethodOfPayment
                                                            ,RateCoverageType
                                                            ,QualifierId
                                                         )
                                                     select R.RecordID
                                                           ,C.CheckId
                                                           ,C.CheckNumber
                                                           ,C.DateCreated
                                                           ,C.Amount
                                                           ,C.CheckStatus
                                                           ,C.VoidReason
                                                           ,C.ExternalCheckNumber
                                                           ,C.ExternalCheckCurrency
                                                           ,C.ExternalCheckAmount
                                                           ,C.ExternalConversionRate
                                                           ,C.ExternalMethodOfPayment
                                                           ,C.ExternalCheckDate
                                                           ,C.CheckClearedDate
                                                           ,C.JobId
                                                           ,R.ParentAccountID
                                                           ,C.CashAccountId
                                                           ,R.RecordStatus
                                                           ,R.RecordType
                                                           ,R.EntityType
                                                           ,R.CreationDate
                                                           ,R.ProcessedDate
                                                           ,R.VoidDate
                                                           ,R.GroupID
                                                           ,R.Notes
                                                           ,R.LastUpdatedAt
                                                           ,R.LastUpdatedBy
                                                            --new columns
                                                           ,CR.CapitationRecordID
                                                           ,CR.CapitationRecordID
                                                           ,CR.CapitationRecordID
                                                           ,CR.RecordType
                                                           ,null
                                                           ,CR.ReferenceID
                                                           ,CR.Amount
                                                           ,CR.GroupID
                                                           ,CR.PostDate
                                                           ,null
                                                           ,CR.RiskGroupVendorMapID
                                                           ,isnull(CR.CapitationRateDetailID, CR.TermedRecordID)
                                                           ,CR.Amount
                                                           ,R.MethodOfPayment
                                                           ,CRD.RateCoverageType
                                                           ,CRD.QualifierId
                                                     from   Checks C
                                                            inner join #CashAccounts CA
                                                                on C.CashAccountId = CA.CashAccountId
                                                            inner join Records R
                                                                on R.RecordType = 'PS'
                                                                   and  R.ReferenceNumber = C.CheckId
                                                                   and  isnull(R.MethodOfPayment, '') = isnull(isnull(@MethodOfPayment, R.MethodOfPayment), '')
                                                            inner join VoidCapitationCheckDetails VCCD
                                                                on R.RecordID = VCCD.PaymentRecordID
                                                            inner join CapitationRecords CR
                                                                on VCCD.CapitationRecordID = CR.CapitationRecordID
                                                                   and  CR.RecordType = isnull(@RecordType, CR.RecordType)
                                                            left outer join CapitationRateDetails CRD
                                                                on CR.CapitationRateDetailID = CRD.CapitationRateDetailID
                                                            inner join EntityAccountMap EAM
                                                                on EAM.AccountID = R.ParentAccountID
                                                                   and  EAM.EntityType = 'VDR'
                                                            inner join Vendors V
                                                                on EAM.EntityID = V.VendorId
                                                                   and  isnull(V.VendorClass, '') = isnull(isnull(@VendorClass, V.VendorClass), '')
                                                                   and  isnull(V.VendorSubclass, '') = isnull(isnull(@VendorSubClass, V.VendorSubclass), '')
                                                     where  C.DateCreated
                                                            between @StartDate
                                                            and     @EndDate
                                                            and isnull(C.CheckNumber, '') = isnull(@CheckNumber, isnull(C.CheckNumber, ''))
                                                            and isnull(C.JobId, -1) = isnull(@JobId, isnull(C.JobId, -1))
                                                            and C.CheckStatus = isnull(@CheckStatus, C.CheckStatus)
                                                            and C.CheckStatus != 'PWV'
                                                     option (recompile)

                                                     select @error = @@error

                                                     if @error != 0
                                                         begin
                                                             select @ProcedureStep = 2
                                                             select @UserMsg = 'Check Register could not be created. Contact System Administrator.'
                                                             select @LogMsg
                                                                 = 'Insert failed for checks that were paid. Error: ' + convert(varchar, @error) + ' occurred.'
                                                             raiserror(
                                                                          65500
                                                                         ,1
                                                                         ,1
                                                                         ,@ProductName
                                                                         ,@ProcedureName
                                                                         ,@ProcedureStep
                                                                         ,@UserMsg
                                                                         ,@LogMsg
                                                                         ,@SessionID
                                                                         ,-1
                                                                         ,@rowcount
                                                                         ,1
                                                                      )
                                                             goto AppErrorExit
                                                         end

                                                     --Voided capitation checks with negative amounts
                                                     insert into    #ResultSet
                                                         (
                                                             RecordID
                                                            ,CheckID
                                                            ,CheckNumber
                                                            ,CheckDate
                                                            ,CheckAmount
                                                            ,CheckVoidReason
                                                            ,CheckStatusCode
                                                            ,ExternalCheckNumber
                                                            ,ExternalCheckCurrency
                                                            ,ExternalCheckAmount
                                                            ,ExternalMethodOfPaymentCode
                                                            ,ExternalCheckDate
                                                            ,CheckClearedDate
                                                            ,ExternalConversionRate
                                                            ,PaymentWizardJobId
                                                            ,ParentAccountID
                                                            ,CashAccountId
                                                            ,RecordStatusCode
                                                            ,RecordTypeCode
                                                            ,EntityTypeCode
                                                            ,CreationDate
                                                            ,ProcessedDate
                                                            ,VoidDate
                                                            ,CheckGroupID
                                                            ,Notes
                                                            ,LastUpdatedAt
                                                            ,LastUpdatedBy
                                                            --extra columns
                                                            ,FinancialRecordID
                                                            ,FinancialRecordDetailID
                                                            ,RecordDetailId
                                                            ,RecordDetailType
                                                            ,ReferenceNumber
                                                            ,DetailPaidAmount
                                                            ,DetailGroupID
                                                            ,DetailCreationDate
                                                            ,PaymentClassCode
                                                            ,AdjustmentVersion
                                                            ,RiskGroupVendorMapID
                                                            ,LineNumber
                                                            ,LinePaidAmount
                                                            ,MethodOfPayment
                                                            ,VoidInsert
                                                            ,RateCoverageType
                                                            ,QualifierId
                                                         )
                                                     select R.RecordID
                                                           ,C.CheckId
                                                           ,C.CheckNumber
                                                           ,C.DateCreated
                                                           ,- (C.Amount)
                                                           ,C.VoidReason
                                                           ,C.CheckStatus
                                                           ,C.ExternalCheckNumber
                                                           ,C.ExternalCheckCurrency
                                                           ,- (C.ExternalCheckAmount)
                                                           ,C.ExternalMethodOfPayment
                                                           ,C.ExternalCheckDate
                                                           ,C.CheckClearedDate
                                                           ,C.ExternalConversionRate
                                                           ,C.JobId
                                                           ,R.ParentAccountID
                                                           ,C.CashAccountId
                                                           ,R.RecordStatus
                                                           ,R.RecordType
                                                           ,R.EntityType
                                                           ,R.CreationDate
                                                           ,R.ProcessedDate
                                                           ,R.VoidDate
                                                           ,R.GroupID
                                                           ,R.Notes
                                                           ,R.LastUpdatedAt
                                                           ,R.LastUpdatedBy
                                                            --new columns
                                                           ,CR.CapitationRecordID
                                                           ,CR.CapitationRecordID
                                                           ,CR.CapitationRecordID
                                                           ,CR.RecordType
                                                           ,CR.ReferenceID
                                                           ,- (CR.Amount)
                                                           ,CR.GroupID
                                                           ,CR.PostDate
                                                           ,null
                                                           ,null
                                                           ,CR.RiskGroupVendorMapID
                                                           ,isnull(CR.CapitationRateDetailID, CR.TermedRecordID)
                                                           ,- (CR.Amount)
                                                           ,R.MethodOfPayment
                                                           ,'Y'
                                                           ,CRD.RateCoverageType
                                                           ,CRD.QualifierId
                                                     from   Checks C
                                                            inner join #CashAccounts CA
                                                                on C.CashAccountId = CA.CashAccountId
                                                            inner join Records R
                                                                on R.RecordType = 'PS'
                                                                   and  R.ReferenceNumber = C.CheckId
                                                                   and  isnull(R.MethodOfPayment, '') = isnull(isnull(@MethodOfPayment, R.MethodOfPayment), '')
                                                            inner join VoidCapitationCheckDetails VCCD
                                                                on R.RecordID = VCCD.PaymentRecordID
                                                            inner join CapitationRecords CR
                                                                on VCCD.CapitationRecordID = CR.CapitationRecordID
                                                                   and  CR.RecordType = isnull(@RecordType, CR.RecordType)
                                                            left outer join CapitationRateDetails CRD
                                                                on CR.CapitationRateDetailID = CRD.CapitationRateDetailID
                                                            inner join EntityAccountMap EAM
                                                                on EAM.AccountID = R.ParentAccountID
                                                                   and  EAM.EntityType = 'VDR'
                                                            inner join Vendors V
                                                                on EAM.EntityID = V.VendorId
                                                                   and  isnull(V.VendorClass, '') = isnull(isnull(@VendorClass, V.VendorClass), '')
                                                                   and  isnull(V.VendorSubclass, '') = isnull(isnull(@VendorSubClass, V.VendorSubclass), '')
                                                     where  C.DateVoided
                                                            between @StartDate
                                                            and     @EndDate
                                                            and isnull(C.CheckNumber, '') = isnull(@CheckNumber, isnull(C.CheckNumber, ''))
                                                            and isnull(C.JobId, -1) = isnull(@JobId, isnull(C.JobId, -1))
                                                            and C.CheckStatus = isnull(@CheckStatus, C.CheckStatus)
                                                            and C.CheckStatus != 'PWV'
                                                     option (recompile)

                                                     select @error = @@error
                                                     if @error != 0
                                                         begin
                                                             select @ProcedureStep = 2
                                                             select @UserMsg = 'Check Register could not be created. Contact System Administrator.'
                                                             select @LogMsg
                                                                 = 'Insert failed for checks that were paid. Error: ' + convert(varchar, @error) + ' occurred.'
                                                             raiserror(
                                                                          65500
                                                                         ,1
                                                                         ,1
                                                                         ,@ProductName
                                                                         ,@ProcedureName
                                                                         ,@ProcedureStep
                                                                         ,@UserMsg
                                                                         ,@LogMsg
                                                                         ,@SessionID
                                                                         ,-1
                                                                         ,@rowcount
                                                                         ,1
                                                                      )
                                                             goto AppErrorExit
                                                         end

                                                 end --- of "if @ShowVoidedChecks = 'Y'"
                                         end -- if isnull(@EntityType,'') = '' or @EntityType ='CPT' --Capitation

                                     if (
                                            isnull(@EntityType, '') = ''
                                            or  @EntityType = 'GCP'
                                        ) -- 2DL, @EIN is null & @GroupID is null  
                                         begin
                                             insert into    #ResultSet
                                                 (
                                                     RecordID
                                                    ,CheckID
                                                    ,CheckNumber
                                                    ,CheckDate
                                                    ,CheckAmount
                                                    ,CheckStatusCode
                                                    ,CheckVoidReason
                                                    ,ExternalCheckNumber
                                                    ,ExternalCheckCurrency
                                                    ,ExternalCheckAmount
                                                    ,ExternalConversionRate
                                                    ,ExternalMethodOfPaymentCode
                                                    ,ExternalCheckDate
                                                    ,CheckClearedDate
                                                    ,PaymentWizardJobId
                                                    ,ParentAccountID
                                                    ,CashAccountId
                                                    ,RecordStatusCode
                                                    ,RecordTypeCode
                                                    ,EntityTypeCode
                                                    ,CreationDate
                                                    ,ProcessedDate
                                                    ,VoidDate
                                                    ,CheckGroupID
                                                    ,Notes
                                                    ,LastUpdatedAt
                                                    ,LastUpdatedBy
                                                    --extra columns
                                                    ,FinancialRecordID
                                                    ,FinancialRecordDetailID
                                                    ,RecordDetailId
                                                    ,RecordDetailType
                                                    ,PaymentClassCode
                                                    ,ReferenceNumber
                                                    ,DetailPaidAmount
                                                    ,DetailGroupID
                                                    ,DetailCreationDate
                                                    ,AdjustmentVersion
                                                    ,RiskGroupVendorMapID
                                                    ,LineNumber
                                                    ,LinePaidAmount
                                                    ,MethodOfPayment
                                                    ,RateCoverageType
                                                    ,QualifierId
                                                 )
                                             select R.RecordID
                                                   ,C.CheckId
                                                   ,C.CheckNumber
                                                   ,C.DateCreated
                                                   ,C.Amount
                                                   ,C.CheckStatus
                                                   ,C.VoidReason
                                                   ,C.ExternalCheckNumber
                                                   ,C.ExternalCheckCurrency
                                                   ,C.ExternalCheckAmount
                                                   ,C.ExternalConversionRate
                                                   ,C.ExternalMethodOfPayment
                                                   ,C.ExternalCheckDate
                                                   ,C.CheckClearedDate
                                                   ,C.JobId
                                                   ,R.ParentAccountID
                                                   ,C.CashAccountId
                                                   ,R.RecordStatus
                                                   ,R.RecordType
                                                   ,R.EntityType
                                                   ,R.CreationDate
                                                   ,R.ProcessedDate
                                                   ,R.VoidDate
                                                   ,R.GroupID
                                                   ,R.Notes
                                                   ,R.LastUpdatedAt
                                                   ,R.LastUpdatedBy
                                                    --new columns
                                                   ,CR.GlobalCapitationRecordID
                                                   ,CR.GlobalCapitationRecordID
                                                   ,CR.GlobalCapitationRecordID
                                                   ,CR.RecordType
                                                   ,null
                                                   ,CR.ReferenceID
                                                   ,CR.Amount
                                                   ,CR.GroupID
                                                   ,CR.PostDate
                                                   ,null
                                                   ,null
                                                   ,isnull(CR.CapitationRateDetailID, CR.TermedRecordID)
                                                   ,CR.Amount
                                                   ,R.MethodOfPayment
                                                   ,CRD.RateCoverageType
                                                   ,CRD.QualifierId
                                             from   Checks C
                                                    inner join #CashAccounts CA
                                                        on C.CashAccountId = CA.CashAccountId
                                                    inner join Records R
                                                        on R.RecordType = 'PS'
                                                           and  R.ReferenceNumber = C.CheckId
                                                           and  isnull(R.MethodOfPayment, '') = isnull(isnull(@MethodOfPayment, R.MethodOfPayment), '')
                                                    inner join GlobalCapitationRecords CR
                                                        on R.RecordID = CR.PaymentRecordID
                                                           and  CR.RecordType = isnull(@RecordType, CR.RecordType)
                                                    left outer join CapitationRateDetails CRD
                                                        on CR.CapitationRateDetailID = CRD.CapitationRateDetailID
                                                    inner join EntityAccountMap EAM
                                                        on EAM.AccountID = R.ParentAccountID
                                                           and  EAM.EntityType = 'VDR'
                                                    inner join Vendors V
                                                        on EAM.EntityID = V.VendorId
                                                           and  isnull(V.VendorClass, '') = isnull(isnull(@VendorClass, V.VendorClass), '')
                                                           and  isnull(V.VendorSubclass, '') = isnull(isnull(@VendorSubClass, V.VendorSubclass), '')
                                             where  C.DateCreated
                                                    between @StartDate
                                                    and     @EndDate
                                                    and isnull(C.CheckNumber, '') = isnull(@CheckNumber, isnull(C.CheckNumber, ''))
                                                    and isnull(C.JobId, -1) = isnull(@JobId, isnull(C.JobId, -1))
                                                    and C.CheckStatus = isnull(@CheckStatus, C.CheckStatus)
                                                    and C.CashAccountId in
                                                            (
                                                                select  CashAccountId
                                                                from    #CashAccounts
                                                            )
                                                    and C.CheckStatus != case when @ShowPaymentWizardVoidedChecks = 'Y' then ''
                                                                              else 'PWV'
                                                                         end
                                             option (recompile)

                                             select @error = @@error
                                             if @error != 0
                                                 begin
                                                     select @ProcedureStep = 2
                                                     select @UserMsg = 'Check Register could not be created. Contact System Administrator.'
                                                     select @LogMsg
                                                         = 'Insert failed for checks that were paid. Error: ' + convert(varchar, @error) + ' occurred.'
                                                     raiserror(
                                                                  65500
                                                                 ,1
                                                                 ,1
                                                                 ,@ProductName
                                                                 ,@ProcedureName
                                                                 ,@ProcedureStep
                                                                 ,@UserMsg
                                                                 ,@LogMsg
                                                                 ,@SessionID
                                                                 ,-1
                                                                 ,@rowcount
                                                                 ,1
                                                              )
                                                     goto AppErrorExit
                                                 end

                                             if @ShowVoidedChecks = 'Y'
                                                 begin
                                                     --Voided capitation checks
                                                     insert into    #ResultSet
                                                         (
                                                             RecordID
                                                            ,CheckID
                                                            ,CheckNumber
                                                            ,CheckDate
                                                            ,CheckAmount
                                                            ,CheckStatusCode
                                                            ,CheckVoidReason
                                                            ,ExternalCheckNumber
                                                            ,ExternalCheckCurrency
                                                            ,ExternalCheckAmount
                                                            ,ExternalConversionRate
                                                            ,ExternalMethodOfPaymentCode
                                                            ,ExternalCheckDate
                                                            ,CheckClearedDate
                                                            ,PaymentWizardJobId
                                                            ,ParentAccountID
                                                            ,CashAccountId
                                                            ,RecordStatusCode
                                                            ,RecordTypeCode
                                                            ,EntityTypeCode
                                                            ,CreationDate
                                                            ,ProcessedDate
                                                            ,VoidDate
                                                            ,CheckGroupID
                                                            ,Notes
                                                            ,LastUpdatedAt
                                                            ,LastUpdatedBy
                                                            --extra columns
                                                            ,FinancialRecordID
                                                            ,FinancialRecordDetailID
                                                            ,RecordDetailId
                                                            ,RecordDetailType
                                                            ,PaymentClassCode
                                                            ,ReferenceNumber
                                                            ,DetailPaidAmount
                                                            ,DetailGroupID
                                                            ,DetailCreationDate
                                                            ,AdjustmentVersion
                                                            ,RiskGroupVendorMapID
                                                            ,LineNumber
                                                            ,LinePaidAmount
                                                            ,MethodOfPayment
                                                            ,RateCoverageType
                                                            ,QualifierId
                                                         )
                                                     select R.RecordID
                                                           ,C.CheckId
                                                           ,C.CheckNumber
                                                           ,C.DateCreated
                                                           ,C.Amount
                                                           ,C.CheckStatus
                                                           ,C.VoidReason
                                                           ,C.ExternalCheckNumber
                                                           ,C.ExternalCheckCurrency
                                                           ,C.ExternalCheckAmount
                                                           ,C.ExternalConversionRate
                                                           ,C.ExternalMethodOfPayment
                                                           ,C.ExternalCheckDate
                                                           ,C.CheckClearedDate
                                                           ,C.JobId
                                                           ,R.ParentAccountID
                                                           ,C.CashAccountId
                                                           ,R.RecordStatus
                                                           ,R.RecordType
                                                           ,R.EntityType
                                                           ,R.CreationDate
                                                           ,R.ProcessedDate
                                                           ,R.VoidDate
                                                           ,R.GroupID
                                                           ,R.Notes
                                                           ,R.LastUpdatedAt
                                                           ,R.LastUpdatedBy
                                                            --new columns
                                                           ,CR.GlobalCapitationRecordID
                                                           ,CR.GlobalCapitationRecordID
                                                           ,CR.GlobalCapitationRecordID
                                                           ,CR.RecordType
                                                           ,null
                                                           ,CR.ReferenceID
                                                           ,CR.Amount
                                                           ,CR.GroupID
                                                           ,CR.PostDate
                                                           ,null
                                                           ,null
                                                           ,isnull(CR.CapitationRateDetailID, CR.TermedRecordID)
                                                           ,CR.Amount
                                                           ,R.MethodOfPayment
                                                           ,CRD.RateCoverageType
                                                           ,CRD.QualifierId
                                                     from   Checks C
                                                            inner join #CashAccounts CA
                                                                on C.CashAccountId = CA.CashAccountId
                                                            inner join Records R
                                                                on R.RecordType = 'PS'
                                                                   and  R.ReferenceNumber = C.CheckId
                                                                   and  isnull(R.MethodOfPayment, '') = isnull(isnull(@MethodOfPayment, R.MethodOfPayment), '')
                                                            inner join VoidGlobalCapitationCheckDetails VCCD
                                                                on R.RecordID = VCCD.PaymentRecordID
                                                            inner join GlobalCapitationRecords CR
                                                                on VCCD.GlobalCapitationRecordID = CR.GlobalCapitationRecordID
                                                                   and  CR.RecordType = isnull(@RecordType, CR.RecordType)
                                                            left outer join CapitationRateDetails CRD
                                                                on CR.CapitationRateDetailID = CRD.CapitationRateDetailID
                                                            inner join EntityAccountMap EAM
                                                                on EAM.AccountID = R.ParentAccountID
                                                                   and  EAM.EntityType = 'VDR'
                                                            inner join Vendors V
                                                                on EAM.EntityID = V.VendorId
                                                                   and  isnull(V.VendorClass, '') = isnull(isnull(@VendorClass, V.VendorClass), '')
                                                                   and  isnull(V.VendorSubclass, '') = isnull(isnull(@VendorSubClass, V.VendorSubclass), '')
                                                     where  C.DateCreated
                                                            between @StartDate
                                                            and     @EndDate
                                                            and isnull(C.CheckNumber, '') = isnull(@CheckNumber, isnull(C.CheckNumber, ''))
                                                            and isnull(C.JobId, -1) = isnull(@JobId, isnull(C.JobId, -1))
                                                            and C.CheckStatus = isnull(@CheckStatus, C.CheckStatus)
                                                            and C.CheckStatus != 'PWV'
                                                     option (recompile)

                                                     select @error = @@error
                                                     if @error != 0
                                                         begin
                                                             select @ProcedureStep = 2
                                                             select @UserMsg = 'Check Register could not be created. Contact System Administrator.'
                                                             select @LogMsg
                                                                 = 'Insert failed for checks that were paid. Error: ' + convert(varchar, @error) + ' occurred.'
                                                             raiserror(
                                                                          65500
                                                                         ,1
                                                                         ,1
                                                                         ,@ProductName
                                                                         ,@ProcedureName
                                                                         ,@ProcedureStep
                                                                         ,@UserMsg
                                                                         ,@LogMsg
                                                                         ,@SessionID
                                                                         ,-1
                                                                         ,@rowcount
                                                                         ,1
                                                                      )
                                                             goto AppErrorExit
                                                         end

                                                     --Voided capitation checks with negative amounts
                                                     insert into    #ResultSet
                                                         (
                                                             RecordID
                                                            ,CheckID
                                                            ,CheckNumber
                                                            ,CheckDate
                                                            ,CheckAmount
                                                            ,CheckVoidReason
                                                            ,CheckStatusCode
                                                            ,ExternalCheckNumber
                                                            ,ExternalCheckCurrency
                                                            ,ExternalCheckAmount
                                                            ,ExternalMethodOfPaymentCode
                                                            ,ExternalCheckDate
                                                            ,CheckClearedDate
                                                            ,ExternalConversionRate
                                                            ,PaymentWizardJobId
                                                            ,ParentAccountID
                                                            ,CashAccountId
                                                            ,RecordStatusCode
                                                            ,RecordTypeCode
                                                            ,EntityTypeCode
                                                            ,CreationDate
                                                            ,ProcessedDate
                                                            ,VoidDate
                                                            ,CheckGroupID
                                                            ,Notes
                                                            ,LastUpdatedAt
                                                            ,LastUpdatedBy
                                                            --extra columns
                                                            ,FinancialRecordID
                                                            ,FinancialRecordDetailID
                                                            ,RecordDetailId
                                                            ,RecordDetailType
                                                            ,ReferenceNumber
                                                            ,DetailPaidAmount
                                                            ,DetailGroupID
                                                            ,DetailCreationDate
                                                            ,PaymentClassCode
                                                            ,AdjustmentVersion
                                                            ,RiskGroupVendorMapID
                                                            ,LineNumber
                                                            ,LinePaidAmount
                                                            ,MethodOfPayment
                                                            ,VoidInsert
                                                            ,RateCoverageType
                                                            ,QualifierId
                                                         )
                                                     select R.RecordID
                                                           ,C.CheckId
                                                           ,C.CheckNumber
                                                           ,C.DateCreated
                                                           ,- (C.Amount)
                                                           ,C.VoidReason
                                                           ,C.CheckStatus
                                                           ,C.ExternalCheckNumber
                                                           ,C.ExternalCheckCurrency
                                                           ,- (C.ExternalCheckAmount)
                                                           ,C.ExternalMethodOfPayment
                                                           ,C.ExternalCheckDate
                                                           ,C.CheckClearedDate
                                                           ,C.ExternalConversionRate
                                                           ,C.JobId
                                                           ,R.ParentAccountID
                                                           ,C.CashAccountId
                                                           ,R.RecordStatus
                                                           ,R.RecordType
                                                           ,R.EntityType
                                                           ,R.CreationDate
                                                           ,R.ProcessedDate
                                                           ,R.VoidDate
                                                           ,R.GroupID
                                                           ,R.Notes
                                                           ,R.LastUpdatedAt
                                                           ,R.LastUpdatedBy
                                                            --new columns
                                                           ,CR.GlobalCapitationRecordID
                                                           ,CR.GlobalCapitationRecordID
                                                           ,CR.GlobalCapitationRecordID
                                                           ,CR.RecordType
                                                           ,CR.ReferenceID
                                                           ,- (CR.Amount)
                                                           ,CR.GroupID
                                                           ,CR.PostDate
                                                           ,null
                                                           ,null
                                                           ,null
                                                           ,isnull(CR.CapitationRateDetailID, CR.TermedRecordID)
                                                           ,- (CR.Amount)
                                                           ,R.MethodOfPayment
                                                           ,'Y'
                                                           ,CRD.RateCoverageType
                                                           ,CRD.QualifierId
                                                     from   Checks C
                                                            inner join #CashAccounts CA
                                                                on C.CashAccountId = CA.CashAccountId
                                                            inner join Records R
                                                                on R.RecordType = 'PS'
                                                                   and  R.ReferenceNumber = C.CheckId
                                                                   and  isnull(R.MethodOfPayment, '') = isnull(isnull(@MethodOfPayment, R.MethodOfPayment), '')
                                                            inner join VoidGlobalCapitationCheckDetails VCCD
                                                                on R.RecordID = VCCD.PaymentRecordID
                                                            inner join GlobalCapitationRecords CR
                                                                on VCCD.GlobalCapitationRecordID = CR.GlobalCapitationRecordID
                                                                   and  CR.RecordType = isnull(@RecordType, CR.RecordType)
                                                            left outer join CapitationRateDetails CRD
                                                                on CR.CapitationRateDetailID = CRD.CapitationRateDetailID
                                                            inner join EntityAccountMap EAM
                                                                on EAM.AccountID = R.ParentAccountID
                                                                   and  EAM.EntityType = 'VDR'
                                                            inner join Vendors V
                                                                on EAM.EntityID = V.VendorId
                                                                   and  isnull(V.VendorClass, '') = isnull(isnull(@VendorClass, V.VendorClass), '')
                                                                   and  isnull(V.VendorSubclass, '') = isnull(isnull(@VendorSubClass, V.VendorSubclass), '')
                                                     where  C.DateVoided
                                                            between @StartDate
                                                            and     @EndDate
                                                            and isnull(C.CheckNumber, '') = isnull(@CheckNumber, isnull(C.CheckNumber, ''))
                                                            and isnull(C.JobId, -1) = isnull(@JobId, isnull(C.JobId, -1))
                                                            and C.CheckStatus = isnull(@CheckStatus, C.CheckStatus)
                                                            and C.CheckStatus != 'PWV'
                                                     option (recompile)

                                                     select @error = @@error
                                                     if @error != 0
                                                         begin
                                                             select @ProcedureStep = 2
                                                             select @UserMsg = 'Check Register could not be created. Contact System Administrator.'
                                                             select @LogMsg
                                                                 = 'Insert failed for checks that were paid. Error: ' + convert(varchar, @error) + ' occurred.'
                                                             raiserror(
                                                                          65500
                                                                         ,1
                                                                         ,1
                                                                         ,@ProductName
                                                                         ,@ProcedureName
                                                                         ,@ProcedureStep
                                                                         ,@UserMsg
                                                                         ,@LogMsg
                                                                         ,@SessionID
                                                                         ,-1
                                                                         ,@rowcount
                                                                         ,1
                                                                      )
                                                             goto AppErrorExit
                                                         end

                                                 end -- of "if @ShowVoidedChecks = 'Y'"
                                         end -- if isnull(@EntityType,'') = '' or @EntityType ='GCP'
                                 end --end of non-group usage
                         end --end of if EIN is null


                     --dont think you need this here b/c no record details for service lines, so the inner join will eliminate these rows automatically
                     if @RemoveZeroDollarClaimPayments = 'Y'
                         delete from #ResultSet
                         where  DetailPaidAmount = 0

                 end --end of SERVICE LINES USAGE

        --Insert forwarding balance records when @ReturnBalanceInfo = 'Totals and Individual Items'
        if @ReturnBalanceInfo = 'TOI'
            begin
                if @Debug = 1
                    begin
                        select  'if @ReturnBalanceInfo = TOI' 'rr_ExportCheckData'
                               ,@Usage '@Usage'
                    end

                if @Usage = '|ONEDETAILLEVEL|'
                    begin
                        insert into #ResultSet
                            (
                                RecordID
                               ,CheckID
                               ,CheckNumber
                               ,CheckDate
                               ,CheckAmount
                               ,CheckStatusCode
                               ,CheckVoidReason
                               ,ExternalCheckNumber
                               ,ExternalCheckCurrency
                               ,ExternalCheckAmount
                               ,ExternalConversionRate
                               ,PaymentWizardJobId
                               ,ParentAccountID
                               ,CashAccountId
                               ,RecordStatusCode
                               ,RecordTypeCode
                               ,EntityTypeCode
                               ,CreationDate
                               ,ProcessedDate
                               ,VoidDate
                               ,CheckGroupID
                               ,Notes
                               ,LastUpdatedAt
                               ,LastUpdatedBy
                                --extra columns
                               ,FinancialRecordID
                               ,RecordDetailId
                               ,RecordDetailType
                               ,PaymentClassCode
                               ,ReferenceNumber
                               ,DetailPaidAmount
                               ,DetailGroupID
                               ,DetailCreationDate
                               ,AdjustmentVersion
                               ,RiskGroupVendorMapID
                               ,MethodOfPayment
                            )
                        select  distinct
                                RS.RecordID
                               ,RS.CheckID
                               ,RS.CheckNumber
                               ,RS.CheckDate
                               ,RS.CheckAmount
                               ,RS.CheckStatusCode
                               ,RS.CheckVoidReason
                               ,RS.ExternalCheckNumber
                               ,RS.ExternalCheckCurrency
                               ,RS.ExternalCheckAmount
                               ,RS.ExternalConversionRate
                               ,RS.PaymentWizardJobId
                               ,RS.ParentAccountID
                               ,RS.CashAccountId
                               ,RS.RecordStatusCode
                               ,RS.RecordTypeCode
                               ,RS.EntityTypeCode
                               ,RS.CreationDate
                               ,RS.ProcessedDate
                               ,RS.VoidDate
                               ,RS.GroupId
                               ,RS.Notes
                               ,RS.LastUpdatedAt
                               ,RS.LastUpdatedBy
                                            --new columns
                               ,R.RecordID
                               ,R.RecordID
                               ,R.RecordType
                               ,R.PaymentClass
                               ,R.ReferenceNumber
                               ,FBD.Amount  --DetailPaidAmount
                               ,R.GroupID
                               ,R.CreationDate
                               ,R.Adjustmentversion
                               ,R.RiskGroupVendorMapID
                               ,R.MethodOfPayment
                        from    #ResultSet RS
                                inner join ForwardingBalances FB
                                    on FB.CheckId = RS.CheckID
                                inner join ForwardingBalanceDetails FBD
                                    on FBD.ForwardingBalanceId = FB.ForwardingBalanceId
                                inner join Records R
                                    on R.RecordID = FBD.RecordId
                        option (recompile)

                        select  @error = @@error

                    end
                else if @Usage = '|TWODETAILLEVELS|'
                         begin
                             insert into    #ResultSet
                                 (
                                     RecordID
                                    ,CheckID
                                    ,CheckNumber
                                    ,CheckDate
                                    ,CheckAmount
                                    ,CheckStatusCode
                                    ,CheckVoidReason
                                    ,ExternalCheckNumber
                                    ,ExternalCheckCurrency
                                    ,ExternalCheckAmount
                                    ,ExternalConversionRate
                                    ,PaymentWizardJobId
                                    ,ParentAccountID
                                    ,CashAccountId
                                    ,RecordStatusCode
                                    ,RecordTypeCode
                                    ,EntityTypeCode
                                    ,CreationDate
                                    ,ProcessedDate
                                    ,VoidDate
                                    ,CheckGroupID
                                    ,Notes
                                    ,LastUpdatedAt
                                    ,LastUpdatedBy
                                    --extra columns
                                    ,FinancialRecordID
                                    ,FinancialRecordDetailID
                                    ,RecordDetailId
                                    ,RecordDetailType
                                    ,PaymentClassCode
                                    ,ReferenceNumber
                                    ,DetailPaidAmount
                                    ,DetailGroupID
                                    ,DetailCreationDate
                                    ,AdjustmentVersion
                                    ,RiskGroupVendorMapID
                                    ,LineNumber
                                    ,LinePaidAmount
                                    ,MethodOfPayment
                                 )
                             select distinct
                                    RS.RecordID
                                   ,RS.CheckID
                                   ,RS.CheckNumber
                                   ,RS.CheckDate
                                   ,RS.CheckAmount
                                   ,RS.CheckStatusCode
                                   ,RS.CheckVoidReason
                                   ,RS.ExternalCheckNumber
                                   ,RS.ExternalCheckCurrency
                                   ,RS.ExternalCheckAmount
                                   ,RS.ExternalConversionRate
                                   ,RS.PaymentWizardJobId
                                   ,RS.ParentAccountID
                                   ,RS.CashAccountId
                                   ,RS.RecordStatusCode
                                   ,RS.RecordTypeCode
                                   ,RS.EntityTypeCode
                                   ,RS.CreationDate
                                   ,RS.ProcessedDate
                                   ,RS.VoidDate
                                   ,RS.GroupId
                                   ,RS.Notes
                                   ,RS.LastUpdatedAt
                                   ,RS.LastUpdatedBy
                                                    --new columns
                                   ,R.RecordID
                                   ,RD.RecordDetailID
                                   ,R.RecordID
                                   ,R.RecordType
                                   ,R.PaymentClass
                                   ,R.ReferenceNumber
                                   ,FBD.Amount      --DetailPaidAmount
                                   ,R.GroupID
                                   ,R.CreationDate
                                   ,R.Adjustmentversion
                                   ,R.RiskGroupVendorMapID
                                   ,RD.ItemID       --LineNumber
                                   ,RD.TotalAmount  --LinePaidAmount
                                   ,R.MethodOfPayment
                             from   #ResultSet RS
                                    inner join ForwardingBalances FB
                                        on FB.CheckId = RS.CheckID
                                    inner join ForwardingBalanceDetails FBD
                                        on FBD.ForwardingBalanceId = FB.ForwardingBalanceId
                                    inner join Records R
                                        on R.RecordID = FBD.RecordId
                                    inner join RecordDetails RD
                                        on R.RecordID = RD.RecordID
                             option (recompile)

                             select @error = @@error
                         end

                if @error != 0
                    begin
                        select  @ProcedureStep = 2
                        select  @UserMsg = 'Forwarding Balance records could not be inserted. Contact System Administrator.'
                        select  @LogMsg = 'Insert failed for Forwarding Balance records. Error: ' + convert(varchar, @error) + ' occurred.'
                        raiserror(65500, 1, 1, @ProductName, @ProcedureName, @ProcedureStep, @UserMsg, @LogMsg, @SessionID, -1, @rowcount, 1)
                        goto AppErrorExit
                    end
            end

        if @Usage = '|ONEDETAILLEVEL|'
            begin
                --prob shoudl take this off, can be misleading that a contract is on a claim, could be more than one right? eventually split claims if go across two contracts?
                --also a possilbe performance hit
                update  R
                set R.ContractID =
                        (
                            select  max(isnull(CR.ContractId, 0))
                            from    Claim_Results CR
                            where   CR.ClaimId = R.ReferenceNumber
                                    and R.AdjustmentVersion = CR.AdjustmentVersion
                                    and R.RecordDetailType in ('CA', 'A', 'MPD', 'IP', 'AIP', 'AIA', 'INF')
                        )
                from    #ResultSet R
            end

        --show only checks that had negative amounts as recorddetails
        if @ShowPositiveChecksOnly = 'Y'
            begin
                delete  from #ResultSet
                where   CheckAmount <= 0
            end

        --show only confirmed checks if option is set to N
        if @ShowUnconfirmedChecks = 'N'
            begin
                delete  from #ResultSet
                where   RecordStatusCode = 'CRT'
            end

        --****************************
        --update #resultset with informational data for all usages
        --****************************
        if @ReturnVendorInfo = 'Y'
            begin
                update  R
                set VendorNumber = V.VendorNumber
                   ,VendorName = V.VendorName
                   ,VendorID = V.VendorId
                   ,VendorAddress1 = V.Address1
                   ,VendorAddress2 = V.Address2
                   ,VendorCity = V.City
                   ,VendorState = V.State
                   ,VendorZip = V.Zip
                   ,VendorCounty = V.County
                   ,VendorCountryCode = V.CountryCode
                   ,PaymentCurrency = V.PaymentCurrency
                   ,VendorClass = V.VendorClass
                   ,VendorSubClass = V.VendorSubclass
                   ,EIN = C.EIN
                   ,CorporationId = C.CorporationId
                   ,CorporationName = C.LegalName
                   ,EFTBankName = V.BankName
                   ,EFTAccountName = V.AccountName
                   ,EFTRoutingNumber = V.RoutingNumber
                   ,EFTAccountNumber = V.AccountNumber
                from    #ResultSet R
                        inner join EntityAccountMap EAM
                            on EAM.AccountID = R.ParentAccountID
                               and EAM.EntityType = 'VDR'
                        inner join Vendors V
                            on EAM.EntityID = V.VendorId
                        inner join Corporations C
                            on V.CorporationId = C.CorporationId
                option (recompile)

                ---
                --- Update the "Pay To" fields with the alternate address from the vendor
                ---
                update  R
                set R.PayToName = AA.Name
                   ,R.PayToAddress1 = AA.Address1
                   ,R.PayToAddress2 = AA.Address2
                   ,R.PayToCity = AA.City
                   ,R.PayToState = AA.State
                   ,R.PayToZip = AA.Zip
                   ,R.PayToCountryCode = AA.CountryCode
                   ,R.PayToCounty = AA.County
                   ,R.PayToPhone = AA.Phone
                from    #ResultSet R
                       ,AlternateAddress AA
                where   R.VendorID = AA.EntityID
                        and AA.EntityType = 'Vendor'
                        and AA.AlternateAddressType = 'PPT'
                        and R.CreationDate
                        between AA.EffectiveDate
                        and     AA.ExpirationDate
                option (recompile)

            end


        -- Update Payment Currency Name
        update  R
        set R.PaymentCurrencyName = RC.Name
        from    #ResultSet R
               ,ReferenceCodes RC
        where   RC.Type = 'CURRENCY'
                and RC.Subtype = 'CURRENCY'
                and R.PaymentCurrency = RC.Code
        option (recompile)

        if @ReturnAccountInfo = 'Y'
            begin
                --get the account names
                update  R
                set AccountName = A.AccountName
                   ,BankAcountNumber = A.BankAccountNumber
                   ,RoutingNumber = A.RoutingNumber
                   ,FractionalRoutingNumber = A.FractionalRoutingNumber
                   ,SecondaryFractionalRoutingNumber = A.SecondaryFractionalRoutingNumber
                   ,BankCode = A.BankCode
                   ,BankName = A.BankName
                   ,BankAddress1 = A.BankAddress1
                   ,BankAddress2 = A.BankAddress2
                   ,BankCity = A.BankCity
                   ,BankState = A.BankState
                   ,BankZip = A.BankZip
                   ,BankCounty = A.BankCounty
                   ,BankCountryCode = A.BankCountryCode
                   ,MICRFormat = A.MICRFormat
                from    #ResultSet R
                       ,Accounts A
                where   R.ParentAccountID = A.AccountID
                option (recompile)

                --get the cash account information
                update  R
                set CashAccountName = A.AccountName
                   ,CashAccountNumber = A.AccountNumber
                   ,CashAccountBankAcountNumber = A.BankAccountNumber
                   ,CashAccountRoutingNumber = A.RoutingNumber
                   ,CashFractionalRoutingNumber = A.FractionalRoutingNumber
                   ,CashSecondaryFractionalRoutingNumber = A.SecondaryFractionalRoutingNumber
                   ,CashAccountBankCode = A.BankCode
                   ,CashAccountBankName = A.BankName
                   ,CashAccountBankAddress1 = A.BankAddress1
                   ,CashAccountBankAddress2 = A.BankAddress2
                   ,CashAccountBankCity = A.BankCity
                   ,CashAccountBankState = A.BankState
                   ,CashAccountBankZip = A.BankZip
                   ,CashAccountBankCounty = A.BankCounty
                   ,CashAccountBankCountryCode = A.BankCountryCode
                   ,CashAccountMICRFormat = A.MICRFormat
                from    #ResultSet R
                       ,Accounts A
                where   R.CashAccountId = A.AccountID
                option (recompile)

            end

        --get the referencecodes
        update  R
        set R.RecordStatus = RC.Name
           ,R.EntityType = RC2.Name
           ,R.CheckStatus = RC3.Name
        from    #ResultSet R
               ,ReferenceCodes RC
               ,ReferenceCodes RC2
               ,ReferenceCodes RC3
        where   RC.Code = R.RecordStatusCode
                and RC.Type = 'RECORDSTATUS'
                and RC2.Code = R.EntityTypeCode
                and RC2.Type = 'RECORDENTITY'
                and RC3.Code = R.CheckStatusCode
                and RC3.Type = 'CHECKSTATUS'

        update  R
        set R.RecordType = RC.Name
        from    #ResultSet R
               ,ReferenceCodes RC
        where   RC.Type = 'RECORDTYPE'
                and RC.Code = R.RecordTypeCode

        --Need the GroupID column for Entity Access permissions
        update  #ResultSet
        set GroupId = CheckGroupID


        --ONLY FOR CLAIM AND SERVICE LINE USAGES ONLY, shouldn't hurt to put them here, all columns will be null for CHECKS ONLY
        if @ReturnGroupInfo = 'Y'
            begin
                update  R
                set DetailGroupNumber = G.GroupNumber
                   ,DetailGroupName = G.GroupName
                   ,DetailGroupType = G.GroupType
                   ,DetailGroupLineOfBusinessCode = G.LOB
                   ,DetailGroupProductTypeCode = G.ProductType
                   ,ParentGroupID = G.ParentId
                   ,ParentGroupName = PG.GroupName
                   ,ParentGroupNumber = PG.GroupNumber
                from    #ResultSet R
                        inner join Groups G
                            on R.DetailGroupID = G.GroupId
                        left outer join Groups PG
                            on G.ParentId = PG.GroupId

                update  R
                set R.DetailGroupLineOfBusiness = RC.Name
                from    #ResultSet R
                       ,ReferenceCodes RC
                where   R.DetailGroupLineOfBusinessCode = RC.Code
                        and RC.Type = 'LINEOFBUSINESS'

                update  R
                set R.DetailGroupProductType = RC.Name
                from    #ResultSet R
                       ,ReferenceCodes RC
                where   R.DetailGroupProductTypeCode = RC.Code
                        and RC.Type = 'PRODUCTTYPE'
            end

        --if @ReturnBalanceInfo in ('Totals Only', 'Totals and Individual Items')
        --then update forwarding balance and previous forwarding balance details.
        if @ReturnBalanceInfo in ('TO', 'TOI')
            begin
                update  R
                set R.ForwardingBalanceId = FB.ForwardingBalanceId
                   ,R.PreviousForwardingBalanceId = FB2.ForwardingBalanceId
                   ,R.ForwardingBalance = FB.Amount
                   ,R.PreviousBalance = FB2.Amount
                   ,R.PreviousCheckNumber = CHK.CheckNumber
                   ,R.PreviousCheckDate = CHK.DateCreated
                from    #ResultSet R
                        inner join ForwardingBalances FB
                            on R.CheckID = FB.CheckId
                        left join ForwardingBalances FB2
                            on FB2.ForwardingBalanceId = FB.PreviousForwardingBalanceId
                               and FB2.Status != 'V'
                        left join Checks CHK
                            on CHK.CheckId = FB2.CheckId

                -- if Previous Forwarding balance does not exist (also covers case where current forwarding balance does not exist)
                --	Then get previous, most recent non voided check's forwarding balance info
                update  RS1
                set PreviousForwardingBalanceId = RS2.ForwardingBalanceId
                   ,PreviousBalance = RS2.Amount
                   ,PreviousCheckNumber = RS2.CheckNumber
                   ,PreviousCheckDate = RS2.DateCreated
                from    #ResultSet RS1
                        inner join
                            (
                                -- get previous, most recent non voided check's forwarding balance info
                                select  top 1
                                        R.CheckID
                                       ,FB.ForwardingBalanceId
                                       ,FB.Amount
                                       ,CHK2.CheckNumber
                                       ,CHK2.DateCreated
                                from    #ResultSet R
                                        inner join Checks CHK1
                                            on CHK1.CheckId = R.CheckID
                                        inner join Records R1
                                            on R1.ReferenceNumber = CHK1.CheckId
                                               and  R1.RecordType = 'PS'
                                        inner join Checks CHK2
                                            on CHK2.CheckId != CHK1.CheckId
                                               and  CHK2.VendorAccountId = CHK1.VendorAccountId
                                               and  CHK2.CheckStatus not in ('VD', 'PWV')
                                        inner join Records R2
                                            on R2.ReferenceNumber = CHK2.CheckId
                                               and  R2.RecordType = 'PS'
                                        left join ForwardingBalances FB
                                            on FB.CheckId = CHK2.CheckId
                                where  R.PreviousForwardingBalanceId is null
                                       and R2.ProcessedDate < R1.ProcessedDate
                                order by R2.ProcessedDate desc
                            ) RS2
                            on RS1.CheckID = RS2.CheckID
            end --end of if @ReturnBalanceInfo in ('TO', 'TOI')

        --- For the two details level usages we join in additional claim tables and make additional updates
        --- to the resultset table
        if @Usage = '|TWODETAILLEVELS|'
            begin

                update  R
                set Tooth = CD.Tooth
                   ,ProcedureCode = CD.ProcedureCode
                   ,LineServiceDateTo = CD.ServiceDateTo
                   ,LineServiceDateFrom = CD.ServiceDateFrom
                   ,StatementCoversFrom = CM.StatementCoversFrom
                   ,StatementCoversTo = CM.StatementCoversTo
                   ,ModifierCode = CD.Modifier
                   ,Modifier2Code = CD.Modifier2
                   ,Modifier3Code = CD.Modifier3
                   ,Modifier4Code = CD.Modifier4
                   ,PlaceOfServiceCode = CD.PlaceOfService
                   ,TypeOfServiceCode = CD.TypeOfService
                   ,COB = CD.COB
                   ,BilledCurrencyAmount = CD.BilledCurrencyAmount
                   ,ExchangeRate = CR.ExchangeRate
                   ,LineStatus = CR.Status
                   ,LineChargedAmount = CR.AmtCharged
                   ,LinePrevPaidAmount = case when R.EntityTypeCode = 'PRV' then CR.AmtPrevPaidProv
                                              when R.EntityTypeCode = 'MEM' then CR.AmtPrevPaidMember
                                         end
                   ,ServiceCategoryId = CR.ServiceCategoryId
                   ,LiabilityLevelId = CR.LiabilityLevelId
                   ,LiabilityPackageId = CR.LiabilityPackageId
                   ,FeeScheduleId = CR.FeeScheduleId
                   ,ReimbursementId = CR.ReimbursementId
                   ,BenefitCategoryId = CR.BenefitCategoryId
                   ,PlanId = CR.PlanId
                   ,ContractID = CR.ContractId
                   ,ExplanationId = CR.ExplanationId
                   ,AuthorizationID = CR.AuthorizationId
                   ,ClosedDate = C.ClosedDate
                   ,ClosedVersion = C.ClosedVersion
                   ,AdjustedClosedDate = C.AdjustedClosedDate
                   ,AmountMaximumAllowed = CD.AmountMaximumAllowed
                   ,AmtRepriced = CD.AmtRepriced
                   ,Surface = CD.Surface
                   ,SuppliedUCR = CD.SuppliedUCR
                   ,ServiceUnits = CD.ServiceUnits
                   ,HCPCSRates = CD.HCPCSRates
                   ,FeeCode = CD.FeeCode
                   ,EPSDTPlan = CD.EPSDTPlan
                   ,EMG = CD.EMG
                   ,DiagnosisPtr1 = CD.DiagnosisPtr1
                   ,DiagnosisPtr2 = CD.DiagnosisPtr2
                   ,DiagnosisPtr3 = CD.DiagnosisPtr3
                   ,DiagnosisPtr4 = CD.DiagnosisPtr4
                   ,DiagnosisPtr5 = CD.DiagnosisPtr5
                   ,DiagnosisPtr6 = CD.DiagnosisPtr6
                   ,DiagnosisPtr7 = CD.DiagnosisPtr7
                   ,DiagnosisPtr8 = CD.DiagnosisPtr8
                   ,Description = CD.Description
                   ,AdjProcedureCode = CD.AdjProcedureCode
                   ,AdjModifier = CD.AdjModifier
                   ,AdjPlaceOfService = CD.AdjPlaceOfService
                   ,AdjUnitType = CD.AdjUnitType
                   ,AdjServiceUnits = CD.AdjServiceUnits
                   ,Status = CR.Status
                   ,MemberCoverageId = CR.MemberCoverageId
                   ,BenefitCoverageID = CR.BenefitCoverageID
                   ,AuthorizationVersion = CR.AuthorizationVersion
                   ,AuthServiceLineNumber = CR.AuthServiceLineNumber
                   ,AuthServiceDetailLineNumber = CR.AuthServiceDetailLineNumber
                   ,ClaimDateProcessed = CM.DateProcessed
                   ,InterestOnAdjustments = CM.InterestOnAdjustments
                   ,AllowedUnits = CR.AllowedUnits
                   ,AmtCharged = CR.AmtCharged
                   ,AmtDeferred = CR.AmtDeferred
                   ,AmtPatientLiability = CR.AmtPatientLiability
                   ,AmtNotCovered = CR.AmtNotCovered
                   ,AmtCovered = CR.AmtCovered
                   ,AmtDisallowed = CR.AmtDisallowed
                   ,AmtOverContract = CR.AmtOverContract
                   ,AmtFeeAllowed = CR.AmtFeeAllowed
                   ,AmtReduction = CR.AmtReduction
                   ,AmtDiscount = CR.AmtDiscount
                   ,AmtWithhold = CR.AmtWithhold
                   ,AmtEligible = CR.AmtEligible
                   ,AmtCopay = CR.AmtCopay
                   ,AmtCoinsurance = CR.AmtCoinsurance
                   ,AmtDeductible = CR.AmtDeductible
                   ,AmtCOB = CR.AmtCOB
                   ,AmtStopLoss = CR.AmtStopLoss
                   ,AmtExceedMax = CR.AmtExceedMax
                   ,AmtPrevPaidProv = CR.AmtPrevPaidProv
                   ,AmtToPay = CR.AmtToPay
                   ,AmtToPayMember = CR.AmtToPayMember
                   ,AmtUCR = CR.AmtUCR
                   ,AmtOutOfPocket = CR.AmtOutOfPocket
                   ,AmtProviderPenalty = CR.AmtProviderPenalty
                   ,AmtMemberPenalty = CR.AmtMemberPenalty
                   ,AmtPrevPaidMember = CR.AmtPrevPaidMember
                   ,SalesTaxRateID = CR.SalesTaxRateID
                   ,SalesTaxAmount = CR.SalesTaxAmount
                   ,ClaimSOC = CM.SOC
                   ,LineSOC = CD.SOC
                   ,AmtSOCApplied = CR.AmtSOCApplied
                from    #ResultSet R
                       ,Claims C
                       ,Claim_Master CM
                       ,Claim_Details CD
                       ,Claim_Results CR
                where   R.ReferenceNumber = C.ClaimId
                        and R.RecordDetailType in ('A', 'CA', 'MPD', 'INF')
                        and R.ReferenceNumber = CM.ClaimID
                        and CM.AdjustmentVersion = R.AdjustmentVersion
                        and R.ReferenceNumber = CD.ClaimID
                        and CD.AdjustmentVersion = R.AdjustmentVersion
                        and R.LineNumber = CD.LineNumber
                        and R.ReferenceNumber = CR.ClaimId
                        and CR.AdjustmentVersion = R.AdjustmentVersion
                        and R.LineNumber = CR.LineNumber
                option (recompile)

                --- Update the ServiceCategory, BenefitCategory, LiabilityLevel, LiabilityPackage, Reimbursement and FeeSchedule names.
                --- one update should cause sql to make 1 pass through the resultset instead of 6
                update  R
                set LiabilityLevelName =
                        (
                            select  BS1.Name
                            from    BenefitStructures BS1
                            where   R.LiabilityLevelId = BS1.StructureID
                        )
                   ,LiabilityPackageName =
                        (
                            select  BS2.Name
                            from    BenefitStructures BS2
                            where   R.LiabilityPackageId = BS2.StructureID
                        )
                   ,ReimbursementName =
                        (
                            select  BS3.Name
                            from    BenefitStructures BS3
                            where   R.ReimbursementId = BS3.StructureID
                        )
                   ,FeeScheduleName =
                        (
                            select  F.FeeName
                            from    FeeSchedule F
                            where   R.FeeScheduleId = F.FeeScheduleId
                        )
                   ,BenefitCategoryName =
                        (
                            select  B.BnfCategoryName
                            from    BenefitCategories B
                            where   R.BenefitCategoryId = B.BnfCategoryID
                        )
                from    #ResultSet R

                -- authorization
                update  R
                set R.AuthorizationNumber = A.AuthorizationNumber
                from    #ResultSet R
                        inner join Authorizations A
                            on R.AuthorizationID = A.AuthorizationID

                --Service Category
                update  R
                set ServiceCategoryName = S.ServiceCategoryName
                   ,ServiceCategoryClass = RC.Name
                   ,ServiceCategorySubClass =
                        (
                            select  RC2.Name
                            from    ReferenceCodes RC2 with (nolock)
                            where   RC2.Type = 'SERVICECATEGORYSUBCLASS'
                                    and RC2.Subtype = RC.Name
                                    and RC2.Code = S.SubClass
                        )
                from    #ResultSet R
                        inner join ServiceCategories S
                            on R.ServiceCategoryId = S.ServiceCategoryID
                        left outer join ReferenceCodes RC with (nolock)
                            on RC.Type = 'SERVICECATEGORYCLASS'
                               and RC.Code = S.Class

                -- get the names for the modifiers and the type and place of service from reference codes
                update  R
                set Modifier = RC.Name
                from    #ResultSet R
                       ,ReferenceCodes RC
                where   R.ModifierCode = RC.Code
                        and RC.Type = 'Modifier'

                update  R
                set Modifier2 = RC.Name
                from    #ResultSet R
                       ,ReferenceCodes RC
                where   R.Modifier2Code = RC.Code
                        and RC.Type = 'Modifier'

                update  R
                set Modifier3 = RC.Name
                from    #ResultSet R
                       ,ReferenceCodes RC
                where   R.Modifier3Code = RC.Code
                        and RC.Type = 'Modifier'

                update  R
                set Modifier4 = RC.Name
                from    #ResultSet R
                       ,ReferenceCodes RC
                where   R.Modifier4Code = RC.Code
                        and RC.Type = 'Modifier'

                update  R
                set PlaceOfService = RC.Name
                from    #ResultSet R
                       ,ReferenceCodes RC
                where   R.PlaceOfServiceCode = RC.Code
                        and RC.Type = 'PlaceOfService'

                update  R
                set TypeOfService = RC.Name
                from    #ResultSet R
                       ,ReferenceCodes RC
                where   R.TypeOfServiceCode = RC.Code
                        and RC.Type = 'TypeOfService'

                --- Update the benefit coverage dates
                update  R
                set R.BenefitCoverageEffectiveDate = BC.EffectiveDate
                   ,R.BenefitCoverageExpirationDate = BC.ExpirationDate
                from    #ResultSet R
                       ,BenefitCoverages BC
                where   R.BenefitCoverageID = BC.BenefitCoverageId

            end --of: if @Usage='|TWODETAILLEVELS|'	


        --- The Ids for these updates are only populated for these two usages
        if @Usage in ('|ONEDETAILLEVEL|', '|TWODETAILLEVELS|')
            begin

                update  R
                set FormTypeCode = CM.FormType
                   ,ClaimId = CM.ClaimID
                   ,ClaimNumber = CM.ClaimNumber
                   ,DateReceived = CM.DateReceived
                   ,UtilizationDate = C.UtilizationDate
                   ,ServiceDateFrom = C.ServiceDateFrom
                   ,ServiceDateTo = C.ServiceDateTo
                   ,SubscriberContractID = CM.SubscriberContractID
                   ,MemberId = CM.MemberID
                   ,ProviderID = CM.ProviderID
                   ,OfficeID = CM.OfficeId
                   ,ClaimType = CM.ClaimType
                   ,ClaimStatus = CM.ClaimStatus
                   ,SubscriberNumber = CM.InsuredNumberSearched
                   ,TotalCharges = CM.TotalCharges
                   ,BilledCurrency = CM.BilledCurrency
                   ,PatientAccountNumber = CM.PatientAccountNumber
                   ,ExternalClaimNumber = CM.ExternalClaimNumber
                   ,CleanedDate = CM.CleanedDate
                   ,InterestOnAdjustments = CM.InterestOnAdjustments
                   ,DateEncounterExported = C.DateEncounterExported
                   ,InputBatchID = I.InputBatchID
                   ,SourceType = I.SourceType
                   ,ClosedDate = C.ClosedDate
                   ,ClosedVersion = C.ClosedVersion
                   ,AdjustedClosedDate = CM.AdjustedClosedDate
                   ,InitialAdjudicationVersion = C.InitialAdjudicationVersion
                   ,AdjudicationActionCodes = C.AdjudicationActionCodes
                   ,PaymentActionCodes = C.PaymentActionCodes
                   ,CategoryI = C.CategoryI
                   ,CategoryII = C.CategoryII
                   ,CategoryIII = C.CategoryIII
                   ,CaseID = CM.CaseID
                   ,ClaimExplanationId = C.ExplanationId
                   ,DelayReason = CM.DelayReason
                   ,ClaimSOC = CM.SOC
                   ,GracePeriod = CM.GracePeriod
                   ,ReallocateClaimLevelAmounts = CM.ReallocateClaimLevelAmounts
                   ,MemberCoverageId = isnull(R.MemberCoverageId, C.MemberCoverageId)
                from    #ResultSet R
                       ,Claims C
                       ,Claim_Master CM
                       ,InputBatches I
                where   R.ReferenceNumber = C.ClaimId
                        and R.RecordDetailType in ('A', 'CA', 'MPD', 'IP', 'AIP', 'AIA', 'INF')
                        and R.ReferenceNumber = CM.ClaimID
                        and CM.AdjustmentVersion = R.AdjustmentVersion
                        and C.InputBatchID = I.InputBatchID
                option (recompile)

                -- DateEOBPrinted
                update  R
                set DateEOBPrinted = DR.FulfilledAt
                from    #ResultSet R
                        inner join DocumentRequests DR
                            on R.ClaimId = DR.ClaimId
                               and R.AdjustmentVersion = DR.AdjustmentVersion
                               and DR.DocumentType = 'EOB'
                               and DR.Status = 'PRT'

                -- Repriced Data
                update  R
                set R.SourceNumber = I.SourceNumber
                   ,R.ExternalBatchNumber = I.ExternalBatchNumber
                   ,R.DateScanned = I.DateScanned
                   ,R.SourceType = I.SourceType
                   ,R.ControlNumber = I.ControlNumber
                   ,R.Class = I.Class
                   ,R.SubClass = I.SubClass
                from    #ResultSet R
                       ,InputBatches I
                where   R.InputBatchID = I.InputBatchID

                -- Update Billed Currency Name
                update  R
                set R.BilledCurrencyName = RC.Name
                from    #ResultSet R
                       ,ReferenceCodes RC
                where   RC.Type = 'CURRENCY'
                        and RC.Subtype = 'CURRENCY'
                        and R.BilledCurrency = RC.Code


                -- Update InterestOnAdjustmentsName
                update  R
                set R.InterestOnAdjustmentsName = RC.Name
                from    #ResultSet R
                       ,ReferenceCodes RC
                where   RC.Type = 'InterestOnAdjustments'
                        and RC.Subtype = 'InterestOnAdjustments'
                        and R.InterestOnAdjustments = RC.Code


                update  R
                set SubscriberContractID = M.SubscriberContractID
                   ,MemberId = M.MEmberID
                   ,ProviderID = M.ProviderId
                   ,OfficeID = M.OfficeID
                   ,RiskGroupID = M.RiskGroupID
                   ,HospitalID = M.HospitalID
                from    #ResultSet R
                        inner join MemberProviderMap M
                            on R.ReferenceNumber = M.MemberProviderID
                               and R.RecordDetailType in ('CAD', 'CAT', 'CPT')


                update  R
                set SubscriberContractID = M.SubscriberContractId
                   ,MemberId = M.MemberId
                from    #ResultSet R
                        inner join MemberCoverages M
                            on R.ReferenceNumber = M.MemberCoverageID
                               and R.RecordDetailType in ('GCP', 'GCD', 'GCT')


                if @ReturnMemberInfo = 'Y'
                    begin

                        update  R
                        set PatientName = M.LastName + case when isnull(M.FirstName, '') = '' then ' '
                                                            else ', '
                                                       end + isnull(M.FirstName, '')
                           ,SubscriberName = M2.LastName + case when isnull(M2.FirstName, '') = '' then ' '
                                                                else ', '
                                                           end + isnull(M2.FirstName, '')
                           ,SocialSecurityNumber = M.SocialSecurityNumber
                           ,PatientDOB = M.DateOfBirth
                           ,PatientZip = M.Zip
                           ,PatientZipSearch = M.ZipSearch
                           ,SubscriberID = M2.MemberID
                        from    #ResultSet R
                               ,SubscriberContracts SC
                               ,Members M
                               ,Members M2
                        where   R.MemberId = M.MemberID
                                and R.SubscriberContractID = SC.SubscriberContractID
                                and SC.MemberId = M2.MemberID

                        if exists
                            (
                                select  1
                                from    #ResultSet
                                where   RecordDetailType in ('CAD', 'CAT', 'CPT')
                            ) -- capitation
                            begin

                                select  @MemberCoverageEntityID = EntityId
                                from    Entities
                                where   EntityName = 'MemberCoverages'
                                select  @GroupCoverageEntityID = EntityId
                                from    Entities
                                where   EntityName = 'Groups'

                                update  R
                                set R.MemberCoverageId = MC.MemberCoverageID
                                from    #ResultSet R
                                        inner join MemberCoverages MC
                                            on MC.MemberId = R.MemberId
                                               and MC.SubscriberContractId = R.SubscriberContractID
                                where   exists
                                    (
                                        select  1
                                        from    BenefitCoverages BC
                                        where   BC.EntityTypeId = @MemberCoverageEntityID
                                                and BC.EntityId = MC.MemberCoverageID
                                                and BC.CoverageEntityType = 'BAS'
                                                and R.DetailCreationDate
                                                between BC.EffectiveDate
                                                and     BC.ExpirationDate
                                    )
                                        and R.RecordDetailType in ('CAD', 'CAT', 'CPT')

                                update  R
                                set R.MemberCoverageId = MC.MemberCoverageID
                                from    #ResultSet R
                                        inner join MemberCoverages MC
                                            on MC.MemberId = R.MemberId
                                               and MC.SubscriberContractId = R.SubscriberContractID
                                where   MC.MemberCoverageID =
                                    (
                                        select  top 1
                                                BC.EntityId
                                        from    BenefitCoverages BC
                                        where   BC.EntityTypeId = @MemberCoverageEntityID
                                                and BC.EntityId = MC.MemberCoverageID
                                                and BC.CoverageEntityType = 'BAS'
                                        order by BC.ExpirationDate desc
                                    )
                                        and R.RecordDetailType in ('CAD', 'CAT', 'CPT')
                                        and R.MemberCoverageId is null

                                update  R
                                set PlanId = BC.CoverageEntityId
                                from    #ResultSet R
                                        inner join BenefitCoverages BC
                                            on BC.EntityId = R.DetailGroupID
                                               and BC.EntityTypeId = @GroupCoverageEntityID
                                               and BC.CoverageEntityType = 'BAS'
                                where   R.DetailCreationDate
                                between BC.EffectiveDate
                                and     BC.ExpirationDate

                            end -- capitation

                        else if (exists
                                 (
                                     select 1
                                     from   #ResultSet
                                     where  RecordDetailType in ('GCP', 'GCD', 'GCT')
                                 )
                                ) -- glocal capitation
                                 begin
                                     select @GroupCoverageEntityID = EntityId
                                     from   Entities
                                     where  EntityName = 'Groups'

                                     update R
                                     set R.MemberCoverageId = R.ReferenceNumber
                                     from   #ResultSet R
                                     where  R.RecordDetailType in ('GCP', 'GCD', 'GCT')

                                     update R
                                     set PlanId = BC.CoverageEntityId
                                     from   #ResultSet R
                                            inner join BenefitCoverages BC
                                                on BC.EntityId = R.DetailGroupID
                                                   and  BC.EntityTypeId = @GroupCoverageEntityID
                                                   and  BC.CoverageEntityType = 'BAS'
                                     where  R.DetailCreationDate
                                     between BC.EffectiveDate
                                     and     BC.ExpirationDate

                                 end -- global capitation


                        update  R
                        set R.MemberNumber = MC.MemberNumber
                           ,R.MemberPolicyNumber = MC.PolicyNumber
                        from    #ResultSet R
                                inner join MemberCoverages MC
                                    on R.MemberCoverageId = MC.MemberCoverageID


                        update  R
                        set SubscriberNumber = MC.MemberNumber
                        from    #ResultSet R
                                inner join MemberCoverages MC
                                    on R.SubscriberID = MC.MemberId
                                       and R.PlanId = MC.BasePlanID
                                       and R.SubscriberContractID = MC.SubscriberContractId
                                inner join SubscriberContracts SC
                                    on MC.SubscriberContractId = SC.SubscriberContractID
                                       and R.DetailGroupID = SC.GroupId

                    end

                --Update the Base Plan information
                update  R
                set PlanName = P.PlanName
                   ,LineOfBusiness =
                        (
                            select  rc.Description
                            from    ReferenceCodes rc
                            where   rc.Type = 'LINEOFBUSINESS'
                                    and rc.Subtype = 'LINEOFBUSINESS'
                                    and rc.Code = P.LineOfBusinessCode
                        )
                   ,ProductType =
                        (
                            select  rc.Description
                            from    ReferenceCodes rc
                            where   rc.Type = 'PRODUCTTYPE'
                                    and rc.Subtype = 'PRODUCTTYPE'
                                    and rc.Code = P.ProductType
                        )
                   ,ProductLine =
                        (
                            select  rc.Description
                            from    ReferenceCodes rc
                            where   rc.Type = 'PRODUCTLINE'
                                    and rc.Subtype = 'PRODUCTLINE'
                                    and rc.Code = P.ProductLineCode
                        )
                from    #ResultSet R
                       ,BasePlans P
                where   R.PlanId = P.PlanID

                -- *****************************************************************
                -- get up to 4 coverage mappings
                -- *****************************************************************
                if exists
                    (
                        select  1
                        from    #ResultSet
                    )
                    begin
                        -- get 1st coverage mapping
                        update  RS
                        set RS.Coverage = case DT.RowNumber
                                               when 1 then DT.Code
                                               else RS.Coverage
                                          end
                           ,RS.CoverageName = case DT.RowNumber
                                                   when 1 then DT.Name
                                                   else RS.CoverageName
                                              end
                        from    #ResultSet RS
                                inner join
                                    (
                                        select  ERCM.EntityID
                                               ,RC.Code
                                               ,RC.Name
                                               ,row_number() over (partition by ERCM.EntityID
                                                                   order by ERCM.EntityReferenceCodeMapID desc
                                                                  ) as RowNumber
                                        from    ReferenceCodes RC
                                                inner join EntityReferenceCodeMap ERCM
                                                    on RC.ReferenceCodeID = ERCM.ReferenceCodeID
                                                       and  ERCM.EntityType = 'Base Plan'
                                                       and  ERCM.ReferenceCodeType = 'Coverage'
                                                       and  ERCM.ReferenceCodeSubType = 'Coverage'
                                    ) DT
                                    on RS.PlanId = DT.EntityID
                        where   DT.RowNumber = 1

                        -- get 2nd coverage mapping
                        update  RS
                        set RS.Coverage2 = case DT.RowNumber
                                                when 2 then DT.Code
                                                else RS.Coverage2
                                           end
                           ,RS.Coverage2Name = case DT.RowNumber
                                                    when 2 then DT.Name
                                                    else RS.Coverage2Name
                                               end
                        from    #ResultSet RS
                                inner join
                                    (
                                        select  ERCM.EntityID
                                               ,RC.Code
                                               ,RC.Name
                                               ,row_number() over (partition by ERCM.EntityID
                                                                   order by ERCM.EntityReferenceCodeMapID desc
                                                                  ) as RowNumber
                                        from    ReferenceCodes RC
                                                inner join EntityReferenceCodeMap ERCM
                                                    on RC.ReferenceCodeID = ERCM.ReferenceCodeID
                                                       and  ERCM.EntityType = 'Base Plan'
                                                       and  ERCM.ReferenceCodeType = 'Coverage'
                                                       and  ERCM.ReferenceCodeSubType = 'Coverage'
                                    ) DT
                                    on RS.PlanId = DT.EntityID
                        where   DT.RowNumber = 2

                        -- get 3rd coverage mapping
                        update  RS
                        set RS.Coverage3 = case DT.RowNumber
                                                when 3 then DT.Code
                                                else RS.Coverage3
                                           end
                           ,RS.Coverage3Name = case DT.RowNumber
                                                    when 3 then DT.Name
                                                    else RS.Coverage3Name
                                               end
                        from    #ResultSet RS
                                inner join
                                    (
                                        select  ERCM.EntityID
                                               ,RC.Code
                                               ,RC.Name
                                               ,row_number() over (partition by ERCM.EntityID
                                                                   order by ERCM.EntityReferenceCodeMapID desc
                                                                  ) as RowNumber
                                        from    ReferenceCodes RC
                                                inner join EntityReferenceCodeMap ERCM
                                                    on RC.ReferenceCodeID = ERCM.ReferenceCodeID
                                                       and  ERCM.EntityType = 'Base Plan'
                                                       and  ERCM.ReferenceCodeType = 'Coverage'
                                                       and  ERCM.ReferenceCodeSubType = 'Coverage'
                                    ) DT
                                    on RS.PlanId = DT.EntityID
                        where   DT.RowNumber = 3

                        -- get 4th coverage mapping
                        update  RS
                        set RS.Coverage4 = case DT.RowNumber
                                                when 4 then DT.Code
                                                else RS.Coverage4
                                           end
                           ,RS.Coverage4Name = case DT.RowNumber
                                                    when 4 then DT.Name
                                                    else RS.Coverage4Name
                                               end
                        from    #ResultSet RS
                                inner join
                                    (
                                        select  ERCM.EntityID
                                               ,RC.Code
                                               ,RC.Name
                                               ,row_number() over (partition by ERCM.EntityID
                                                                   order by ERCM.EntityReferenceCodeMapID desc
                                                                  ) as RowNumber
                                        from    ReferenceCodes RC
                                                inner join EntityReferenceCodeMap ERCM
                                                    on RC.ReferenceCodeID = ERCM.ReferenceCodeID
                                                       and  ERCM.EntityType = 'Base Plan'
                                                       and  ERCM.ReferenceCodeType = 'Coverage'
                                                       and  ERCM.ReferenceCodeSubType = 'Coverage'
                                    ) DT
                                    on RS.PlanId = DT.EntityID
                        where   DT.RowNumber = 4

                    end --of: if exists (select 1 from #ResultSet)

                if @ReturnProviderInfo = 'Y'
                    begin
                        update  R
                        set ProviderName = P.LastName + case when isnull(P.FirstName, '') = '' then ' '
                                                             else ', '
                                                        end + isnull(P.FirstName, '')
                           ,ProviderFirstName = P.FirstName
                           ,ProviderLastName = P.LastName
                           ,ProviderNumber = P.ProviderNumber
                           ,ProviderType = P.ProviderType
                        from    #ResultSet R
                               ,Providers P
                        where   R.ProviderID = P.ProviderID
                    end
                --- Update Columns from Offices
                if @ReturnOfficeInfo = 'Y'
                    begin
                        update  R
                        set R.OfficeName = O.OfficeName
                           ,R.OfficeNumber = O.OfficeNumber
                           ,R.OfficeAddress = O.Address1
                           ,R.OfficeAddress2 = O.Address2
                           ,R.OfficeCity = O.City
                           ,R.OfficeState = O.State
                           ,R.OfficeZip = O.Zip
                           ,R.OfficeZipSearch = O.ZipSearch
                        from    #ResultSet R
                               ,Offices O
                        where   R.OfficeID = O.OfficeID
                    end

                --Diag Codes
                if @ReturnDiagnosisCodes = 'Y'
                    begin
                        update  R
                        set R.DiagnosisCode1 = left(C.Code, 10)
                           ,R.DiagnosisQualifier1 = C.DiagnosisCodeQualifier
                           ,R.POAIndicator1 = C.POAIndicator
                        from    #ResultSet R
                               ,Claim_Codes C
                        where   C.ClaimID = R.ClaimId
                                and C.AdjustmentVersion = R.AdjustmentVersion
                                and C.CodeType = 'DIAGNOSIS'
                                and C.Sequence = 1

                        update  R
                        set R.DiagnosisCode2 = left(C.Code, 10)
                           ,R.DiagnosisQualifier2 = C.DiagnosisCodeQualifier
                           ,R.POAIndicator2 = C.POAIndicator
                        from    #ResultSet R
                               ,Claim_Codes C
                        where   C.ClaimID = R.ClaimId
                                and C.AdjustmentVersion = R.AdjustmentVersion
                                and C.CodeType = 'DIAGNOSIS'
                                and C.Sequence = 2

                        update  R
                        set R.DiagnosisCode3 = left(C.Code, 10)
                           ,R.DiagnosisQualifier3 = C.DiagnosisCodeQualifier
                           ,R.POAIndicator3 = C.POAIndicator
                        from    #ResultSet R
                               ,Claim_Codes C
                        where   C.ClaimID = R.ClaimId
                                and C.AdjustmentVersion = R.AdjustmentVersion
                                and C.CodeType = 'DIAGNOSIS'
                                and C.Sequence = 3

                        update  R
                        set R.DiagnosisCode4 = left(C.Code, 10)
                           ,R.DiagnosisQualifier4 = C.DiagnosisCodeQualifier
                           ,R.POAIndicator4 = C.POAIndicator
                        from    #ResultSet R
                               ,Claim_Codes C
                        where   C.ClaimID = R.ClaimId
                                and C.AdjustmentVersion = R.AdjustmentVersion
                                and C.CodeType = 'DIAGNOSIS'
                                and C.Sequence = 4

                        update  R
                        set R.DiagnosisCode5 = left(C.Code, 10)
                           ,R.DiagnosisQualifier5 = C.DiagnosisCodeQualifier
                           ,R.POAIndicator5 = C.POAIndicator
                        from    #ResultSet R
                               ,Claim_Codes C
                        where   C.ClaimID = R.ClaimId
                                and C.AdjustmentVersion = R.AdjustmentVersion
                                and C.CodeType = 'DIAGNOSIS'
                                and C.Sequence = 5

                        update  R
                        set R.DiagnosisCode6 = left(C.Code, 10)
                           ,R.DiagnosisQualifier6 = C.DiagnosisCodeQualifier
                           ,R.POAIndicator6 = C.POAIndicator
                        from    #ResultSet R
                               ,Claim_Codes C
                        where   C.ClaimID = R.ClaimId
                                and C.AdjustmentVersion = R.AdjustmentVersion
                                and C.CodeType = 'DIAGNOSIS'
                                and C.Sequence = 6

                        update  R
                        set R.DiagnosisCode7 = left(C.Code, 10)
                           ,R.DiagnosisQualifier7 = C.DiagnosisCodeQualifier
                           ,R.POAIndicator7 = C.POAIndicator
                        from    #ResultSet R
                               ,Claim_Codes C
                        where   C.ClaimID = R.ClaimId
                                and C.AdjustmentVersion = R.AdjustmentVersion
                                and C.CodeType = 'DIAGNOSIS'
                                and C.Sequence = 7

                        update  R
                        set R.DiagnosisCode8 = left(C.Code, 10)
                           ,R.DiagnosisQualifier8 = C.DiagnosisCodeQualifier
                           ,R.POAIndicator8 = C.POAIndicator
                        from    #ResultSet R
                               ,Claim_Codes C
                        where   C.ClaimID = R.ClaimId
                                and C.AdjustmentVersion = R.AdjustmentVersion
                                and C.CodeType = 'DIAGNOSIS'
                                and C.Sequence = 8

                        update  R
                        set R.DiagnosisCode9 = left(C.Code, 10)
                           ,R.DiagnosisQualifier9 = C.DiagnosisCodeQualifier
                           ,R.POAIndicator9 = C.POAIndicator
                        from    #ResultSet R
                               ,Claim_Codes C
                        where   C.ClaimID = R.ClaimId
                                and C.AdjustmentVersion = R.AdjustmentVersion
                                and C.CodeType = 'DIAGNOSIS'
                                and C.Sequence = 9

                        update  R
                        set R.DiagnosisCode10 = left(C.Code, 10)
                           ,R.DiagnosisQualifier10 = C.DiagnosisCodeQualifier
                           ,R.POAIndicator10 = C.POAIndicator
                        from    #ResultSet R
                               ,Claim_Codes C
                        where   C.ClaimID = R.ClaimId
                                and C.AdjustmentVersion = R.AdjustmentVersion
                                and C.CodeType = 'DIAGNOSIS'
                                and C.Sequence = 10

                        update  R
                        set R.DiagnosisCode11 = left(C.Code, 10)
                           ,R.DiagnosisQualifier11 = C.DiagnosisCodeQualifier
                           ,R.POAIndicator11 = C.POAIndicator
                        from    #ResultSet R
                               ,Claim_Codes C
                        where   C.ClaimID = R.ClaimId
                                and C.AdjustmentVersion = R.AdjustmentVersion
                                and C.CodeType = 'DIAGNOSIS'
                                and C.Sequence = 11

                        update  R
                        set R.DiagnosisCode12 = left(C.Code, 10)
                           ,R.DiagnosisQualifier12 = C.DiagnosisCodeQualifier
                           ,R.POAIndicator12 = C.POAIndicator
                        from    #ResultSet R
                               ,Claim_Codes C
                        where   C.ClaimID = R.ClaimId
                                and C.AdjustmentVersion = R.AdjustmentVersion
                                and C.CodeType = 'DIAGNOSIS'
                                and C.Sequence = 12

                        update  R
                        set R.DiagnosisCode13 = left(C.Code, 10)
                           ,R.DiagnosisQualifier13 = C.DiagnosisCodeQualifier
                           ,R.POAIndicator13 = C.POAIndicator
                        from    #ResultSet R
                               ,Claim_Codes C
                        where   C.ClaimID = R.ClaimId
                                and C.AdjustmentVersion = R.AdjustmentVersion
                                and C.CodeType = 'DIAGNOSIS'
                                and C.Sequence = 13

                        update  R
                        set R.DiagnosisCode14 = left(C.Code, 10)
                           ,R.DiagnosisQualifier14 = C.DiagnosisCodeQualifier
                           ,R.POAIndicator14 = C.POAIndicator
                        from    #ResultSet R
                               ,Claim_Codes C
                        where   C.ClaimID = R.ClaimId
                                and C.AdjustmentVersion = R.AdjustmentVersion
                                and C.CodeType = 'DIAGNOSIS'
                                and C.Sequence = 14

                        update  R
                        set R.DiagnosisCode15 = left(C.Code, 10)
                           ,R.DiagnosisQualifier15 = C.DiagnosisCodeQualifier
                           ,R.POAIndicator15 = C.POAIndicator
                        from    #ResultSet R
                               ,Claim_Codes C
                        where   C.ClaimID = R.ClaimId
                                and C.AdjustmentVersion = R.AdjustmentVersion
                                and C.CodeType = 'DIAGNOSIS'
                                and C.Sequence = 15

                        update  R
                        set R.DiagnosisCode16 = left(C.Code, 10)
                           ,R.DiagnosisQualifier16 = C.DiagnosisCodeQualifier
                           ,R.POAIndicator16 = C.POAIndicator
                        from    #ResultSet R
                               ,Claim_Codes C
                        where   C.ClaimID = R.ClaimId
                                and C.AdjustmentVersion = R.AdjustmentVersion
                                and C.CodeType = 'DIAGNOSIS'
                                and C.Sequence = 16

                        update  R
                        set R.DiagnosisCode17 = left(C.Code, 10)
                           ,R.DiagnosisQualifier17 = C.DiagnosisCodeQualifier
                           ,R.POAIndicator17 = C.POAIndicator
                        from    #ResultSet R
                               ,Claim_Codes C
                        where   C.ClaimID = R.ClaimId
                                and C.AdjustmentVersion = R.AdjustmentVersion
                                and C.CodeType = 'DIAGNOSIS'
                                and C.Sequence = 17

                        update  R
                        set R.DiagnosisCode18 = left(C.Code, 10)
                           ,R.DiagnosisQualifier18 = C.DiagnosisCodeQualifier
                           ,R.POAIndicator18 = C.POAIndicator
                        from    #ResultSet R
                               ,Claim_Codes C
                        where   C.ClaimID = R.ClaimId
                                and C.AdjustmentVersion = R.AdjustmentVersion
                                and C.CodeType = 'DIAGNOSIS'
                                and C.Sequence = 18

                        update  R
                        set R.DiagnosisCode19 = left(C.Code, 10)
                           ,R.DiagnosisQualifier19 = C.DiagnosisCodeQualifier
                           ,R.POAIndicator19 = C.POAIndicator
                        from    #ResultSet R
                               ,Claim_Codes C
                        where   C.ClaimID = R.ClaimId
                                and C.AdjustmentVersion = R.AdjustmentVersion
                                and C.CodeType = 'DIAGNOSIS'
                                and C.Sequence = 19

                        update  R
                        set R.DiagnosisCode20 = left(C.Code, 10)
                           ,R.DiagnosisQualifier20 = C.DiagnosisCodeQualifier
                           ,R.POAIndicator20 = C.POAIndicator
                        from    #ResultSet R
                               ,Claim_Codes C
                        where   C.ClaimID = R.ClaimId
                                and C.AdjustmentVersion = R.AdjustmentVersion
                                and C.CodeType = 'DIAGNOSIS'
                                and C.Sequence = 20

                        update  R
                        set R.DiagnosisCode21 = left(C.Code, 10)
                           ,R.DiagnosisQualifier21 = C.DiagnosisCodeQualifier
                           ,R.POAIndicator21 = C.POAIndicator
                        from    #ResultSet R
                               ,Claim_Codes C
                        where   C.ClaimID = R.ClaimId
                                and C.AdjustmentVersion = R.AdjustmentVersion
                                and C.CodeType = 'DIAGNOSIS'
                                and C.Sequence = 21

                        update  R
                        set R.DiagnosisCode22 = left(C.Code, 10)
                           ,R.DiagnosisQualifier22 = C.DiagnosisCodeQualifier
                           ,R.POAIndicator22 = C.POAIndicator
                        from    #ResultSet R
                               ,Claim_Codes C
                        where   C.ClaimID = R.ClaimId
                                and C.AdjustmentVersion = R.AdjustmentVersion
                                and C.CodeType = 'DIAGNOSIS'
                                and C.Sequence = 22

                        update  R
                        set R.DiagnosisCode23 = left(C.Code, 10)
                           ,R.DiagnosisQualifier23 = C.DiagnosisCodeQualifier
                           ,R.POAIndicator23 = C.POAIndicator
                        from    #ResultSet R
                               ,Claim_Codes C
                        where   C.ClaimID = R.ClaimId
                                and C.AdjustmentVersion = R.AdjustmentVersion
                                and C.CodeType = 'DIAGNOSIS'
                                and C.Sequence = 23

                        update  R
                        set R.DiagnosisCode24 = left(C.Code, 10)
                           ,R.DiagnosisQualifier24 = C.DiagnosisCodeQualifier
                           ,R.POAIndicator24 = C.POAIndicator
                        from    #ResultSet R
                               ,Claim_Codes C
                        where   C.ClaimID = R.ClaimId
                                and C.AdjustmentVersion = R.AdjustmentVersion
                                and C.CodeType = 'DIAGNOSIS'
                                and C.Sequence = 24

                        update  #ResultSet
                        set DRG =
                                (
                                    select  left(C.Code, 10)
                                    from    Claim_Codes C
                                    where   C.ClaimID = #ResultSet.ClaimId
                                            and C.AdjustmentVersion = #ResultSet.AdjustmentVersion
                                            and C.CodeType = 'DRG'
                                            and #ResultSet.FormType = 'UB'
                                            and C.Sequence = 1
                                )

                    end -- of "if @ReturnDiagnosisCodes = 'Y' ..."			

                -- Add DefaultClaimBatch and WebClaim
                select  @DefaultInputBatchID = InputBatchID
                from    InputBatches
                where   SourceName = 'System Claim Batch'
                        and InputBatchStatus = 'OPN'

                update  RS
                set DefaultInputBatch = case RS.InputBatchID
                                             when @DefaultInputBatchID then 'Y'
                                             else 'N'
                                        end
                   ,WebClaim = case RS.SourceType
                                    when 'WEB' then 'Y'
                                    else 'N'
                               end
                from    #ResultSet RS

                --- Update the expense account info based on the entity type code
                update  RS
                set RS.ExpenseAccountNumber = A.AccountNumber
                   ,RS.ExpenseAccountName = A.AccountName
                from    #ResultSet RS
                        inner join BillingEntityMap BEM
                            on RS.DetailGroupID = BEM.EntityId
                               and BEM.EntityType = 'GRP'
                        inner join Accounts A
                            on A.AccountType = 'EXP'
                               and A.AccountID = BEM.EntityId
                where   RS.EntityTypeCode = 'BRK'
                option (recompile)

                update  RS
                set RS.ExpenseAccountNumber = A.AccountNumber
                   ,RS.ExpenseAccountName = A.AccountName
                from    #ResultSet RS
                        inner join Groups G
                            on RS.DetailGroupID = G.GroupId
                        inner join Accounts A
                            on A.AccountType = 'EXP'
                               and A.AccountID = G.CapitationExpenseAccountId
                where   RS.EntityTypeCode = 'CPT'
                option (recompile)

                --update RS set   --- No Longer any functionality around Supplemental Accounts
                --		RS.ExpenseAccountNumber = A.AccountNumber,
                --	RS.ExpenseAccountName = A.AccountName
                --from #Resultset RS 
                --	INNER JOIN Groups G ON RS.DetailGroupID = G.GroupID
                --	INNER JOIN Accounts A ON A.AccountType = 'EXP' AND A.AccountId = G.SupplementalExpenseAccountId
                --WHERE RS.EntityTypeCode = 'SUP'
                --OPTION (RECOMPILE)

                -- ???use account transactions table ???? what to do about line number for now  
                update  RS
                set RS.ExpenseAccountNumber = A.AccountNumber
                   ,RS.ExpenseAccountName = A.AccountName
                from    #ResultSet RS
                        inner join Groups G
                            on RS.DetailGroupID = G.GroupId
                        inner join EntityAccountMap EAM
                            on EAM.EntityID = G.GroupId
                               and EAM.EntityType = 'GRP'
                        inner join Accounts A
                            on EAM.AccountID = A.AccountID
                               and A.AccountType = 'EXP'
                where   RS.EntityTypeCode in ('MEM', 'PRV')
                option (recompile)
                ---------------------------------------------------------------------------------------------
                ---------------------------------------------------------------------------------------------


                ---
                --- figure out the top most group
                ---
                create table #TopMostGroups
                    (
                        RowId int identity
                       ,SubGroupId Id_t not null
                       ,TopGroupId Id_t null
                    )
                insert into #TopMostGroups
                    (
                        SubGroupId
                    )
                select  distinct
                        DetailGroupID
                from    #ResultSet
                where   DetailGroupID is not null

                select  @counter = 0
                select  @totalGroups = count(*)
                from    #TopMostGroups

                while @counter < @totalGroups
                    begin

                        select  @counter = @counter + 1

                        set @topGroupId =
                            (
                                select  SubGroupId
                                from    #TopMostGroups
                                where   RowId = @counter
                            )

                        while @topGroupId is not null
                            begin
                                if
                                    (
                                        select  ParentId
                                        from    Groups
                                        where   GroupId = @topGroupId
                                    ) is not null
                                    begin
                                        set @topGroupId =
                                            (
                                                select  ParentId
                                                from    Groups G
                                                where   GroupId = @topGroupId
                                            )
                                    end
                                else
                                    break
                            end ---of "while @counter < @totalGroups"

                        update  #TopMostGroups
                        set TopGroupId = @topGroupId
                        where   RowId = @counter

                    end ---of "while @counter < @totalGroups"

                update  RS
                set RS.TopGroupId = TG.TopGroupId
                   ,RS.TopGroupName = G.GroupName
                from    #ResultSet RS
                       ,#TopMostGroups TG
                       ,Groups G
                where   RS.DetailGroupID = TG.SubGroupId
                        and TG.TopGroupId = G.GroupId

                --
                -- get Explanation information
                --
                if @ReturnExplanationInfo = 'Y'
                    begin

                        -- update explanation fields
                        update  RS
                        set RS.ExplanationCode = E.ExplanationCode
                           ,RS.ExplanationAbbreviation = E.Abbreviation
                           ,RS.Explanation = replace(
                                                        replace(
                                                                   replace(
                                                                              replace(
                                                                                         replace(E.Explanation, '<PARAM5>', isnull(CEM.Parameter5, ''))
                                                                                        ,'<PARAM4>'
                                                                                        ,isnull(CEM.Parameter4, '')
                                                                                     )
                                                                             ,'<PARAM3>'
                                                                             ,isnull(CEM.Parameter3, '')
                                                                          )
                                                                  ,'<PARAM2>'
                                                                  ,isnull(CEM.Parameter2, '')
                                                               )
                                                       ,'<PARAM1>'
                                                       ,isnull(CEM.Parameter1, '')
                                                    )
                           ,RS.ExplanationCategoryId = E.ExplanationCategoryId
                           ,RS.ExplanationCategoryName = EC.ExplanationCategoryName
                        from    #ResultSet RS
                                inner join Explanations E
                                    on E.ExplanationId = RS.ExplanationId
                                inner join ExplanationCategories EC
                                    on EC.ExplanationCategoryId = E.ExplanationCategoryId
                                left join ClaimExplanationMap CEM
                                    on CEM.ClaimId = RS.ClaimId
                                       and CEM.AdjustmentVersion = RS.AdjustmentVersion
                                       and CEM.LineNumber = RS.LineNumber
                                       and CEM.ExplanationId = RS.ExplanationId
                        where   RS.ExplanationId is not null

                        -- update claim explanation fields
                        update  RS
                        set RS.ClaimExplanationCode = E.ExplanationCode
                           ,RS.ClaimExplanationAbbreviation = E.Abbreviation
                           ,RS.ClaimExplanation = replace(
                                                             replace(
                                                                        replace(
                                                                                   replace(
                                                                                              replace(E.Explanation, '<PARAM5>', isnull(CEM.Parameter5, ''))
                                                                                             ,'<PARAM4>'
                                                                                             ,isnull(CEM.Parameter4, '')
                                                                                          )
                                                                                  ,'<PARAM3>'
                                                                                  ,isnull(CEM.Parameter3, '')
                                                                               )
                                                                       ,'<PARAM2>'
                                                                       ,isnull(CEM.Parameter2, '')
                                                                    )
                                                            ,'<PARAM1>'
                                                            ,isnull(CEM.Parameter1, '')
                                                         )
                           ,RS.ClaimExplanationCategoryId = E.ExplanationCategoryId
                           ,RS.ClaimExplanationCategoryName = EC.ExplanationCategoryName
                        from    #ResultSet RS
                                inner join Explanations E
                                    on E.ExplanationId = RS.ClaimExplanationId
                                inner join ExplanationCategories EC
                                    on EC.ExplanationCategoryId = E.ExplanationCategoryId
                                left join ClaimExplanationMap CEM
                                    on CEM.ClaimId = RS.ClaimId
                                       and CEM.AdjustmentVersion = RS.AdjustmentVersion
                                       and CEM.LineNumber = RS.LineNumber
                                       and CEM.ExplanationId = RS.ExplanationId
                        where   RS.ClaimExplanationId is not null

                    end --of: if @ReturnExplanationInfo = 'Y'

                ---
                --- Get the Risk Group information
                ---					  
                if @ReturnRiskGroupInfo = 'Y'
                    begin

                        update  R
                        set R.RiskGroupID = RG.RiskGroupId
                           ,R.RiskGroupName = RG.RiskGroupName
                           ,R.RiskGroupDescription = RG.RiskGroupDescription
                           ,R.RiskGroupNumber = RG.RiskGroupNumber
                           ,R.RiskGroupClassCode = RG.RiskGroupClass
                           ,R.RiskGroupSubclassCode = RG.RiskGroupSubclass
                           ,R.RiskGroupVendorClassCode = RGV.Class
                           ,R.RiskGroupVendorSubClassCode = RGV.SubClass
                           ,R.RiskGroupVendorDescription = RGV.Description
                        from    #ResultSet R
                                inner join RiskGroupVendorMap RGV
                                    on R.RiskGroupVendorMapID = RGV.RiskGroupVendorMapId
                                inner join RiskGroups RG
                                    on RGV.RiskGroupId = RG.RiskGroupId

                        update  R
                        set R.RiskGroupVendorClass = RC.Name
                        from    #ResultSet R
                                inner join ReferenceCodes RC
                                    on R.RiskGroupVendorClassCode = RC.Code
                        where   RC.Type = 'RiskGroupEntityClass'

                        update  R
                        set R.RiskGroupvendorSubClass = RC.Name
                        from    #ResultSet R
                                inner join ReferenceCodes RC
                                    on R.RiskGroupVendorSubClassCode = RC.Code
                        where   RC.Type = 'RiskGroupEntitySubClass'

                        update  RS
                        set RS.RiskGroupClass = R.Name
                        from    #ResultSet RS
                               ,ReferenceCodes R
                        where   R.Code = RS.RiskGroupClassCode
                                and R.Type = 'RiskGroupClass'
                                and R.Subtype = 'RiskGroupClass'

                        update  RS
                        set RS.RiskGroupSubclass = R.Name
                        from    #ResultSet RS
                               ,ReferenceCodes R
                        where   R.Code = RS.RiskGroupSubclassCode
                                and R.Type = 'RiskGroupSubclass'
                                and R.Subtype = 'RiskGroupSubclass'

                        if @RiskGroupID is not null
                            begin
                                delete  from #ResultSet
                                where   RiskGroupID is null
                                        or  RiskGroupID != @RiskGroupID
                            end

                        if @RiskGroupClass is not null
                            begin
                                delete  from #ResultSet
                                where   RiskGroupClass is null
                                        or  RiskGroupClassCode != @RiskGroupClass
                            end

                        if @RiskGroupSubClass is not null
                            begin
                                delete  from #ResultSet
                                where   RiskGroupSubclass is null
                                        or  RiskGroupSubclassCode != @RiskGroupSubClass
                            end

                        if @RiskGroupVendorClass is not null
                            begin
                                delete  from #ResultSet
                                where   RiskGroupVendorClassCode is null
                                        or  RiskGroupVendorClassCode != @RiskGroupVendorClass
                            end

                        if @RiskGroupVendorSubClass is not null
                            begin
                                delete  from #ResultSet
                                where   RiskGroupVendorSubClassCode is null
                                        or  RiskGroupVendorSubClassCode != @RiskGroupVendorSubClass
                            end

                    end -- if @ReturnRiskGroupInfo = 'Y'

                ---
                ---Get the PCP Information
                ---
                if @ReturnPCPInfo = 'Y'
                    begin
                        --Update main resultset with the PCP of the service date
                        update  RS
                        set RS.MemberProviderMapId = PCP.MemberProviderID
                           ,RS.PCPContractId = C.ContractId
                           ,RS.PCPContractName = C.ContractName
                           ,RS.PCPProviderId = P.ProviderID
                           ,RS.PCPOfficeId = O.OfficeID
                           ,RS.PCPRiskGroupId = RG.RiskGroupId
                           ,RS.PCPHospitalId = P2.ProviderID
                           ,RS.PCPEffectiveDate = PCP.EffectiveDate
                           ,RS.PCPExpirationDate = PCP.ExpirationDate
                           ,RS.PCPPrecedence = PCP.Precedence
                           ,RS.PCPLastName = P.LastName
                           ,RS.PCPFirstName = P.FirstName
                           ,RS.PCPProviderNumber = P.ProviderNumber
                           ,RS.PCPOfficeNumber = O.OfficeNumber
                           ,RS.PCPOfficeName = O.OfficeName
                           ,RS.PCPOfficeAddress = O.Address1
                           ,RS.PCPOfficeAddress2 = O.Address2
                           ,RS.PCPOfficeCity = O.City
                           ,RS.PCPOfficeState = O.State
                           ,RS.PCPOfficeZip = O.Zip
                           ,RS.PCPRiskGroupName = RG.RiskGroupName
                           ,RS.PCPRiskGroupNumber = RG.RiskGroupNumber
                           ,RS.PCPRiskGroupClass = RG.RiskGroupClass
                           ,RS.PCPRiskGroupSubclass = RG.RiskGroupSubclass
                           ,RS.PCPHospitalName = isnull(P2.FirstName + ' ', '') + P2.LastName
                           ,RS.PCPHospitalNumber = P2.ProviderNumber
                           ,RS.PCPHospitalNPI = P2.NPI
                        from    #ResultSet RS
                                inner join MemberProviderMap PCP
                                    on RS.SubscriberContractID = PCP.SubscriberContractID
                                       and RS.MemberId = PCP.MEmberID
                                       and RS.ServiceDateFrom
                                       between PCP.EffectiveDate
                                       and     PCP.ExpirationDate
                                       and PCP.Precedence = 'P'
                                inner join Providers P
                                    on PCP.ProviderId = P.ProviderID
                                inner join Offices O
                                    on PCP.OfficeID = O.OfficeID
                                inner join Contracts C
                                    on PCP.ContractID = C.ContractId
                                left outer join RiskGroups RG
                                    on PCP.RiskGroupID = RG.RiskGroupId
                                left outer join Providers P2
                                    on PCP.HospitalID = P2.ProviderID
                                       and P2.Hospital = 'Y'
                        where   RS.RecordDetailType in ('A', 'CA', 'MPD', 'IP', 'AIP', 'AIA', 'INF')


                        update  R
                        set PCPPrecedenceName = RC.Name
                        from    ReferenceCodes RC
                               ,#ResultSet R
                        where   RC.Type = 'PRIMARYCOVERAGE'
                                and RC.Code = R.PCPPrecedence

                        update  RS
                        set RS.PCPRiskGroupClassName = R.Name
                        from    #ResultSet RS
                                inner join ReferenceCodes R
                                    on R.Code = RS.PCPRiskGroupClass
                                       and R.Type = 'RiskGroupClass'
                                       and R.Subtype = 'RiskGroupClass'

                        update  RS
                        set RS.PCPRiskGroupSubclassName = R.Name
                        from    #ResultSet RS
                                inner join ReferenceCodes R
                                    on R.Code = RS.PCPRiskGroupSubclass
                                       and R.Type = 'RiskGroupSubclass'
                                       and R.Subtype = 'RiskGroupSubclass'

                        --get provider contract number
                        update  R
                        set R.PCPProviderContractNumber = PCM.ProviderContractNumber
                        from    #ResultSet R
                               ,ProviderContractMap PCM
                        where   R.PCPProviderId = PCM.ProviderId
                                and PCM.ContractId = R.PCPContractId
                                and
                                    (
                                        PCM.OfficeID is null
                                        or  R.PCPOfficeId = PCM.OfficeID
                                    )
                                and
                                    (
                                        (
                                            R.PCPRiskGroupId is null
                                            and PCM.RiskGroupId is null
                                        )
                                        or
                                            (
                                                R.PCPRiskGroupId is not null
                                                and PCM.RiskGroupId is not null
                                                and R.PCPRiskGroupId = PCM.RiskGroupId
                                            )
                                    )
                                and
                                    (
                                        (
                                            R.PCPHospitalId is null
                                            and PCM.HospitalId is null
                                        )
                                        or
                                            (
                                                R.PCPHospitalId is not null
                                                and PCM.HospitalId is not null
                                                and R.PCPHospitalId = PCM.HospitalId
                                            )
                                    )
                                and PCM.AllowPanelAssignment = 'Y'
                                and
                                    (
                                        (getdate()
                                between PCM.EffectiveDate
                                and     PCM.ExpirationDate
                                        )
                                        or  (R.PCPExpirationDate
                                between PCM.EffectiveDate
                                and     PCM.ExpirationDate
                                            )
                                    )

                    end


                --filter results based on the ContractID filter
                if @ContractID is not null
                    begin
                        delete  from #ResultSet
                        where   ContractID is null
                                or  ContractID != @ContractID
                    end

            end --- of "If @Usage in ('|ONEDETAILLEVEL|', '|TWODETAILLEVELS|')"

        if @Usage = '|CHECKSONLY|'
            begin
                update  #ResultSet
                set LevyId =
                        (
                            select  top 1
                                    R2.ReferenceNumber
                            from    RecordDetails RD
                                   ,Records R2
                            where   #ResultSet.RecordID = RD.RecordID
                                    and RD.ItemType in ('LVW', 'LVP')
                                    and RD.ItemID = R2.RecordID
                        )
                where   EntityTypeCode = 'LVY'

                update  R
                set R.LevyNumber = L.LevyNumber
                   ,R.ExternalLevyNumber = L.ExternalLevyNumber
                   ,R.LevyDescription = L.Description
                from    #ResultSet R
                       ,Levies L
                where   R.LevyId = L.LevyId
            end
        else
            begin
                update  R
                set R.LevyId = L.LevyId
                   ,R.LevyNumber = L.LevyNumber
                   ,R.ExternalLevyNumber = L.ExternalLevyNumber
                   ,R.LevyDescription = L.Description
                from    #ResultSet R
                       ,Levies L
                where   R.ReferenceNumber = L.LevyId
                        and R.RecordTypeCode in ('LVW', 'LVP')
            end

        update  R
        set R.ExternalMethodOfPayment = RC.Name
        from    #ResultSet R
               ,ReferenceCodes RC
        where   R.ExternalMethodOfPaymentCode = RC.Code
                and RC.Type = 'ExternalMethodOfPayment'

        update  RS
        set RS.UnclaimedPropertyVendorId = V.VendorId
           ,RS.UnclaimedPropertyVendorName = V.VendorName
           ,RS.UnclaimedPropertyVendorNo = V.VendorNumber
        from    #ResultSet RS
               ,Records R
               ,RecordDetails RD
               ,EntityAccountMap EAM
               ,Vendors V
        where   RS.CheckAmount = 0
                and RS.RecordDetailType = 'UVW'
                and R.RecordID = RD.ItemID
                and RD.RecordID = RS.RecordDetailId
                and EAM.AccountID = R.ParentAccountID
                and EAM.EntityType = 'VDR'
                and V.VendorId = EAM.EntityID

        update  R
        set R.RecordDetailName = RC.Name
        from    #ResultSet R
               ,ReferenceCodes RC
        where   R.RecordDetailType = RC.Code
                and RC.Type = 'RECORDTYPE'

        update  R
        set R.FormType = RC.Name
        from    #ResultSet R
               ,ReferenceCodes RC
        where   R.FormTypeCode = RC.Code
                and RC.Type = 'FORMTYPE'

        update  R
        set R.PaymentClass = RC.Name
        from    #ResultSet R
               ,ReferenceCodes RC
        where   R.PaymentClassCode = RC.Code
                and RC.Type = 'PaymentClass'

        update  R
        set R.ContractName = C.ContractName
        from    #ResultSet R
               ,Contracts C
        where   R.ContractID = C.ContractId

        update  R
        set R.CompanyID = CA.CompanyId
        from    #ResultSet R
                inner join #CashAccounts CA
                    on R.CashAccountId = CA.CashAccountId

        update  R
        set R.CompanyName = C.CompanyName
        from    #ResultSet R
               ,Companies C
        where   R.CompanyID = C.CompanyID


        ---
        --- update PeriodStart and periodEnd
        ---
        update  #ResultSet
        set PeriodStart = @StartDate
           ,PeriodEnd = @EndDate

        if @ShowWriteOffs = 'Y'
            begin
                update  R
                set R.WriteOffReason = RC.Name
                from    #ResultSet R
                       ,ReferenceCodes RC
                where   R.WriteOffReasonCode = RC.Code
                        and RC.Type = 'WriteOffReason'
            end

        -- update zip region
        if @ReturnOfficeInfo = 'Y'
            begin
                update  #ResultSet
                set OfficeRegion = ZC.Region
                   ,OfficeCounty = ZC.County
                from    ZipCodes ZC
                       ,#ResultSet RS
                where   ZC.Zip = RS.OfficeZipSearch
            end

        if @ReturnMemberInfo = 'Y'
            begin
                update  #ResultSet
                set PatientRegion = Region
                from    ZipCodes ZC
                       ,#ResultSet RS
                where   ZC.Zip = RS.PatientZipSearch
            end
        update  R
        set R.ExternalCheckCurrencyName = RC.Name
        from    #ResultSet R
               ,ReferenceCodes RC
        where   RC.Type = 'CURRENCY'
                and RC.Subtype = 'CURRENCY'
                and R.ExternalCheckCurrency = RC.Code

        if @ReturnVendorInfo = 'Y'
            begin
                update  R
                set R.VendorClassName = RC.Name
                from    #ResultSet R
                       ,ReferenceCodes RC
                where   RC.Code = R.VendorClass
                        and RC.Type = 'VendorClass'
                        and RC.Subtype = 'VendorClass'

                update  R
                set R.VendorSubclassName = RC.Name
                from    #ResultSet R
                       ,ReferenceCodes RC
                where   RC.Code = R.VendorSubClass
                        and RC.Type = 'VendorSubClass'
                        and RC.Subtype = 'VendorSubClass'
            end

        update  R
        set R.InitialAdjudicationDate = CM.LastUpdatedAt
        from    #ResultSet R
               ,Claim_Master CM
        where   R.ClaimId = CM.ClaimID
                and R.InitialAdjudicationVersion = CM.AdjustmentVersion

        if isnull(@SysOptEntityAttrValues, '') != ''
            begin

                insert into #ReportDistinctClaimIds
                    (
                        ClaimID
                    )
                select  distinct
                        ClaimId
                from    #ResultSet
                where   ClaimId is not null

            end -- end of If isnull(@SysOptEntityAttrValues,'') != ''	


        update  R
        set R.LastUpdatedByName = left(U.FirstName + ' ' + U.LastName, 60)
        from    #ResultSet R
               ,Users U
        where   R.LastUpdatedBy = U.UserID

        --fl034014
        update  R
        set PaymentWizardJobNumber = P.JobNumber
           ,CheckPackageName = CP.CheckPackageName
           ,CheckPackageId = CP.CheckPackageID
           ,PaymentWizardJobName = P.JobName
           ,PaymentWizardJobDescription = P.JobDescription
           ,PaymentWizardJobType = P.JobType
           ,PaymentWizardProcessingStatus = P.ProcessingStatus
           ,PaymentWizardFulfillmentType = P.FulfillmentType
           ,PaymentWizardJobCheckDate = P.CheckDate
        from    #ResultSet R
               ,PaymentWizardJobs P
               ,CheckPackages CP
        where   R.PaymentWizardJobId = P.JobId
                and P.CheckPackageId = CP.CheckPackageID

        update  RS
        set PaymentWizardJobTypeName = Name
        from    #ResultSet RS
               ,ReferenceCodes RC
        where   RS.PaymentWizardJobType = RC.Code
                and RC.Type = 'PaymentWizardJobType'

        update  RS
        set PaymentWizardProcessingStatusName = Name
        from    #ResultSet RS
               ,ReferenceCodes RC
        where   RS.PaymentWizardProcessingStatus = RC.Code
                and RC.Type = 'PaymentWizardJobStatus'

        update  RS
        set PaymentWizardFulfillmentTypeName = Name
        from    #ResultSet RS
               ,ReferenceCodes RC
        where   RS.PaymentWizardFulfillmentType = RC.Code
                and RC.Type = 'Fulfillment'

        update  RS
        set RateCoverageTypeName = RC.Name
        from    #ResultSet RS
                inner join ReferenceCodes RC
                    on RS.RateCoverageType = RC.Code
                       and RC.Type = 'RateCoverageType'
                       and Subtype = 'RateCoverageType'

        update  RS
        set QualifierName = case when RateCoverageType = 'MQL' then
                                     (
                                         select QI.QualifierItemName
                                         from   QualifierItems QI
                                         where  QI.QualifierItemId = RS.QualifierId
                                     )
                                 when RateCoverageType = 'PQL' then
                                     (
                                         select RC.Name
                                         from   ReferenceCodes RC
                                         where  RC.ReferenceCodeID = RS.QualifierId
                                     )
                                 else null
                            end
        from    #ResultSet RS

        --get the plan for the member qualifier
        update  RS
        set RS.QualifierPlanId = BP.PlanID
           ,RS.QualifierPlanName = BP.PlanName
        from    #ResultSet RS
                inner join QualifierItems QI
                    on QI.QualifierItemId = RS.QualifierId
                inner join BasePlans BP
                    on QI.PlanId = BP.PlanID
        where   RS.RateCoverageType = 'MQL'


        exec @internal = ii_CheckEntityAccess @EntityType = '|GRP|MEM|'
                                             ,@UserId = @UserId
                                             ,@ResultSetTable = '#ResultSet'
                                             ,@ProductName = @ProductName
                                             ,@SessionId = @SessionID
                                             ,@ProcedureName = @ProcedureName
                                             ,@UserReportID = @UserReportID
                                             ,@TotalCount = @FullRowCount out
                                             ,@PermittedCount = @PermittedCount out
                                             ,@RestrictedCount = @RestrictedCount out
                                             ,@ErrorMsg = @ErrorMsg out

        select  @error = @@error

        if @error != 0
            begin
                select  @UserMsg = 'Could not check entity based access. Contact your system administrator.'
                select  @LogMsg = 'Call to ii_CheckEntityAccess failed.'
                raiserror(65500, 17, 1, @ProductName, @ProcedureName, 5, @UserMsg, @LogMsg, @SessionID, @error, -1, -1)
                goto ServerErrorExit
            end
        else if @internal != 0
                 begin
                     select @UserMsg = @ErrorMsg
                     select @LogMsg = 'ii_CheckEntityAccess returned error.' + @ErrorMsg
                     raiserror(65500, 1, 1, @ProductName, @ProcedureName, 5, @UserMsg, @LogMsg, @SessionID, @error, 1, 1)
                     if @internal = 1
                         goto BusinessErrorExit
                     else if @internal = 2
                         goto ServerErrorExit
                     else if @internal = 3
                         goto AppErrorExit
                 end


        select  @Total = count(*)
        from    #ResultSet

    end


NormalExit:
select  @status = 0
if @ReturnStatus = 'Y'
    begin
        if isnull(@SysOptEntityAttrValues, '') != ''
            begin
                select  'Status' = @status
                       ,'Total' = @Total
                       ,'TotalResultsets' = 2
                       ,'Resultset1' = 'MAIN'
                       ,'Resultset2' = 'ENTITYATTRIBUTES'
            end
        else
            begin
                select  'Status' = @status
                       ,'Total' = @Total
                       ,'TotalResultsets' = 1
                       ,'Resultset1' = 'MAIN'
            end
    end

if (
       @ResultsetName is null
       or   @ResultsetName = 'MAIN'
   )
    begin

        -- If the variable was not set to 1 than the procedure is executing for 
        -- a Standard report type -> the order by clauses can be safely appended to the 
        -- @sql string. 
        if @IncludeOrderByClause <> 1
            begin
                if @ShowVoidedChecks = 'Y'
                    select  @sql = @sql + ' order by RS.CheckDate, RS.CheckID'
                else
                    select  @sql = @sql + ' order by RS.CheckDate'
            end -- @IncludeOrderByClause <> 1

        exec (@sql)

        select  @error = @@error
        if @error != 0
            begin
                select  @msg1 = 'Error retrieving Check Data. Contact your system administrator.'
                select  @msg2 = 'Get Check Data failed.'
                raiserror(65500, 1, 1, 'Meditrac', 'rr_ExportCheckData', 3, @msg1, @msg2, @SessionID, @error, -1, -1)
                goto ServerErrorExit
            end
    end

if (
       @ResultsetName is null
       or   @ResultsetName = 'ENTITYATTRIBUTES'
   )
   and  isnull(@SysOptEntityAttrValues, '') != ''
    begin

        exec (@SQLAttr)

        select  @error = @@error

        if @error != 0
            begin
                select  @msg1 = 'Error retrieving Claim Entity Attributes. Contact your system administrator.'
                select  @msg2 = 'Get Claim Entity Attributes failed.'
                raiserror(65500, 1, 1, 'Meditrac', 'rr_GetClaimData', 3, @msg1, @msg2, @SessionID, @error, -1, -1)
                goto ServerErrorExit
            end

    end

return @status


BusinessErrorExit:
select  @status = 1
select  'Status' = @status
       ,'ErrorMsg' = @UserMsg
return @status


ServerErrorExit:
select  @status = 2
select  'Status' = @status
return @status


AppErrorExit:
select  @status = 3
select  'Status' = @status
return @status

go
